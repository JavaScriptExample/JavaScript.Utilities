<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNet2.Utilities</name>
    </assembly>
    <members>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.AttributeHelper">
            <summary>
            Attribute 帮助类
            </summary>
            时间：2016-01-12 15:17
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AttributeHelper.GetCustom``2">
            <summary>
            获取自定义Attribute
            </summary>
            <typeparam name="TModel">泛型</typeparam>
            <typeparam name="TAttribute">泛型</typeparam>
            <returns>未获取到则返回NULL</returns>
            时间：2016-01-12 15:22
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ComparisonHelper`1">
            <summary>
            比较辅助类，用于快速创建<see cref="T:System.Collections.Generic.IComparer`1"/>接口的实例
            </summary>
            <example>
            var comparer1 = Comparison[Person].CreateComparer(p => p.ID); var comparer2 = Comparison[Person].CreateComparer(p => p.Name); var comparer3 = Comparison[Person].CreateComparer(p => p.Birthday.Year)
            </example>
            <typeparam name="T"> </typeparam>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ComparisonHelper`1.CreateComparer``1(System.Func{`0,``0})">
            <summary>
            创建指定对比委托<paramref name="keySelector"/>的实例
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ComparisonHelper`1.CreateComparer``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            创建指定对比委托<paramref name="keySelector"/>与结果二次比较器<paramref name="comparer"/>的实例
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.DataHelper">
            <summary>
            数据辅助操作类
            </summary>
            时间：2016-02-25 12:00
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.CreateSqlServerConnectString(System.String,System.String,System.String,System.String)">
            <summary>
            创建Sql Server身份认证连接字符串
            </summary>
            <param name="server">服务器</param>
            <param name="database">数据库</param>
            <param name="userName">用户名</param>
            <param name="password">密码</param>
            <returns>Sql Server身份认证连接字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.CreateSqlServerConnectString(System.String,System.String)">
            <summary>
            创建Sql Server Windows身份认证连接字符串
            </summary>
            <param name="server">服务器</param>
            <param name="datatabase">数据库</param>
            <returns>Sql Server Windows身份认证连接字符串</returns>
            时间：2016-02-26 9:21
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.CreateTable(System.String)">
            <summary>
            创建Datatable，规范：列名|列类型,列名|列类型,列名|列类型
            <para>举例：CustomeName|string,Gender|bool,Address</para>
            </summary>
            <param name="columnsInfo">创建表的字符串规则信息</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.FilterHtmlTag(System.String)">
            <summary>
            过滤HTML标记
            </summary>
            <param name="data">包括HTML，脚本，数据库关键字，特殊字符的源码 </param>
            <returns>已经去除标记后的文字</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.FilterSpecial(System.String)">
            <summary>
            过滤特殊字符
            </summary>
            <param name="data">字符串</param>
            <returns>过滤后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.FilterSqlInject(System.String)">
            <summary>
            过滤SQL语句字符串中的注入脚本
            </summary>
            <param name="data">传入的字符串</param>
            <returns>过滤后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.FilterSqlInjection(System.String)">
            <summary>
            SQL注入筛选
            </summary>
            <param name="str">sql语句</param>
            <returns>SQL注入筛选</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.FilterString(System.String)">
            <summary>
            过滤字符串【HTML标记，敏感SQL操作关键，特殊字符】
            </summary>
            <param name="data">字符串</param>
            <returns>处理后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.FilterUnSafeSQL(System.String)">
            <summary>
            过滤SQL不安全的字符串
            </summary>
            <param name="data">字符串</param>
            <returns>过滤后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.GetSqlExceptionMessage(System.Data.SqlClient.SqlException)">
            <summary>
            由错误码返回指定的自定义SqlException异常信息
            </summary>
            <param name="sqlException">SqlException</param>
            <returns>SqlException异常信息</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.GetSqlExceptionMessage(System.Int32)">
            <summary>
            由错误码返回指定的自定义SqlException异常信息
            <para>DataHelper.GetSqlExceptionMessage(sqlEx.Number);</para>
            </summary>
            <param name="number">错误标识数字 </param>
            <returns>描述信息 </returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.GetSumByColumn(System.Data.DataTable,System.String)">
            <summary>
            DataTable的列求和
            </summary>
            <param name="datatable">DataTable</param>
            <param name="sumColumnName">sum的列</param>
            <returns>计算的值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.GetSumByGroup(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            DataTable的group by sum计算
            <para>eg:eg:DBHelper.GroupByToSum(_dt, "CTLampType", "钠灯- 100W", "CTLastMonthCount");</para>
            </summary>
            <param name="datatable">DataTable</param>
            <param name="gColumnName">分组字段名称</param>
            <param name="gValue">分组数值</param>
            <param name="sColumnName">求和字段名称</param>
            <returns>object</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.ParseConnnectString(System.String)">
            <summary>
            将连接字符串转换成字典
            </summary>
            <param name="connectString">The connect string.eg:IP=127.0.0.1; DataSource=YanZhiwei-PC;User=sa;Password=sasa;DataBase=NorthWind</param>
            <returns>字典IDictionary</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.ParseList``1(System.Collections.Generic.List{``0})">
            <summary>
            将LIST集合转换对应的DataTable
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="data">集合</param>
            <returns>将LIST集合转换对应的DataTable</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.ToCSV(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            将DataTable导出到CSV.
            </summary>
            <param name="table">DataTable</param>
            <param name="fullSavePath">保存路径</param>
            <param name="tableheader">标题信息</param>
            <param name="columname">列名称『eg:姓名,年龄』</param>
            <returns>导出成功true;导出失败false</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.ToEntitys``1(System.Data.IDataReader)">
            <summary>
            将IDataReader转换成List
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="dataReader">IDataReader</param>
            <returns>集合</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.CreateColumns(System.ComponentModel.PropertyDescriptorCollection,System.Data.DataTable)">
            <summary>
            创建列
            </summary>
            <param name="property">属性</param>
            <param name="dataTable">DataTable</param>
            <returns>DataTable</returns>：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.FillRow``1(System.Collections.Generic.IList{``0},System.ComponentModel.PropertyDescriptorCollection,System.Data.DataTable)">
            <summary>
            填充数据.
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="data">集合数据</param>
            <param name="property">属性</param>
            <param name="dataTable">DataTable</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataHelper.TransColumnType(System.String)">
            <summary>
            转义数据类型
            </summary>
            <param name="columnType">列类型</param>
            <returns>转义后实际数据类型</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.DataSetHelper">
            <summary>
            DataSet 帮助类
            </summary>
            时间：2016-01-05 13:18
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataSetHelper.IsNullOrEmpty(System.Data.DataSet)">
            <summary>
            判断DataSet是否是NULL或者没有DataTable
            </summary>
            <param name="dataset">The dataset.</param>
            <returns></returns>
            时间：2016-01-05 13:19
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.DataTableHelper">
            <summary>
            DataTable 帮助类
            </summary>
            时间：2016-01-05 13:13
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DataTableHelper.IsNullOrEmpty(System.Data.DataTable)">
            <summary>
            判断DataTable是否是NULL或者Row行数等于零
            </summary>
            <param name="datatable">DataTable</param>
            <returns>否是NULL或者Row行数等于零</returns>
            时间：2016-01-05 13:15
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.DbParameterHelper">
            <summary>
            DbParameter帮助类
            </summary>
            时间：2016-01-29 17:11
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DbParameterHelper.HanlderNull(System.Data.Common.DbParameter)">
            <summary>
            处理当参数值等于NULL的时候引发的bug，
            赋值等于DBNull.Value
            </summary>
            <param name="paramter">DbParameter</param>
            <returns>DbParameter</returns>
            时间：2016-01-29 17:11
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.EqualityHelper`1">
            <summary>
            相等比较辅助类，用于快速创建<see cref="T:System.Collections.Generic.IEqualityComparer`1"/>的实例
            </summary>
            <example>
            var equalityComparer1 = EqualityHelper[Person].CreateComparer(p => p.ID);
            var equalityComparer2 = EqualityHelper[Person].CreateComparer(p => p.Name);
            var equalityComparer3 = EqualityHelper[Person].CreateComparer(p => p.Birthday.Year);
            </example>
            <typeparam name="T"> </typeparam>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EqualityHelper`1.CreateComparer``1(System.Func{`0,``0})">
            <summary>
            创建指定对比委托<paramref name="keySelector"/>的实例
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EqualityHelper`1.CreateComparer``1(System.Func{`0,``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            创建指定对比委托<paramref name="keySelector"/>与结果二次比较器<paramref name="comparer"/>的实例
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.FrameworkExceptionHelper">
            <summary>
            FrameworkException 辅助类
            </summary>
            时间：2016-02-26 13:16
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FrameworkExceptionHelper.ParseInnerDataToXmlString(YanZhiwei.DotNet2.Utilities.Core.FrameworkException)">
            <summary>
            将InnerException.Data转换为Xml字符串
            <para>不支持Data中Value是集合数组形式存储</para>
            </summary>
            <param name="frameworkException">FrameworkException</param>
            <returns>Xml字符串</returns>
            时间：2016-02-26 13:19
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.IDbCommandHelper">
            <summary>
            IDbCommand帮助类
            </summary>
            时间：2016-03-30 10:44
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.IDbCommandHelper.GetGeneratedQuery(System.Data.IDbCommand)">
            <summary>
            从IDbCommand获取完整Sql
            </summary>
            <param name="cmd">IDbCommand</param>
            <returns>sql语句</returns>
            时间：2016-03-30 10:45
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.MD5EncryptHelper">
            <summary>
            MD5加密帮助类
            </summary>
            时间：2015-11-06 9:22
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MD5EncryptHelper.EqualsRandomMD5(System.String,System.Guid)">
            <summary>
            验证随机加密的MD5
            </summary>
            <param name="data">需要判断的字符串</param>
            <param name="rmd5">MD5 GUID</param>
            <returns>是否相等</returns>
            时间：2015-11-06 9:24
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MD5EncryptHelper.ToRandomMD5(System.String)">
            <summary>
            生成随机加密的
            </summary>
            <param name="data">需要加密字符串</param>
            <returns>MD5加密Guid</returns>
            时间：2015-11-06 9:20
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ADDomainHelper">
            <summary>
            AD域帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.ADDomainHelper.ADDomian">
            <summary>
            域名称
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.ADDomainHelper.UserName">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.ADDomainHelper.UserPassword">
            <summary>
            用户密码
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ADDomainHelper.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="domain">域名称</param>
            <param name="userName">用户名称</param>
            <param name="userPassword">用户密码</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ADDomainHelper.GetGroups">
            <summary>
            取用户所对应的用户组
            </summary>
            <returns>集合</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ADDomainHelper.Login">
            <summary>
            登陆域
            </summary>
            <returns>登陆是否成功</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.DecimalHelper">
            <summary>
            Decimal 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DecimalHelper.CalcPercentage(System.Decimal,System.Decimal)">
            <summary>
            计算百分比(保持两位小数)
            </summary>
            <param name="value">The value.</param>
            <param name="total">The total.</param>
            <returns>百分比</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DecimalHelper.ToMoney(System.Decimal)">
            <summary>
            转换成钱表示形式（保持两位小数）
            </summary>
            <param name="data">The data.</param>
            <returns>保持两位小数</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.Double">
            <summary>
            Double 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.Double.CalcPercentage(System.Double,System.Double)">
            <summary>
            计算百分比(保持两位小数)
            </summary>
            <param name="value">The value.</param>
            <param name="total">The total.</param>
            <returns>double</returns>
            日期：2015-09-16 13:57
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.Double.ToMoney(System.Double)">
            <summary>
            转换成钱表示形式（保持两位小数）
            </summary>
            <param name="data">The data.</param>
            <returns>double</returns>
            日期：2015-09-16 13:57
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.EventHandlerHelper">
            <summary>
            EventHandler 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EventHandlerHelper.Raise(System.EventHandler,System.Object,System.EventArgs)">
            <summary>
            触发事件
            </summary>
            <param name="handler">The handler.</param>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            日期：2015-09-16 14:02
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EventHandlerHelper.RaiseEvent(System.EventHandler,System.Object)">
            <summary>
            触发事件
            </summary>
            <param name="eventHanlder">The event hanlder.</param>
            <param name="sender">The sender.</param>
            日期：2015-09-16 14:02
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EventHandlerHelper.RaiseEvent``1(System.EventHandler{``0},System.Object)">
            <summary>
            触发事件
            </summary>
            <typeparam name="TEventArgs">The type of the event arguments.</typeparam>
            <param name="eventHanlder">The event hanlder.</param>
            <param name="sender">The sender.</param>
            日期：2015-09-16 14:02
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EventHandlerHelper.RaiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            触发事件
            </summary>
            <typeparam name="TEventArgs">The type of the event arguments.</typeparam>
            <param name="eventHanlder">The event hanlder.</param>
            <param name="sender">The sender.</param>
            <param name="e"> instance containing the event data.</param>
            日期：2015-09-16 14:02
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ExifHelper">
            <summary>
            获取照片Exif信息
            </summary>
            时间：2015-09-15 8:59
            备注：
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.exifMataData">
            <summary>
            exif 数据信息
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetMetaData(System.String)">
            <summary>
            获取Image Exif信息
            </summary>
            <param name="iamgePath">图片路径</param>
            <returns>Exif信息</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetLongValue(System.String[])">
            <summary>
            获取Long型的10进制数据
            </summary>
            <param name="hexString">16进制数据的字符串表示</param>
            <returns>Double型10进制数据</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetLongValue(System.String,System.String)">
            <summary>
            获取Long型的10进制数据
            </summary>
            <param name="longValueLow">Long型数据高位</param>
            <param name="longValueHigh">Long型数据低位</param>
            <returns>10进制数据</returns>
            时间：2015-09-15 11:28
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetRationalValue(System.Double,System.Double)">
            <summary>
            计算Rational数据
            </summary>
            <param name="numerator">分子</param>
            <param name="denominator">分母</param>
            <returns>Rational数据</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_10f(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为10f的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:22
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_110(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为100的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:24
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_829a(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为829a的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:24
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_829d(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为829d的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:24
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_8822(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为8822的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:24
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_8824(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为8824的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:24
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_8827(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为8827的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:25
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_8828(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为8828的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:25
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_9000(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为9000的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:25
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_9003(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为9003的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:25
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_9101(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为9101的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:25
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_9102(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为9102的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:25
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_9201(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为9201的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:26
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_9202(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为9202的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:26
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_9203(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为9203的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:26
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_9204(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为9204的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:26
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_9205(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为9205的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:26
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_9206(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为9206的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:26
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_9207(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为9207的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:26
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_9208(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为9208的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:27
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_9209(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为9209的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:27
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_920a(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为920a的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:27
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_a000(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为a000的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:27
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_a001(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为a001的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:27
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_a20e(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为a20e的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:27
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_a20f(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为a20f的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:27
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_a210(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为a210的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:28
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_a215(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为a215的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:28
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_a217(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为a217的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:28
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_a301(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为a301的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:28
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.GetExifMetaDataBy_a302(System.Drawing.Image,System.Text.ASCIIEncoding,System.String,System.Int32,System.Int32,System.Drawing.Imaging.PropertyItem[])">
            <summary>
            获取Exif类型为a302的数据信息
            </summary>
            <param name="pictrue">图片.</param>
            <param name="asciiEncoding">字符编码</param>
            <param name="propertyIdString">id字符串</param>
            <param name="propertyId">id</param>
            <param name="index">索引</param>
            <param name="pictrueExif">PropertyItem数组</param>
            时间：2015-09-15 11:28
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.TransEXIF_Aperture(System.String,System.String)">
            <summary>
            将Aperture转换成对应的值信息
            </summary>
            <param name="description">类型描述</param>
            <param name="value">类型对应的元数据值</param>
            <returns>元数据所对应的EXIF信息</returns>
            时间：2015-09-15 11:48
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.TransEXIF_CompConfig(System.String,System.String)">
            <summary>
            将LightSource转换成对应的值信息
            </summary>
            <param name="description">类型描述</param>
            <param name="value">类型对应的元数据值</param>
            <returns>元数据所对应的EXIF信息</returns>
            时间：2015-09-15 11:48
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.TransEXIF_ExposureProg(System.String,System.String)">
            <summary>
            将ExposureProg转换成对应的值信息
            </summary>
            <param name="description">类型描述</param>
            <param name="value">类型对应的元数据值</param>
            <returns>元数据所对应的EXIF信息</returns>
            时间：2015-09-15 11:48
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.TransEXIF_Flash(System.String,System.String)">
            <summary>
            将Flash转换成对应的值信息
            </summary>
            <param name="description">类型描述</param>
            <param name="value">类型对应的元数据值</param>
            <returns>元数据所对应的EXIF信息</returns>
            时间：2015-09-15 11:48
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.TransEXIF_LightSource(System.String,System.String)">
            <summary>
            将LightSource转换成对应的值信息
            </summary>
            <param name="description">类型描述</param>
            <param name="value">类型对应的元数据值</param>
            <returns>元数据所对应的EXIF信息</returns>
            时间：2015-09-15 11:48
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.TransEXIF_MeteringMode(System.String,System.String)">
            <summary>
            将MeteringMode转换成对应的值信息
            </summary>
            <param name="description">类型描述</param>
            <param name="value">类型对应的元数据值</param>
            <returns>元数据所对应的EXIF信息</returns>
            时间：2015-09-15 11:48
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExifHelper.TransEXIF_ResolutionUnit(System.String,System.String)">
            <summary>
            将ResolutionUnit转换成对应的值信息
            </summary>
            <param name="description">类型描述</param>
            <param name="value">类型对应的元数据值</param>
            <returns>元数据所对应的EXIF信息</returns>
            时间：2015-09-15 11:48
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.IDataReaderHelper">
            <summary>
            IDataReader 帮助类
            </summary>
            日期：2015-09-23 16:05
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.IDataReaderHelper.GetValue``1(System.Data.IDataReader,System.String,``0)">
            <summary>
            从IDataReader获取值
            </summary>
            <typeparam name="T">返回值泛型</typeparam>
            <param name="reader">IDataReader</param>
            <param name="columnName">列名称</param>
            <param name="failValue">如数值等于DBNull.Value时候返回的值</param>
            <returns>数值</returns>
            日期：2015-09-23 16:03
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.IDataReaderHelper.GetValueOrDefault``1(System.Data.IDataReader,System.String)">
            <summary>
            从IDataReader获取值
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="reader">IDataReader</param>
            <param name="columnName">列名称</param>
            <returns>数值</returns>
            时间：2016-01-04 16:52
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.IDataReaderHelper.GetValueOrDefault``1(System.Data.IDataReader,System.String,``0)">
            <summary>
            从IDataReader获取值
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="reader">IDataReader</param>
            <param name="columnName">列名称</param>
            <param name="defaultValue">默认值</param>
            <returns>数值</returns>
            时间：2016-01-04 16:52
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.IDataReaderHelper.SaveFile(System.Data.IDataReader,System.Int32,System.String,System.Int32)">
            <summary>
            保存文件
            </summary>
            <param name="reader">IDataReader</param>
            <param name="columnIndex">读取索引</param>
            <param name="saveFilePath">保存路径</param>
            <param name="bufferSize">缓存大小</param>
            时间：2016-01-04 16:07
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.IDataReaderHelper.SaveFile(System.Data.IDataReader,System.Int32,System.String)">
            <summary>
            保存文件
            </summary>
            <param name="reader">IDataReader</param>
            <param name="index">读取索引</param>
            <param name="saveFilePath">保存路径</param>
            时间：2016-01-04 16:47
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ProjectHelper">
            <summary>
            项目帮助文件
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ProjectHelper.GetExecuteDirectory">
            <summary>
            获取执行文件夹路径
            <para>eg:c:\\users\\yanzhiwei\\documents\\visual studio 2015\\Projects\\WebApplication2\\WebApplication2\\</para>
            </summary>
            <returns>执行文件夹路径</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ProjectHelper.GetExecutionContext">
            <summary>
            获取程序执行上下文
            </summary>
            <returns>程序执行上下文</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper">
            <summary>
            SmtpClient 帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.attachmentsPathList">
            <summary>
            附件
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.isbodyHtml">
            <summary>
            正文是否是html格式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.mailBody">
            <summary>
            正文
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.mailCcList">
            <summary>
            抄送
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.mailSubject">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.mailToList">
            <summary>
            收件人
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.nickName">
            <summary>
            发送者昵称
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.priority">
            <summary>
            优先级别
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.stmpServer">
            <summary>
            SMTP服务器
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.#ctor(YanZhiwei.DotNet2.Utilities.Models.SmtpServer,System.String,System.String,System.String,System.String[],System.String[],System.String[],System.Boolean,System.Net.Mail.MailPriority)">
            <summary>
            构造函数
            </summary>
            <param name="stmpserver">SMTP服务器</param>
            <param name="nickname">发送者昵称</param>
            <param name="mailsubject">标题</param>
            <param name="mailbody">正文</param>
            <param name="mailTolist">收件人</param>
            <param name="mailCclist">抄送</param>
            <param name="attachmentsPathlist">附件</param>
            <param name="isbodyhtml">正文是否是html格式</param>
            <param name="mailPriority">优先级别</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.#ctor(YanZhiwei.DotNet2.Utilities.Models.SmtpServer,System.String,System.String,System.String,System.String[])">
            <summary>
            构造函数
            </summary>
            <param name="stmpserver">SMTP服务器</param>
            <param name="nickname">发送者昵称</param>
            <param name="mailsubject">标题</param>
            <param name="mailbody">正文</param>
            <param name="mailTolist">收件人</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.#ctor(YanZhiwei.DotNet2.Utilities.Models.SmtpServer,System.String,System.String,System.String,System.String[],System.Net.Mail.MailPriority)">
            <summary>
            构造函数
            </summary>
            <param name="stmpserver">SMTP服务器</param>
            <param name="nickname">发送者昵称</param>
            <param name="mailsubject">标题</param>
            <param name="mailbody">正文</param>
            <param name="mailTolist">收件人</param>
            <param name="mailPriority">优先级别</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.#ctor(YanZhiwei.DotNet2.Utilities.Models.SmtpServer,System.String,System.String,System.String,System.String[],System.String[])">
            <summary>
            构造函数
            </summary>
            <param name="stmpserver">SMTP服务器</param>
            <param name="nickname">发送者昵称</param>
            <param name="mailsubject">标题</param>
            <param name="mailbody">正文</param>
            <param name="mailTolist">收件人</param>
            <param name="attachmentsPathlist">附件</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.Send">
            <summary>
            发送邮件
            </summary>
            <returns>发送返回状态</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.InitSendAttachFile(System.Net.Mail.MailMessage)">
            <summary>
            添加邮件附件信息
            </summary>
            <param name="mailMessage"></param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.InitSendBase(System.Net.Mail.MailAddress,System.Net.Mail.MailMessage)">
            <summary>
            初始化邮件基本信息
            </summary>
            <param name="mailAddress">MailAddress</param>
            <param name="mailMessage">mailMessage</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.InitSendCcList(System.Net.Mail.MailMessage)">
            <summary>
            初始化发送邮件抄送集合
            </summary>
            <param name="mailMessage">MailMessage</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SmtpClientHelper.InitSendMailList(System.Net.Mail.MailMessage)">
            <summary>
            初始化发送邮件集合
            </summary>
            <param name="mailMessage">MailMessage</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ASCIIHelper">
            <summary>
            ASCII 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ASCIIHelper.ParseASCII(System.Byte)">
            <summary>
            Parses the ASCII.
            </summary>
            <param name="asciiCode">The ASCII code.</param>
            <returns>ascii码</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ASCIIHelper.ToASCII(System.Char)">
            <summary>
            To the ASCII.
            </summary>
            <param name="data">The data.</param>
            <returns>Int</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ASCIIHelper.ToASCII(System.String)">
            <summary>
            To the ASCII.
            </summary>
            <param name="data">The data.</param>
            <returns>byte数组</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper">
            <summary>
            Assembly 帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper.assembly">
            <summary>
            Assembly对象
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper.filePath">
            <summary>
            程序集路径
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper"/> class.
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper"/> class.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper.GetAppFullName">
            <summary>
            获取程序集显示名称
            </summary>
            <returns>程序集显示名称</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper.GetBuildDateTime">
            <summary>
            获取编译日期
            </summary>
            <returns>编译日期</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper.GetBuildDateTimeByVersion">
            <summary>
            获取根据实际编译版本信息
            </summary>
            <returns>实际编译版本信息</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper.GetCompany">
            <summary>
            获取公司名称信息
            </summary>
            <returns>公司名称信息</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper.GetCopyright">
            <summary>
            获取版权信息
            </summary>
            <returns>版权信息</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper.GetDescription">
            <summary>
            获取说明信息
            </summary>
            <returns>说明信息</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper.GetProductName">
            <summary>
            获取产品名称信息
            </summary>
            <returns>产品名称信息</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper.GetTitle">
            <summary>
            获取文件名
            </summary>
            <returns>文件名</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper.GetVersion">
            <summary>
            获取主版本号，次版本号；
            </summary>
            <returns>主版本号，次版本号</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AssemblyHelper.GetAssemblyCommon``1(System.Action{``0})">
            <summary>
            获取程序集信息
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="assemblyFacotry">参数委托</param>
            时间：2015-09-09 15:56
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.Base64Helper">
            <summary>
            Base64帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.Base64Helper.ParseBase64String(System.String)">
            <summary>
            Base64字符串解码
            </summary>
            <param name="data">Base64字符串</param>
            <returns>解码后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.Base64Helper.ToBase64String(System.String)">
            <summary>
            Base64字符串译码
            </summary>
            <param name="data">字符串</param>
            <returns>Base64字符串</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.BCDHelper">
            <summary>
            BCD码帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.BCDHelper.Parse8421BCDNumber(System.Int32)">
            <summary>
            转为bcd码Byte描述
            其中高四位存放十位数字，低四位存放个位数字。
            </summary>
            <param name="bcdNumber">数字</param>
            <returns>Byte描述</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.BCDHelper.Parse8421BCDNumber(System.Int32,System.Boolean)">
            <summary>
            Int转为bcd码Byte数组描述
            </summary>
            <param name="bcdNumber">数字</param>
            <param name="isLittleEndian">是否低位在前</param>
            <returns>Byte数组</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.BCDHelper.Parse8421BCDString(System.String,System.Boolean)">
            <summary>
            字符串转为bcd码Byte数组描述
            <para>eg:CollectionAssert.AreEqual(new byte[2] { 0x01, 0x10 }, BCDHelper.ToBinaryCodedDecimal("0110", false));</para>
            <para>eg:CollectionAssert.AreEqual(new byte[2] { 0x10, 0x01 }, BCDHelper.ToBinaryCodedDecimal("0110", true));</para>
            </summary>
            <param name="bcdString">bcd字符串</param>
            <param name="isLittleEndian">是否低位在前高位在后</param>
            <returns>Byte数组</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.BCDHelper.To8421BCDString(System.Byte[],System.Boolean)">
            <summary>
            将byte数组转为BCD字符串描述
            <para>eg: Assert.AreEqual("1001", BCDHelper.ToBinaryCodedDecimal(new byte[2] { 0x01, 0x10 }, true));</para>
            <para>eg: Assert.AreEqual("0110", BCDHelper.ToBinaryCodedDecimal(new byte[2] { 0x01, 0x10 }, false));</para>
            </summary>
            <param name="data">Byte数组</param>
            <param name="isLittleEndian">是否低位在前高位在后</param>
            <returns>BCD描述</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.BCDHelper.To8421BCDString(System.Byte[],System.Int32,System.Int32,System.Boolean)">
             <summary>
            将byte数组转为BCD字符串描述
             </summary>
             <param name="data">Byte数组</param>
             <param name="startIndex">目标数组开始索引</param>
             <param name="endIndex">目标数组的结束索引</param>
             <param name="isLittleEndian">是否低位在前高位在后</param>
             <returns>BCD描述</returns>
             时间：2016-04-14 15:42
             备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.BDGCJLatLonHelper">
            <summary>
            火星坐标系 (GCJ-02)与百度坐标系 (BD-09) 转换帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.BDGCJLatLonHelper.pi">
            <summary>
            The x_pi
            </summary>
            时间：2015-09-14 9:07
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.BDGCJLatLonHelper.BD09ToGCJ02(YanZhiwei.DotNet2.Utilities.Models.LatLngPoint)">
            <summary>
            将BD-09坐标转换成GCJ-02坐标
            </summary>
            <param name="bdPoint">BD-09坐标</param>
            <returns>GCJ-02坐标</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.BDGCJLatLonHelper.GCJ02ToBD09(YanZhiwei.DotNet2.Utilities.Models.LatLngPoint)">
            <summary>
            将GCJ-02坐标转换成BD-09坐标
            </summary>
            <param name="gcjPoint">GCJ-02坐标</param>
            <returns>BD-09坐标</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.BitArrayHelper">
            <summary>
            BitArray 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.BitArrayHelper.Reverse(System.Collections.BitArray)">
            <summary>
            逆序
            </summary>
            <param name="bits">需要操作的BitArray.</param>
            <returns>逆序后的BitArray</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.BitArrayHelper.ToBinaryString(System.Collections.BitArray,System.Char,System.Char)">
            <summary>
            转换成十六进制字符串
            </summary>
            <param name="bits">需要操作的BitArray</param>
            <param name="trueValue">当条件成立的值</param>
            <param name="falseValue">当条件不成立的值</param>
            <returns>十六进制字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.BitArrayHelper.ToBinaryString(System.Collections.BitArray)">
            <summary>
            转成是十六进制字符串
            </summary>
            <param name="bits">需要操的在BitArray</param>
            <returns>十六进制字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.BitArrayHelper.ToBytes(System.Collections.BitArray)">
            <summary>
            转成成byte数组
            </summary>
            <param name="bits">需要操的在BitArray</param>
            <returns>byte数组</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.BitHelper">
            <summary>
            Bit 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.BitHelper.ClearBit(System.Byte,System.Int32)">
            <summary>
            Clears the bit.
            <para>eg:ByteHelper.ClearBit(24, 4);==>3</para>
            </summary>
            <param name="data">The data.</param>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.BitHelper.GetBit(System.Byte,System.Int32)">
            <summary>
            Gets the bit.
            <para>eg:ByteHelper.GetBit(8,3);==>1</para>
            </summary>
            <param name="data">The data.</param>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.BitHelper.ReverseBit(System.Byte,System.Int32)">
            <summary>
            Reverses the bit.
            <para>eg:ByteHelper.ReverseBit(24, 4);==>8</para>
            </summary>
            <param name="data">The data.</param>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.BitHelper.SetBit(System.Byte,System.Int32)">
             <summary>
             Sets the bit.
            <para>eg: ByteHelper.SetBit(8, 4);==>24</para>
             </summary>
             <param name="data">The data.</param>
             <param name="index">The index.</param>
             <returns></returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.CheckHelper">
            <summary>
            检查 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.InRange(System.String,System.Int32,System.Int32)">
            <summary>
            判断字符串是否在某个范围
            <para>eg:CheckHelper.InRange("2", 1, 5);==>true</para>
            <para>判断：小于等于并且大于等于</para>
            </summary>
            <param name="data">判断字符串</param>
            <param name="minValue">范围最小值</param>
            <param name="maxValue">范围最大值</param>
            <returns>是否在某个范围</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.InRange(System.DateTime,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            判断时间是否在时间范围内
            </summary>
            <param name="date">The date.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="includeEq">if set to <c>true</c> [include eq].</param>
            <returns></returns>
            创建时间:2015-06-30 16:52
            备注说明:<c>null</c>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsBase64(System.String)">
            <summary>
            是否是Base64
            </summary>
            <param name="data">验证数据</param>
            <returns>是否是Base64</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsBigint(System.String,System.Int64@)">
            <summary>
            是否是Bigint类型
            </summary>
            <param name="value">判断字符串</param>
            <param name="number">Bigint</param>
            <returns>是否是Bigint类型</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsBinaryCodedDecimal(System.String)">
            <summary>
            判断是否是BCD字符串
            </summary>
            <param name="data">验证字符串</param>
            <returns>否是BCD字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsBool(System.Object)">
            <summary>
            是否是布尔类型
            </summary>
            <param name="data">数据</param>
            <returns>布尔类型</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsChinses(System.String)">
            <summary>
            是否是中文
            </summary>
            <param name="data">验证字符串</param>
            <returns>是否是中文</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsDate(System.String)">
            <summary>
            是否是日期格式
            <para>eg:CheckHelper.IsDate("2014年12月12日");==>true</para>
            </summary>
            <param name="data">需要判断字符串</param>
            <returns>是否是日期格式</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsEmail(System.String)">
            <summary>
            验证是否是email
            <para>eg:CheckHelper.IsEmail("Yan.Zhiwei@hotmail.com");==true</para>
            </summary>
            <param name="data">验证字符串</param>
            <returns>是否是email</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsEven(System.Int32)">
            <summary>
            是否是偶数
            </summary>
            <param name="data">需要判断项</param>
            <returns>是否是偶数</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsFilePath(System.String)">
            <summary>
            验证是否是文件路径
            <para>eg:CheckHelper.IsFilePath(@"C:\alipay\log.txt");==>true</para>
            </summary>
            <param name="data">验证字符串</param>
            <returns>是否是文件路径</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsHexString(System.String)">
            <summary>
            是否是十六进制字符串
            </summary>
            <param name="data">验证数据</param>
            <returns>是否是十六进制字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsIdCard(System.String)">
            <summary>
            是否是身份证号码
            </summary>
            <param name="data">验证数据</param>
            <returns>是否是身份证号码</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsImageFormat(System.Byte[])">
            <summary>
            判断图片byte[]是否合法
            </summary>
            <param name="data">图片byte[]</param>
            <returns>是否合法</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsInt(System.String)">
            <summary>
            是否是整数
            </summary>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsIp46Address(System.String)">
            <summary>
            判断是否是合法的IP4,IP6地址
            <para>eg: Assert.IsTrue(CheckHelper.IsIp46Address("192.168.1.1:8060"));</para>
            <para>    Assert.IsTrue(CheckHelper.IsIp46Address("[2001:0DB8:02de::0e13]:9010"));</para>
            </summary>
            <param name="data">需要判断的字符串</param>
            <returns>合法则返回host部分，若不合法则返回空</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsIp4Address(System.String)">
            <summary>
            是否是IP
            </summary>
            <param name="data">需要检测到IP</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsLatitude(System.Double)">
            <summary>
            判断纬度是否合法
            </summary>
            <param name="data">纬度</param>
            <returns>是否合法</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsLocalIp4(System.String)">
            <summary>
            是否是内网IP
            </summary>
            <param name="ipAddress">ip地址</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsLongitude(System.Double)">
            <summary>
            判断经度是否合法
            </summary>
            <param name="data">经度</param>
            <returns>是否合法</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsNumber(System.String)">
            <summary>
            是否是数字
            <para>eg:CheckHelper.IsNumber("abc");==>false</para>
            </summary>
            <param name="data">判断字符串</param>
            <returns>是否是数字</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsOdd(System.Int32)">
            <summary>
            是否是奇数
            </summary>
            <param name="data">需要判断项</param>
            <returns>是否是奇数</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsPoseCode(System.String)">
            <summary>
            验证是否是邮政编码
            </summary>
            <param name="data">验证字符串</param>
            <returns>是否是邮政编码</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsSmallint(System.String,System.Int16@)">
            <summary>
            是否是Smallint类型
            </summary>
            <param name="value">判断字符串</param>
            <param name="number">short</param>
            <returns>是否是Smallint类型</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsTinyint(System.String,System.Byte@)">
            <summary>
            是否是Tinyint
            </summary>
            <param name="value">判断字符串</param>
            <param name="number">Tinyint</param>
            <returns>是否是Tinyint类型</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsURL(System.String)">
            <summary>
            验证是否是URL
            <para>eg:CheckHelper.IsURL("www.cnblogs.com/yan-zhiwei");==>true</para>
            </summary>
            <param name="data">验证字符串</param>
            <returns>是否是URL</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.IsValidPort(System.String)">
            <summary>
            检查设置的端口号是否正确
            </summary>
            <param name="port">端口号</param>
            <returns>端口号是否正确</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CheckHelper.NotNull(System.Object)">
            <summary>
            验证非空
            </summary>
            <param name="data">验证对象</param>
            <returns> 验证非空</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.AppSettingsHelper">
            <summary>
            AppSetting节点操作 帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.AppSettingsHelper.config">
            <summary>
            Configuration对象
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AppSettingsHelper.#ctor(YanZhiwei.DotNet2.Utilities.Enums.ProgramMode)">
            <summary>
            构造函数
            </summary>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AppSettingsHelper.#ctor(YanZhiwei.DotNet2.Utilities.Enums.ProgramMode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YanZhiwei.DotNet2.Utilities.Common.AppSettingsHelper"/> class.
            </summary>
            <param name="mode">The mode.</param>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AppSettingsHelper.AddOrUpdate(System.String,System.String)">
            <summary>
            添加或修改
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>是否添加或者修改成功</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AppSettingsHelper.Exist">
            <summary>
            Exists this instance.
            </summary>
            <returns>是否存在</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AppSettingsHelper.GetValue(System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="key">The key.</param>
            <returns>获取的值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AppSettingsHelper.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>移除是否成功</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ArrayHelper">
            <summary>
            Array 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ArrayHelper.Add``1(``0[],``0)">
            <summary>
            向数组中中添加新元素
            <para>eg: CollectionAssert.AreEqual(new int[6] { 1, 2, 3, 4, 5, 6 }, ArrayHelper.Add(new int[5] { 1, 2, 3, 4, 5 }, 6));</para>
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="data">The array.</param>
            <param name="item">The item.</param>
            <returns>数组</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ArrayHelper.AddRange``1(``0[],``0[])">
            <summary>
            向数组中添加新数组；
            <para>
            eg: CollectionAssert.AreEqual(new int[7] { 1, 2, 3, 4, 5, 6, 7 },
                ArrayHelper.AddRange(new int[5] { 1, 2, 3, 4, 5 }, new int[2] { 6, 7 }));
            </para>
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="sourceArray">The source array.</param>
            <param name="addArray">The add array.</param>
            <returns>数组</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ArrayHelper.ClearAll(System.Array)">
            <summary>
            清空数组
            <para>
            eg:
            int[] _test = new int[5] { 1, 2, 3, 4, 5 };
            _test.ClearAll();
            CollectionAssert.AreEqual(new int[5] { 0, 0, 0, 0, 0 }, _test);
            </para>
            </summary>
            <param name="data">数组</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ArrayHelper.ClearAt``1(``0[],System.Int32)">
            <summary>
            清除特定索引数据
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="data">数组</param>
            <param name="index">需要清除索引</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ArrayHelper.Copy``1(``0[],System.Int32,System.Int32)">
            <summary>
            复制数组
            <para>
            eg: CollectionAssert.AreEqual(new int[3] { 1, 2, 3 }, ArrayHelper.Copy(new int[5] { 1,
                2, 3, 4, 5 }, 0, 3));
            </para>
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="data">需要操作数组</param>
            <param name="startIndex">复制起始索引，从零开始</param>
            <param name="endIndex">复制结束索引，从零开始</param>
            <returns>数组</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ArrayHelper.DynamicAdd``1(``0[],``0)">
            <summary>
            动态添加
            <para>eg:  CollectionAssert.AreEqual(new int[6] { 1, 2, 3, 4, 5, 6 }, ArrayHelper.DynamicAdd(new int[5] { 1, 2, 3, 4, 5 }, 6));</para>
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="target">目标数组</param>
            <param name="item">添加项</param>
            <returns>数组</returns>
            时间：2015-09-09 16:59
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ArrayHelper.EqualValue``1(``0[],``0[])">
            <summary>
            判断数组的值是否相等
            <para> eg: Assert.IsTrue(ArrayHelper.EqualValue(new int[5] { 1, 2, 3, 4, 5 }, new int[5] { 1, 2, 3, 4, 5 }));
            </para>
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="source">数组一</param>
            <param name="compare">数组二</param>
            <returns>是否相等</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ArrayHelper.IsNullOrEmpty(System.Array)">
            <summary>
            判断数组是否是空还是NULL
            <para>eg:Assert.IsTrue(ArrayHelper.IsNullOrEmpty(new int[0]));</para>
            </summary>
            <param name="data">数组</param>
            <returns>是否是空或者NULL</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ArrayHelper.ReferenceTypeValueEqual``1(``0[],``0[])">
            <summary>
            引用类型数组值比较
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="array1">数组一.</param>
            <param name="array2">数组二</param>
            <returns>值是否相等</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ArrayHelper.Resize``1(``0[],System.Int32)">
            <summary>
            重新设置数组大小
            <para>eg: CollectionAssert.AreEqual(new int[5] { 1, 2, 3, 0, 0 }, ArrayHelper.Resize(new int[3] { 1, 2, 3 }, 5)); </para>
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="data">需要设置的数组</param>
            <param name="targetNumber">目标数组大小</param>
            <returns>数组</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ArrayHelper.WithinIndex(System.Array,System.Int32)">
            <summary>
            给定索引是否在数组索引内
            <para>
            int[] _test = new int[5] { 1, 2, 3, 4, 5 };
            Assert.IsFalse(_test.WithinIndex(5));
            Assert.IsTrue(_test.WithinIndex(0));
            Assert.IsTrue(_test.WithinIndex(4));
            </para>
            </summary>
            <param name="data">数组</param>
            <param name="index">索引</param>
            <returns>是否在范围内</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ByteHelper">
             <summary>
            byte 帮助类
             </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.CalcPercentage(System.Byte)">
             <summary>
             将Byte换算成百分比
            <para>eg: Assert.AreEqual(50.20m, ByteHelper.CalcPercentage(128));</para>
             </summary>
             <param name="value">The value.</param>
             <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.Combine(System.Byte,System.Byte)">
            <summary>
            两个byte合并
            <para>0x10,0x20==>0x1020</para>
            </summary>
            <param name="b1">第一个byte</param>
            <param name="b2">第二个byte</param>
            <returns>合并byte</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.Combine(System.Byte,System.Byte,System.Byte)">
             <summary>
             三个byte合并
            <para>0x10,0x20,0x30==>0x102030</para>
             </summary>
             <param name="b1">第一个byte</param>
             <param name="b2">第二个byte</param>
             <param name="b3">第三个byte</param>
             <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.GetHigh(System.Byte)">
            <summary>
            获取高位
            <para>eg: 0x0A==>10101101==>1010</para>
            <para>eg: Assert.AreEqual(0x0A, ByteHelper.GetHigh(0xAD));</para>
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.GetLow(System.Byte)">
            <summary>
            获取低位
            <para>eg: 0x0A==>10101101==>1101</para>
            <para>eg: Assert.AreEqual(0x0D, ByteHelper.GetLow(0xAD));</para>
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.ParseBinaryString(System.String)">
             <summary>
            将二进制字符串转换成byte
            <para>eg:Assert.AreEqual(0xFF, ByteHelper.ParseBinaryString("11111111"));</para>
             </summary>
             <param name="binaryString">二进制字符串</param>
             <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.ParseBinaryStringToBytes(System.String)">
             <summary>
             将二进制字符串转换成byte数组
            <para> eg:  CollectionAssert.AreEqual(new byte[2] { 0xFF, 0xFF }, ByteHelper.ParseBinaryStringToBytes("1111111111111111"));
            </para>
             </summary>
             <param name="binaryString">The binary string.</param>
             <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.ParseHexString(System.String)">
            <summary>
            将十六进制字符串转换成byte数组
            <para>eg: CollectionAssert.AreEqual(new byte[2] { 0xFF, 0xFE }, ByteHelper.ParseHexString("FFFE"));</para>
            </summary>
            <param name="hexString">The hexadecimal string.</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.ParseHexStringWithDelimiter(System.String,System.String)">
            <summary>
            将带符号的十六进制字符串转成成Byte数组
            <para>
            eg: CollectionAssert.AreEqual(new byte[2] { 0xFF, 0xFE },
                ByteHelper.ParseHexStringWithDelimiter("FF-FE", "-"));
            </para>
            </summary>
            <param name="hexString">The hexadecimal string.</param>
            <param name="delimiter">The delimiter.</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.ParsePercent(System.Int32)">
            <summary>
            将百分比转成byte
            <para>eg: Assert.AreEqual(128, ByteHelper.ParsePercent(50));</para>
            </summary>
            <param name="percent">The percent.</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.ToBinaryString(System.Byte[])">
            <summary>
            将byte数组转换成二进制字符串
            <para>
            eg: Assert.AreEqual("1111111111111111", ByteHelper.ToBinaryString(new byte[2] { 0xFF,
                0xFF }));
            </para>
            </summary>
            <param name="bytes">The bytes.</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.ToBinaryString(System.Byte)">
             <summary>
             将byte转换成二进制字符串
            <para>eg: Assert.AreEqual("11111111", ByteHelper.ToBinaryString(0xFF));</para>
             </summary>
             <param name="data">The data.</param>
             <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.ToBytes(System.Int32)">
            <summary>
            将int转换成byte数组
            <para>eg: CollectionAssert.AreEqual(new byte[2] { 0x01, 0x02 }, ByteHelper.ToBytes(258));</para>
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.ToBytes(System.Int32,System.Int32)">
            <summary>
            将int转换成byte数组，并保持特定数组长度
            <para>eg: CollectionAssert.AreEqual(new byte[2] { 0x08, 0x00 }, ByteHelper.ToBytes(8, 2));</para>
            </summary>
            <param name="value">The value.</param>
            <param name="keepArrayLength">需要返回的数组长度</param>
            <returns></returns>
            时间：2016-04-13 10:09
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.ToHexString(System.Byte)">
            <summary>
            将byte转换成十六进制字符串
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.ToHexString(System.Byte[],YanZhiwei.DotNet2.Utilities.Enums.ToHexadecimal)">
            <summary>
            将byte数组转换成十六进制字符串
            <para>
            eg: Assert.AreEqual("FFFE", ByteHelper.ToHexString(new byte[2] { 255, 254 }, ToHexadecimal.ConvertAll));
            </para>
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.ToHexString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            将byte数组转换成十六进制字符串
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="startIndex">目标数组开始索引</param>
            <param name="endIndex">目标数组的结束索引</param>
            <returns></returns>
            时间：2016-04-14 15:39
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.ToHexString(System.Byte[])">
            <summary>
            将byte数组转换成十六进制字符串
            </summary>
            <para>
            eg: Assert.AreEqual("FFFE", ByteHelper.ToHexString(new byte[2] { 255, 254 }));
            </para>
            <param name="bytes">The bytes.</param>
            <returns></returns>
            时间：2016-04-13 15:48
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.ToHexStringWithBlank(System.Byte[])">
            <summary>
            将byte数组转换成十六进制字符串
            <para>
            eg: Assert.AreEqual("FF FE", ByteHelper.ToHexStringWithBlank(new byte[2] { 255, 254 }));
            </para>
            </summary>
            <param name="bytes">The bytes.</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ByteHelper.ToHexStringWithDelimiter(System.Byte[],System.String)">
             <summary>
            将byte数组转换成带符号的十六进制字符串
             <para>
             eg: Assert.AreEqual("FF-FE", ByteHelper.ToHexStringWithDelimiter(new byte[2] { 255, 254
                 }, "-"));
             </para>
             </summary>
             <param name="bytes">The bytes.</param>
             <param name="delimiter">The delimiter.</param>
             <returns></returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.AccessHelper">
            <summary>
            Access 帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.AccessHelper.connectString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AccessHelper.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="path"> access路径 </param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AccessHelper.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="path">access路径</param>
            <param name="password">access密码</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AccessHelper.ExecuteDataTable(System.String,System.Data.Common.DbParameter[])">
            <summary>
            ExecuteDataTable
            </summary>
            <param name="sql">读取sql语句</param>
            <param name="parameters">OleDbParameter参数；eg: new OleDbParameter("@categoryName","Test2")</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AccessHelper.ExecuteNonQuery(System.String,System.Data.Common.DbParameter[])">
            <summary>
            ExecuteNonQuery
            </summary>
            <param name="sql">查询，修改，删除sql语句</param>
            <param name="parameters">OleDbParameter参数；eg: new OleDbParameter("@categoryName","Test2")</param>
            <returns>操作影响行数</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AccessHelper.ExecuteReader(System.String,System.Data.Common.DbParameter[])">
            <summary>
            ExecuteReader
            </summary>
            <param name="sql">读取sql语句</param>
            <param name="parameters">OleDbParameter参数；eg: new OleDbParameter("@categoryName","Test2")</param>
            <returns>IDataReader</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AccessHelper.ExecuteScalar(System.String,System.Data.Common.DbParameter[])">
            <summary>
            ExecuteScalar
            </summary>
            <param name="sql">查询第一行第一列数据值</param>
            <param name="parameters">OleDbParameter参数；eg: new OleDbParameter("@categoryName","Test2")</param>
            <returns>Object</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.AccessHelper.StoreExecuteDataReader(System.String,System.Data.Common.DbParameter[])">
            <summary>
            ExecuteReader 存储过程
            </summary>
            <param name="proName">存储过程名称</param>
            <param name="parameters">参数</param>
            <returns>IDataReader</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ConfigurationHelper">
            <summary>
            Configuration 帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.ConfigurationHelper.config">
            <summary>
            Configuration对象
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConfigurationHelper.#ctor(YanZhiwei.DotNet2.Utilities.Enums.ProgramMode)">
            <summary>
            构造函数
            </summary>
            <param name="mode">程序模式</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConfigurationHelper.#ctor(YanZhiwei.DotNet2.Utilities.Enums.ProgramMode,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="mode">程序模式</param>
            <param name="filePath">config文件路径</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConfigurationHelper.ReadSection``1(System.String)">
            <summary>
            读取
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="sctionKey">节点键</param>
            <returns>数值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConfigurationHelper.SaveSection``1(``0,System.String)">
            <summary>
            保存
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="setion">节点值</param>
            <param name="sectionKey">节点键</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper">
            <summary>
            转换帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToBooleanOrDefault(System.Object,System.Boolean)">
            <summary>
            转换成布尔类型
            </summary>
            <param name="data">需要转换的object</param>
            <param name="errorValue">转换失败后返回类型</param>
            <returns>转换返回</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToByteOrDefault(System.Object,System.Byte)">
            <summary>
            转换成Byte类型
            </summary>
            <param name="data">需要转换的object</param>
            <param name="errorValue">转换失败后返回类型</param>
            <returns>转换返回</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToChineseDate(System.DateTime)">
            <summary>
            转换为农历年
            </summary>
            <param name="date">日期</param>
            <returns>农历年</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToChineseDay(System.Int32)">
            <summary>
            将阿拉伯数字转换中文日期数字
            </summary>
            <param name="data">日期范围1~31</param>
            <returns>中文日期数字</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToChineseMonth(System.Int32)">
            <summary>
            将阿拉伯数字转换成中文月份数字
            <para>eg:ConvertHelper.ToChineseMonth(1)==> "一"</para>
            </summary>
            <param name="data">月份范围1~12</param>
            <returns>中文月份数字</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToDateOrDefault(System.Object,System.DateTime)">
            <summary>
            转换成日期
            </summary>
            <param name="data">数据</param>
            <param name="errorValue">转换失败返回数据</param>
            <returns>日期</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToDecimalOrDefault(System.Object,System.Decimal)">
            <summary>
             转换成decimal类型
            </summary>
            <param name="data">需要转换的object</param>
            <param name="errorValue">转换失败后返回类型</param>
            <returns>转换返回</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToDoubleOrDefault(System.Object,System.Double)">
            <summary>
            转换成double类型
            </summary>
            <param name="data">需要转换的object</param>
            <param name="errorValue">转换失败后返回类型</param>
            <returns>转换返回</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToHexBinDecOct(System.String,YanZhiwei.DotNet2.Utilities.Enums.Conversion,YanZhiwei.DotNet2.Utilities.Enums.Conversion)">
            <summary>
            二，八，十，十六进制互相转换
            说明：
            若转换成二进制，会补足八个长度
            </summary>
            <param name="data">需要转换的字符串</param>
            <param name="from">原始进制</param>
            <param name="to">目标进制</param>
            <returns>转换结果；若转换失败返回"0"</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToIntOrDefault(System.Object,System.Int32)">
            <summary>
            转换成Int类型
            </summary>
            <param name="data">需要转换的object</param>
            <param name="errorData">转换失败后返回类型</param>
            <returns>转换返回</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToIntOrDefault(System.Data.DataRow,System.String,System.Int32)">
            <summary>
            按照列名称获取Int值
            </summary>
            <param name="row">DataRow</param>
            <param name="columnName">列名称</param>
            <param name="failValue">若列等于NULL，需要返回的值</param>
            <returns>若列不等于NULL则返回实际值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToIntOrDefault(System.Data.DataRow,System.Int32,System.Int32)">
            <summary>
            按照列索引获取Int值
            </summary>
            <param name="row">DataRow</param>
            <param name="columnIndex">列索引</param>
            <param name="failValue">若列等于NULL，需要返回的值</param>
            <returns>若列不等于NULL则返回实际值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToInt32OrDefault(System.Object,System.Int32)">
            <summary>
            转换成Int32类型
            </summary>
            <param name="data">需要转换的object</param>
            <param name="errorValue">转换失败后返回类型</param>
            <returns>转换返回</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToInt64OrDefault(System.Object,System.Int64)">
            <summary>
            转换成Int64类型
            </summary>
            <param name="data">需要转换的object</param>
            <param name="errorValue">转换失败后返回类型</param>
            <returns>转换返回</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToShortOrDefault(System.Object,System.Int16)">
            <summary>
            转换成Int16类型
            </summary>
            <param name="data">需要转换的object</param>
            <param name="errorData">转换失败后返回类型</param>
            <returns>转换返回</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToStringOrDefault(System.Object,System.String)">
            <summary>
            转换成string类型
            </summary>
            <param name="data">需要转换的object</param>
            <param name="errorValue">转换失败后返回类型</param>
            <returns>转换返回</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToString``1(``0[],System.String)">
            <summary>
            泛型数组转换为字符串
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="array">泛型数组</param>
            <param name="delimiter">分隔符</param>
            <returns>转换好的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToStringOrDefault(System.DateTime,System.String,System.String)">
            <summary>
            将时间类型转换为字符串表述
            </summary>
            <param name="data">DateTime</param>
            <param name="formartString">格式化字符串</param>
            <param name="errorValue">处理失败返回值</param>
            <returns>字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToStringOrDefault(System.Data.DataRow,System.String,System.String)">
            <summary>
            按照列名称获取Sting值
            </summary>
            <param name="row">DataRow</param>
            <param name="columnName">列名称</param>
            <param name="failValue">若列等于NULL，需要返回的值</param>
            <returns>若列不等于NULL则返回实际值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToStringOrDefault(System.Data.DataRow,System.Int32,System.String)">
            <summary>
            按照列索引获取Sting值
            </summary>
            <param name="row">DataRow</param>
            <param name="columnIndex">列索引</param>
            <param name="failValue">若列等于NULL，需要返回的值</param>
            <returns>若列不等于NULL则返回实际值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ConvertHelper.ToStringBase``1(System.String)">
            <summary>
            字符串类型转换
            </summary>
            <typeparam name="T">目标类型</typeparam>
            <param name="data">需要转换的字符串</param>
            <returns>转换类型</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.DebugHelper">
            <summary>
            Debug 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DebugHelper.ConsoleOutput">
            <summary>
            输出到控制台
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DebugHelper.FileOutput(System.String)">
            <summary>
            输出到文件
            </summary>
            <param name="path">路径</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DebugHelper.FileOutput">
            <summary>
            输出到文件【文件名称：yyyyMMdd】
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.DictionaryHelper">
            <summary>
            Dictionary 帮助类
            </summary>
            创建时间:2015-05-27 9:50
            备注说明:<c>null</c>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DictionaryHelper.AddOrReplace``2(System.Collections.Generic.Dictionary{``0,``1},``0,``1)">
            <summary>
            创建或修改
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dict">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>Dictionary</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DictionaryHelper.AddRange``2(System.Collections.Generic.Dictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Boolean)">
            <summary>
            添加范围
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dict">The dictionary.</param>
            <param name="values">The values.</param>
            <param name="replaceExisted">if set to <c>true</c> [replace existed].</param>
            <returns>Dictionary</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DictionaryHelper.GetValue``2(System.Collections.Generic.Dictionary{``0,``1},``0,``1)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dict">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>TValue</returns>
            创建时间:2015-05-27 9:49
            备注说明:<c>null</c>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DictionaryHelper.TryAdd``2(System.Collections.Generic.Dictionary{``0,``1},``0,``1)">
            <summary>
            Tries the add.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dict">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>Dictionary</returns>
            创建时间:2015-05-27 9:46
            备注说明:<c>null</c>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.GuidHelper">
            <summary>
            GUID 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.GuidHelper.CreateSqlServerGuid">
            <summary>
            返回Guid用于数据库操作，特定的时间代码可以提高检索效率
            </summary>
            <returns>COMB类型 Guid 数据</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.GuidHelper.FormatGuid(System.Guid,System.Int32)">
            <summary>
            格式化Guid
            <para>0==>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</para>
            <para>1==>xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</para>
            <para>2==>{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}</para>
            <para>3==>(xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx) </para>
            </summary>
            <param name="guid">Guid</param>
            <param name="guidMode">格式类型</param>
            <returns></returns>
            时间：2016-01-08 14:40
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.GuidHelper.NewSequentialGuid">
            <summary>
            有效减少GUID作为数据库主键引起的索引碎片，提高主键索引效率
            </summary>
            <returns>Guid</returns>
            时间：2016-02-25 11:03
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.GuidHelper.ParseSqlServerGuid(System.Guid)">
            <summary>
            从SQL Server 返回的Guid中生成时间信息
            </summary>
            <param name="sqlServerGuid">The SQL server unique identifier.</param>
            <returns>DateTime</returns>
            时间：2015-09-15 13:28
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.GuidHelper.ToSqlServerGuid(System.Guid)">
            <summary>
            将GUID转换成符合SQL Server的GUID
            </summary>
            <param name="guid">Guid</param>
            <returns>符合SQL Server的GUID</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.CSVHelper">
            <summary>
            CSV 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CSVHelper.ImportToTable(System.Data.DataTable,System.String,System.Int32)">
            <summary>
            将CSV文件导入到DataTable
            eg:CSVHelper.ImportToTable(_personInfoView, @"C:\Users\YanZh_000\Downloads\person.csv", 2);
            </summary>
            <param name="table">DataTable</param>
            <param name="filePath">csv文件物理路径</param>
            <param name="startRowIndex">数据导入起始行号</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.CSVHelper.ToCSV(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            导出到csv文件
            eg:
            CSVHelper.ToCSV(_personInfoView, @"C:\Users\YanZh_000\Downloads\person.csv", "用户信息表", "名称,年龄");
            </summary>
            <param name="table">DataTable</param>
            <param name="filePath">导出路径</param>
            <param name="tableheader">标题</param>
            <param name="columname">列名称，以','英文逗号分隔</param>
            <returns>是否导出成功</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.DateHelper">
            <summary>
            Date 帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.DateHelper.MinutesOfTheDay">
            <summary>
            一天分钟数
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.DateHelper.SECOND">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.DateHelper.MINUTE">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.DateHelper.HOUR">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.DateHelper.DAY">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.DateHelper.MONTH">
            <summary>
            秒
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.EndOfDay(System.DateTime)">
            <summary>
            一天末尾时间
            </summary>
            <param name="data">需要操作的时间</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.EndOfMonth(System.DateTime)">
            <summary>
            一个月末尾时间
            </summary>
            <param name="data">需要操作的时间</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.EndOfWeek(System.DateTime)">
            <summary>
            一周末尾时间
            </summary>
            <param name="date">需要操作的时间</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.EndOfWeek(System.DateTime,System.DayOfWeek)">
            <summary>
            一周末尾时间
            </summary>
            <param name="date">需要操作的时间</param>
            <param name="startDayOfWeek">一周起始周期</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.EndOfYear(System.DateTime)">
            <summary>
            一年末尾时间
            </summary>
            <param name="date">时间</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.FirstDayOfWeek(System.DateTime)">
            <summary>
            一个星期的第一天
            </summary>
            <param name="date">时间</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.FormatDate(System.DateTime,System.Int32)">
            <summary>
            格式化日期时间
            <para>0==>yyyy-MM-dd</para>
            <para>1==>yyyy-MM-dd HH:mm:ss</para>
            <para>2==>yyyy/MM/dd</para>
            <para>3==>yyyy年MM月dd日</para>
            <para>4==>MM-dd</para>
            <para>5==>MM/dd</para>
            <para>6==>MM月dd日</para>
            <para>8==>yyyy-MM</para>
            <para>9==>yyyy/MM</para>
            <para>9==>yyyy年MM月</para>
            <para>10==>HH:mm:ss</para>
            <para>11==>HH:mm</para>
            <para>12==>yyyyMMddHHmmss</para>
            <para>13==>yyyyMMdd</para>
            </summary>
            <param name="dateTime">日期时间</param>
            <param name="dateMode">显示模式</param>
            <returns>0-9种模式的日期</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.GetAge(System.DateTime)">
            <summary>
            根据出生日期获取年龄
            </summary>
            <param name="birthDate">出生日期</param>
            <returns>年龄</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.GetDateDiff(System.DateTime,System.DateTime,YanZhiwei.DotNet2.Utilities.Enums.DatePart)">
            <summary>
            日期差计算
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="part">时间差枚举</param>
            <returns>时间差</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.GetDays(System.DateTime)">
            <summary>
            获取一个月有多少天
            </summary>
            <param name="date">时间</param>
            <returns>一个月有多少天</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.GetFriendlyString(System.DateTime)">
            <summary>
            友好时间
            </summary>
            <param name="datetime">DateTime</param>
            <returns>友好时间</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.GetWeekdays(System.DateTime,System.DateTime)">
            <summary>
            计算两个时间之间工作天数
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>工作天数 </returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.GetWeekends(System.DateTime,System.DateTime)">
            <summary>
            计算两个时间直接周末天数
            </summary>
            <param name="startTime">开始天数</param>
            <param name="endTime">结束天数</param>
            <returns>周末天数</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.GetWeekNumber(System.DateTime)">
            <summary>
            获取日期是一年中第几个星期
            </summary>
            <param name="date">需要计算的时间</param>
            <returns>一年中第几个星期</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.IsAfternoon(System.DateTime)">
            <summary>
            是否是下午时间
            </summary>
            <param name="date">时间</param>
            <returns>下午时间</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.IsDateEqual(System.DateTime,System.DateTime)">
            <summary>
            日期部分比较
            </summary>
            <param name="date">时间一</param>
            <param name="dateToCompare">时间二</param>
            <returns>日期部分是否相等</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.IsFuture(System.DateTime)">
            <summary>
            是否是将来时间
            </summary>
            <param name="date">时间</param>
            <returns> 是否是将来时间</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.IsMorning(System.DateTime)">
            <summary>
            是否是上午时间
            </summary>
            <param name="date">时间</param>
            <returns>是否是上午时间</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.IsNow(System.DateTime)">
            <summary>
            是否是当前时间
            </summary>
            <param name="date">时间</param>
            <returns>是否是当前时间</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.IsPast(System.DateTime)">
            <summary>
            是否是过去时间
            </summary>
            <param name="date">时间</param>
            <returns>是否是过去时间</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.IsTimeEqual(System.DateTime,System.DateTime)">
            <summary>
            时间部分比较
            </summary>
            <param name="time">时间一</param>
            <param name="timeToCompare">时间二</param>
            <returns>时间是否一致</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.IsToday(System.DateTime)">
            <summary>
            日期是否是今天
            </summary>
            <param name="date">日期</param>
            <returns>是否是今天</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.IsWeekDay(System.DateTime)">
            <summary>
            是否是工作日
            </summary>
            <param name="date">日期</param>
            <returns>是否是工作日</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.IsWeekEnd(System.DateTime)">
            <summary>
             是否是周末
            </summary>
            <param name="dt">DateTime</param>
            <returns>是否是周末</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.IsWeekendDay(System.DateTime)">
            <summary>
            是否周末
            </summary>
            <param name="date">日期</param>
            <returns>是否周末</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.LastDayOfWeek(System.DateTime)">
            <summary>
            一周最后一天
            </summary>
            <param name="date">日期</param>
            <returns>一周最后一天</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.ParseDateTimeString(System.String,System.String)">
            <summary>
            时间字符串转换为时间类型
            </summary>
            <param name="data">需要转换的时间字符串</param>
            <param name="format">格式</param>
            <returns>若转换时间失败，则返回默认事件值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.SecondToMinute(System.Int32)">
            <summary>
            把秒转换成分钟
            </summary>
            <param name="second">秒</param>
            <returns>分钟</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.SetTime(System.DateTime,System.Int32)">
            <summary>
            设置时间
            </summary>
            <param name="current">需要设置的时间</param>
            <param name="hour">需要设置小时部分</param>
            <returns>设置后的时间</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.SetTime(System.DateTime,System.Int32,System.Int32)">
            <summary>
            设置时间
            </summary>
            <param name="current">需要设置的时间</param>
            <param name="hour">需要设置小时部分</param>
            <param name="minute">需要设置分钟部分</param>
            <returns>设置后的时间</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.SetTime(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置时间
            </summary>
            <param name="current">需要设置的时间</param>
            <param name="hour">小时</param>
            <param name="minute">分钟</param>
            <param name="second">秒</param>
            <returns>设置后的时间</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.SetTime(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置时间
            </summary>
            <param name="current">需要设置的时间.</param>
            <param name="hour">小时</param>
            <param name="minute">分钟</param>
            <param name="second">秒</param>
            <param name="millisecond">毫秒</param>
            <returns>设置后的时间</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.StartOfDay(System.DateTime)">
            <summary>
             一天起始时间
            </summary>
            <param name="date">需要操作的时间</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.StartOfMonth(System.DateTime)">
            <summary>
            一个月起始时间
            </summary>
            <param name="date">需要操作的时间</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.StartOfWeek(System.DateTime)">
            <summary>
            一周起始时间
            </summary>
            <param name="date">需要操作的时间</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.StartOfWeek(System.DateTime,System.DayOfWeek)">
            <summary>
            一周起始时间
            </summary>
            <param name="date">时间</param>
            <param name="startDayOfWeek">一周起始周天</param>
            <returns>一周起始时间</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.StartOfYear(System.DateTime)">
            <summary>
            一年起始时间
            </summary>
            <param name="date">需要操作的时间</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.ToEpochTimeSpan(System.DateTime)">
            <summary>
            转换成EpochTime
            </summary>
            <param name="date">需要操作的时间</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.Tomorrow(System.DateTime)">
            <summary>
            明天时间
            </summary>
            <param name="date">需要操作的时间</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DateHelper.Yesterday(System.DateTime)">
            <summary>
            昨天时间
            </summary>
            <param name="date">需要操作的时间</param>
            <returns>DateTime</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.DESEncryptHelper">
            <summary>
            DES(Data Encryption Standard)
            DES使用的密钥key为8字节，初始向量IV也是8字节。
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.DESEncryptHelper.key">
            <summary>
            默认加密Key
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.DESEncryptHelper.iv">
            <summary>
            默认向量
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.DESEncryptHelper.des">
            <summary>
            The DES
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DESEncryptHelper.#ctor(System.Byte[],System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="key">密钥</param>
            <param name="iv">向量</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DESEncryptHelper.#ctor(System.String,System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="key">密钥</param>
            <param name="iv">向量</param>
            时间：2016-01-14 13:23
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DESEncryptHelper.CreateDES">
            <summary>
            生成DES
            </summary>
            <returns>DES</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DESEncryptHelper.CreateDES(System.String)">
            <summary>
            根据KEY生成DES
            </summary>
            <param name="key">The key.</param>
            <returns>DES</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DESEncryptHelper.Decrypt(System.String)">
            <summary>
            采用默认向量，Key解密
            </summary>
            <param name="text">需要解密的字符串.</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DESEncryptHelper.Encrypt(System.String)">
            <summary>
            采用默认向量,KEY加密
            </summary>
            <param name="text">需要加密的字符串</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DESEncryptHelper.DecryptString(System.String)">
            <summary>
            解密字符串
            </summary>
            <param name="text">需要解密的字符串</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.DESEncryptHelper.EncryptString(System.String)">
            <summary>
            加密字符串
            </summary>
            <param name="text">需要加密的字符串</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.HtmlHelper">
            <summary>
            Html Tag 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.HtmlHelper.StripTags(System.String,YanZhiwei.DotNet2.Utilities.Enums.StripHtmlType)">
            <summary>
            移除HTML Tag标记
            </summary>
            <param name="data">操作字符串</param>
            <param name="type">移除Html Tag方式</param>
            <returns>操作后的字符串</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.IEnumerableHelper">
            <summary>
            Enumerable 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.IEnumerableHelper.AsLocked``1(System.Collections.Generic.IEnumerable{``0},System.Object)">
             <summary>
             线程安全【上锁】
            <para> eg: foreach(var item in someList.AsLocked(someLock))</para>
             </summary>
             <typeparam name="T">泛型</typeparam>
             <param name="source">IEnumerable</param>
             <param name="syncObject">lock对象</param>
             <returns>IEnumerable</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.EnumHelper">
            <summary>
            枚举帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EnumHelper.CheckedContainEnumName``1(System.String)">
            <summary>
            判断枚举是否包括枚举常数名称
            </summary>
            <typeparam name="T">枚举</typeparam>
            <param name="enumName">枚举常数名称</param>
            <returns>是否包括枚举常数名称</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EnumHelper.GetDescription(System.Enum)">
            <summary>
            从枚举中获取Description
            </summary>
            <param name="targetEnum">需要获取枚举描述的枚举</param>
            <returns>描述内容</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EnumHelper.GetName``1(``0)">
            <summary>
            获取枚举常数名称
            </summary>
            <typeparam name="T">枚举</typeparam>
            <param name="targetEnum">The target enum.</param>
            <returns>常数名称</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EnumHelper.GetName``1(System.Int32)">
            <summary>
            根据枚举数值获取枚举常数名称
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="enumNumber">枚举数值.</param>
            <returns>枚举常数名称</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EnumHelper.GetValues``1(System.Type)">
            <summary>
            将枚举数值转换成数组
            <code>
            int[] _actual = EnumHelper.GetValues'int'(typeof(AreaMode));
            int[] _expected = new int[] { 0, 1, 2, 4, 8, 16, 32, 59 };
            CollectionAssert.AreEqual(_actual, _expected);
            </code>
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="enumType">枚举类型</param>
            <returns>数组</returns>
            日期：2015-09-16 14:00
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EnumHelper.In(System.Enum,System.Enum[])">
            <summary>
            检查枚举是否包含
            <para>
            Assert.IsTrue(AreaMode.CITY.In(AreaMode.CITYTOWN, AreaMode.CITY));
            </para>
            </summary>
            <param name="data">枚举</param>
            <param name="values">枚举</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EnumHelper.NotIn(System.Enum,System.Enum[])">
            <summary>
            检查枚举是否不包含
            <para>
            Assert.IsTrue(AreaMode.CITYTOWN.NotIn(AreaMode.ROAD));
            </para>
            </summary>
            <param name="data">枚举</param>
            <param name="values">枚举</param>
            <returns>是否未包含</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EnumHelper.ParseEnumDescription``1(System.String,``0)">
            <summary>
            根据Description获取枚举
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="description">枚举描述</param>
            <param name="defaultValue">默认枚举</param>
            <returns>枚举</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EnumHelper.ParseEnumName``1(System.String)">
            <summary>
            将枚举常数名称转换成枚举
            </summary>
            <typeparam name="T">枚举</typeparam>
            <param name="enumName">枚举常数名称</param>
            <returns>枚举</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EnumHelper.GetDescriptAttr(System.Reflection.FieldInfo)">
            <summary>
            Gets the Description attribute.
            </summary>
            <param name="fieldInfo">The field information.</param>
            <returns>DescriptionAttribute数组</returns>
            日期：2015-09-16 14:00
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ExceptionHelper">
            <summary>
            Exception帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExceptionHelper.FormatMessage(System.Exception,System.Boolean,System.String)">
            <summary>
            格式化异常消息
            </summary>
            <param name="ex">Exception</param>
            <param name="isHideStackTrace">是否显示堆栈信息</param>
            <param name="appString">堆栈信息描述前缀；默认空格</param>
            <returns>格式化后异常信息</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExceptionHelper.FormatMessage(System.Exception,System.Boolean)">
            <summary>
            格式化异常消息
            </summary>
            <param name="ex">Exception</param>
            <param name="isHideStackTrace">是否显示堆栈信息</param>
            <returns>格式化后异常信息</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExceptionHelper.GetOriginalException(System.Exception)">
            <summary>
            获取innerException
            </summary>
            <param name="ex">Exception</param>
            <returns>Exception</returns>
            日期：2015-10-20 16:22
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ExceptionHelper.Is``1(System.Exception)">
            <summary>
            判断异常是哪个异常类型
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="source">Exception</param>
            <returns>判断异常类型</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.FileHelper">
            <summary>
            文件以及文件夹操作帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.FileHelper.OF_READWRITE">
            <summary>
            The o f_ readwrite
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.FileHelper.OF_SHARE_DENY_NONE">
            <summary>
            The o f_ shar e_ den y_ none
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.FileHelper.PATH_SPLIT_CHAR">
            <summary>
            路径分割符
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.FileHelper.HFILE_ERROR">
            <summary>
            The hfil e_ error
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.ChangeFileType(System.String)">
            <summary>
            修改文件路径后缀名
            <para>eg:FileHelper.CreateTempPath("jpg");</para>
            </summary>
            <param name="extension">文件后缀;eg:xml</param>
            <returns>临时文件路径</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.CheckValidExt(System.String,System.String)">
            <summary>
            验证格式
            </summary>
            <param name="allType">所有格式;eg .jpeg|.jpg|.bmp|.gif|.png</param>
            <param name="chkType">被检查的格式</param>
            <returns>是否是符合的文件格式</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.CloseHandle(System.IntPtr)">
            <summary>
            Closes the handle.
            </summary>
            <param name="hObject">The h object.</param>
            <returns>bool</returns>：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.CopyFiles(System.String,System.String,System.Boolean)">
            <summary>
            复制指定目录的所有文件,不包含子目录及子目录中的文件
            </summary>
            <param name="sourceDir">原始目录</param>
            <param name="targetDir">目标目录</param>
            <param name="overWrite">如果为true,表示覆盖同名文件,否则不覆盖</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.CopyFiles(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            复制指定目录的所有文件
            </summary>
            <param name="sourceDir">原始目录</param>
            <param name="targetDir">目标目录</param>
            <param name="overWrite">如果为true,覆盖同名文件,否则不覆盖</param>
            <param name="copySubDir">如果为true,包含目录,否则不包含</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.CopyFiles(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            复制指定目录的所有文件，并把复制的文件备份到备份目录中
            </summary>
            <param name="sourceDir">原始目录</param>
            <param name="targetDir">目标目录</param>
            <param name="overWrite">如果为true,覆盖同名文件,否则不覆盖</param>
            <param name="copySubDir">如果为true,包含目录,否则不包含</param>
            <param name="backDir">备份目录</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.CopyLargeFile(System.String,System.String,System.Int32)">
            <summary>
            复制本机大文件
            <para>eg:FileHelper.CopyLocalBigFile(@"C:\Users\YanZh_000\Downloads\TheInterview.mp4", @"D:\The Interview(1080p).mp4", 1024 * 1024 * 5))</para>
            </summary>
            <param name="fromPath">源文件的路径</param>
            <param name="toPath">文件保存的路径</param>
            <param name="eachReadLength">每次读取的长度</param>
            <returns>是否复制成功</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.CopyToBak(System.String)">
            <summary>
            文件复制备份【同目录下】
            <para>eg:FileHelper.CopyToBak(TestFilePath);</para>
            </summary>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.CreateDirectory(System.String)">
            <summary>
            创建指定目录
            </summary>
            <param name="targetDir"></param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.CreateDirectory(System.String,System.String)">
            <summary>
            建立子目录
            </summary>
            <param name="parentDir">目录路径</param>
            <param name="subDirName">子目录名称</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.CreatePath(System.String)">
            <summary>
            创建文件路径
            <para>eg:FileHelper.CreatePath(@"C:\aa\cc\dd\ee.xml");</para>
            </summary>
            <param name="path">需要创建的路径</param>
            <returns>是否创建成功</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.CreateTempFilePath(System.String)">
            <summary>
            根据现有路径创建临时文件路径
            </summary>
            <param name="filePath">文件全路径</param>
            <returns></returns>
            时间：2015-12-17 14:13
            备注：
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.DeleteDirectory(System.String)">
            <summary>
            删除指定目录
            </summary>
            <param name="targetDir">目录路径</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.DeleteFiles(System.String)">
            <summary>
            删除指定目录的所有文件，不包含子目录
            </summary>
            <param name="targetDir">操作目录</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.DeleteFiles(System.String,System.Boolean)">
            <summary>
            删除指定目录的所有文件和子目录
            </summary>
            <param name="targetDir">操作目录</param>
            <param name="delSubDir">如果为true,包含对子目录的操作</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.DeleteSubDirectory(System.String)">
            <summary>
            删除指定目录的所有子目录,不包括对当前目录文件的删除
            </summary>
            <param name="targetDir">目录路径</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.FileIsTake(System.String)">
            <summary>
            文件是否被占用
            </summary>
            <param name="fileName">文件名称</param>
            <returns>是否被占用</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.GetExceptEx(System.String)">
            <summary>
            获取除后缀外的路径
            <para>eg:FileHelper.GetExceptEx(@"C:\yanzhiwei.docx");==>"C:\yanzhiwei"</para>
            </summary>
            <param name="path">路径</param>
            <returns>除后缀外的路径</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.GetExceptName(System.String)">
            <summary>
            获取除文件外的路径
            <para>eg:FileHelper.GetExceptName(@"C:\yanzhiwei.docx");==>"C:\"</para>
            </summary>
            <param name="path">路径</param>
            <returns>除文件外的路径</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.GetFileEx(System.String)">
            <summary>
            从路径中获取文件后缀
            <para>eg:FileHelper.GetFileEx(@"C:\yanzhiwei.docx");==>".docx"</para>
            </summary>
            <param name="path">路径</param>
            <returns>文件后缀</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.GetFileName(System.String)">
            <summary>
            从路径中获取文件名称（包括后缀）
            <para>eg:FileHelper.GetFileName(@"C:\yanzhiwei.docx");==>yanzhiwei.docx</para>
            </summary>
            <param name="path">路径</param>
            <returns>文件名称（包括后缀）</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.GetFileNameOnly(System.String)">
            <summary>
            从路径中获取文件名称（不包括后缀）
            <para>eg:FileHelper.GetFileNameOnly(@"C:\yanzhiwei.docx");==>yanzhiwei</para>
            </summary>
            <param name="path">路径</param>
            <returns>文件名称（不包括后缀）</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.GetKBSize(System.String)">
            <summary>
            获取文件大小—kb
            <para>eg:FileHelper.GetKBSize(TestFilePath);</para>
            </summary>
            <param name="filePath">文件路径</param>
            <returns>文件大小_kb</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.GetMBSize(System.String)">
            <summary>
            获取文件大小—mb
            <para>eg:FileHelper.GetMBSize(TestFilePath);</para>
            </summary>
            <param name="filePath">文件路径</param>
            <returns>文件大小_mb</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.GetSize(System.String)">
            <summary>
            获取文件大小—字节
            <para>eg:FileHelper.GetSize(TestFilePath);</para>
            </summary>
            <param name="filePath">文件路径</param>
            <returns>文件大小</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.MoveFiles(System.String,System.String,System.Boolean)">
            <summary>
            剪切指定目录的所有文件,不包含子目录
            </summary>
            <param name="sourceDir">原始目录</param>
            <param name="targetDir">目标目录</param>
            <param name="overWrite">如果为true,覆盖同名文件,否则不覆盖</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.MoveFiles(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            剪切指定目录的所有文件
            </summary>
            <param name="sourceDir">原始目录</param>
            <param name="targetDir">目标目录</param>
            <param name="overWrite">如果为true,覆盖同名文件,否则不覆盖</param>
            <param name="moveSubDir">如果为true,包含目录,否则不包含</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.OpenFolderAndFile(System.String)">
            <summary>
            打开文件或者文件夹
            </summary>
            <param name="path">文件夹或者文件的路径</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.ParseFile(System.String)">
            <summary>
            将文件转换成二进制数组
            <para>eg:FileHelper.ParseFile(@"C:\demo.txt");</para>
            </summary>
            <param name="filePath">文件路径</param>
            <returns>Byte数组</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.RecursiveFolder(System.String,System.Action{System.IO.FileInfo})">
            <summary>
            递归获取文件夹目录下文件
            </summary>
            <param name="pathName">需要递归遍历的文件夹</param>
            <param name="fileHanlder">遍历规则『委托』</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.StartupSet(System.String,System.String,System.Boolean)">
            <summary>
            设置程序开机启动_注册表形式
            </summary>
            <param name="path">需要开机启动的exe路径</param>
            <param name="keyName">注册表中键值名称</param>
            <param name="set">true设置开机启动，false取消开机启动</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper.ToFile(System.Byte[],System.String)">
            <summary>
            将byte[]导出到文件
            <para>eg: FileHelper.ToFile(_bytes, _outputFilePath); </para>
            </summary>
            <param name="bytes"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FileHelper._lopen(System.String,System.Int32)">
            <summary>
            _lopens the specified lp path name.
            </summary>
            <param name="lpPathName">Name of the lp path.</param>
            <param name="iReadWrite">The i read write.</param>
            <returns>IntPtr</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.FontHelper">
            <summary>
            FONT帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FontHelper.AddFontResource(System.String)">
            <summary>
            Adds the font resource.
            </summary>
            <param name="lpFileName">Name of the lp file.</param>
            <returns>数值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FontHelper.InstallFont(System.String)">
            <summary>
            字体安装
            </summary>
            <param name="fontSourcePath">字体所在路径</param>
            <returns>是否安装成功</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FontHelper.SendMessage(System.Int32,System.UInt32,System.Int32,System.Int32)">
            <summary>
            Sends the message.
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="msg">The MSG.</param>
            <param name="wParam">The w parameter.</param>
            <param name="lParam">The l parameter.</param>
            <returns>数值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FontHelper.WriteProfileString(System.String,System.String,System.String)">
            <summary>
            Writes the profile string.
            </summary>
            <param name="lpszSection">The LPSZ section.</param>
            <param name="lpszKeyName">Name of the LPSZ key.</param>
            <param name="lpszString">The LPSZ string.</param>
            <returns>数值</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.FormulaHelper">
            <summary>
            公式计算帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FormulaHelper.CalculateComplexExpression(System.String)">
            <summary>
            计算复杂公式
            </summary>
            <param name="formulaString">The formula string.</param>
            <returns></returns>
            创建时间:2015-05-22 13:49
            备注说明:<c>null</c>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.FormulaHelper.CalculateExpress(System.String)">
            <summary>
            公式计算
            </summary>
            <param name="formulaString">公式计算表达式</param>
            <returns>计算结果</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.HexHelper">
            <summary>
            十六进制帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.HexHelper.ParseHexString(System.String)">
            <summary>
            将十六进制字符串转换成十进制
            <para> eg:FF=>255</para>
            </summary>
            <param name="hexString">十六进制字符串</param>
            <returns>Decimal</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.HexHelper.ToHexString(System.Int32)">
             <summary>
            将INT转换成十六进制字符串
             </summary>
             <param name="number">int</param>
             <returns>十六进制字符串</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.IListHelper">
            <summary>
            List帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.IListHelper.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            集合添加
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="self">本身集合</param>
            <param name="list">需要添加集合</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.IListHelper.AddUnique``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            去重复集合添加
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="self">本身集合</param>
            <param name="items">需要集合</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.IListHelper.AddUnique``1(System.Collections.Generic.List{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            去重复集合添加
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="self">本身集合</param>
            <param name="items">需要添加集合</param>
            <param name="comparaer">IComparer</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.IListHelper.ToList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            转换为List
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="self">需要转换的集合</param>
            <returns>List</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ImageHelper">
             <summary>
            Image帮助类
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.AllowExt">
            <summary>
            图片允许的格式
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.AdjustBrightness(System.Drawing.Bitmap,System.Int32)">
            <summary>
            调节图片亮度值
            </summary>
            <param name="Image">需要处理的图片</param>
            <param name="Value">亮度值【0~100，其中0表示最暗，100表示最亮】</param>
            <returns>调节好后的图片</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.AttachPng(System.String,System.String,YanZhiwei.DotNet2.Utilities.Enums.SetWaterPosition)">
            <summary>
             添加图片水印
             </summary>
             <param name="watermarkImageFile">水印图片</param>
             <param name="sourceImageFile">原文件</param>
             <param name="position">水印位置</param>
             时间：2015-12-17 15:48
             备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.AttachText(System.String,System.String)">
            <summary>
            添加水印文字
            </summary>
            <param name="waterText">水印文字</param>
            <param name="sourceImageFile">原文件</param>
            时间：2015-12-18 9:32
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.CompareByArray(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            通过比较bitmap两者byte[]来判断是否相等
            </summary>
            <param name="b1">Bitmap1</param>
            <param name="b2">Bitmap2</param>
            <returns>比较结果</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.CompareByBase64(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            通过比较bitmap两者ToBase64String来判断是否相等
            </summary>
            <param name="b1">Bitmap1</param>
            <param name="b2">Bitmap2</param>
            <returns>比较结果</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.CompareByMemCmp(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            通过比较bitmap两者memcmp来判断是否相等
            </summary>
            <param name="b1">Bitmap1</param>
            <param name="b2">Bitmap2</param>
            <returns>比较结果</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.CompareByPixel(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            通过比较bitmap两者像素颜色来判断两者是否相等
            </summary>
            <param name="b1">Bitmap1</param>
            <param name="b2">Bitmap2</param>
            <returns>比较结果</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.CompressPhoto(System.String,System.Int32)">
            <summary>
            将图片压缩到指定大小
            </summary>
            <param name="FileName">待压缩图片</param>
            <param name="size">期望压缩后的尺寸</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.CreateSmallPhoto(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            生成缩略图，不加水印
            </summary>
            <param name="sourceImageFile">源文件</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="destfile">缩略图保存位置</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.CreateSmallPhoto(System.String,System.Int32,System.Int32,System.String,YanZhiwei.DotNet2.Utilities.Enums.ImageCutMode)">
            <summary>
            生成缩略图，不加水印
            </summary>
            <param name="sourceImageFile">源文件</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="destfile">缩略图保存位置</param>
            <param name="cMode">裁剪模式</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.GetImageFormat(System.String)">
            <summary>
            获取图片格式
            </summary>
            <param name="imagePath">图片路径</param>
            <returns>ImageFormat</returns>
            时间：2015-12-17 14:21
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.MergerImage(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Bitmap[])">
            <summary>
            合并图片
            </summary>
            <param name="mergerImageWidth">合并图片的宽度</param>
            <param name="mergerImageHeight">合并图片的高度</param>
            <param name="imageX">所绘制图像的左上角的X坐标</param>
            <param name="imageY">所绘制图像的左上角的Y坐标</param>
            <param name="backgroundColor">合并图片的背景色</param>
            <param name="maps">所需要绘制的图片集合</param>
            <returns>绘制的图片</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.ParseBase64String(System.String)">
            <summary>
            将Base64字符串转换成Image
            </summary>
            <param name="base64String">Base64字符串</param>
            <returns>Image</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.ParseByteArray(System.Byte[])">
            <summary>
            byte[]转换成Image
            </summary>
            <param name="byteArray">二进制图片流</param>
            <returns>Image</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.ToBase64String(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            将Image转换Base64字符串
            </summary>
            <param name="image">Image</param>
            <param name="format">ImageFormat</param>
            <returns>Base64字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.ToBitmap(System.String)">
            <summary>
            将.png,.bmp,.jpg类型图片转换成bitmap类型
            </summary>
            <param name="path">图片路径</param>
            <returns>Bitmap</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.ToBytes(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            将图片转换成byte数组
            </summary>
            <param name="Image">Image</param>
            <param name="imageFormat">ImageFormat</param>
            <returns>byte数组</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.ToBytes(System.Drawing.Bitmap)">
            <summary>
            将图片转换成byte数组
            </summary>
            <param name="bitmap">Bitmap</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.CheckedAttachPngParamters(System.String,System.String)">
            <summary>
            检查添加图片水印参数
            </summary>
            <param name="watermarkImageFile">水印png文件</param>
            <param name="sourceImageFile">源文件</param>
            <exception cref="T:System.ArgumentNullException">水印图片路径不能为空！</exception>
            <exception cref="T:System.ArgumentException">
            </exception>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.CutRegion(System.Int32,System.Int32,System.Drawing.Image)">
            <summary>
            根据需要的图片尺寸，按比例剪裁原始图片
            </summary>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="img">原始图片</param>
            <returns>剪裁区域尺寸</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.GetCodecInfo(System.String)">
            <summary>
            保存JPG时用
            </summary>
            <param name="mimeType"> </param>
            <returns>得到指定mimeType的ImageCodecInfo </returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.KiSaveAsJPEG(System.String,System.String,System.Int32)">
            <summary>
            保存为JPEG格式，支持压缩质量选项
            </summary>
            <param name="sourceFile"></param>
            <param name="fileName"></param>
            <param name="qty"></param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.memcmp(System.Byte[],System.Byte[],System.IntPtr)">
            <summary>
            memcmp API
            </summary>
            <param name="b1">字节数组1</param>
            <param name="b2">字节数组2</param>
            <param name="count">The count.</param>
            <returns>如果两个数组相同，返回0；如果数组1小于数组2，返回小于0的值；如果数组1大于数组2，返回大于0的值。</returns>
            时间：2015-12-28 11:03
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ImageHelper.SetWaterMarkImageQuality(System.Drawing.Bitmap,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            设置水印图片质量
            </summary>
            <param name="sourceBmp">The source BMP.</param>
            <param name="sourceImageFile">The source image file.</param>
            <param name="sourceImageFormat">The source image format.</param>
            时间：2015-12-17 14:43
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.INIHelper">
             <summary>
             INI工具类
            <para>参考:</para>
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.INIHelper.ReadDefaultValue">
            <summary>
            当读取不到值得时候缺省值
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.INIHelper.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath">INI路径eg：@"C:\test.ini"</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.INIHelper.Exist">
            <summary>
            检查INI文件路径是否存在
            </summary>
            <returns>是否存在</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.INIHelper.ReadValue(System.String,System.String)">
            <summary>
            读取INI
            </summary>
            <param name="Section">段落名称</param>
            <param name="Key">关键字</param>
            <returns>读取值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.INIHelper.ReadValue(System.String,System.String,System.String)">
            <summary>
            读取INI
            </summary>
            <param name="Section">段落名称</param>
            <param name="Key">关键字</param>
            <param name="defaultValue">当根据KEY读取不到值得时候缺省值</param>
            <returns>读取的值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.INIHelper.WriteValue(System.String,System.String,System.String)">
            <summary>
            写入INI
            eg:_iniHelper.WriteValue("测试", "Name", "YanZhiwei");
            </summary>
            <param name="Section">段落名称</param>
            <param name="Key">关键字</param>
            <param name="Value">关键字对应的值</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.INIHelper.WriteValue``1(System.String,``0)">
            <summary>
            将对象保存在ini
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="Section">段落名称</param>
            <param name="t">类型</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.INIHelper.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            声明INI文件的读操作函数
            </summary>
            <param name="section">段落名称</param>
            <param name="key">关键字</param>
            <param name="def">无法读取时候时候的缺省数值</param>
            <param name="retVal">读取数值</param>
            <param name="size">数值的大小></param>
            <param name="filePath">路径</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.INIHelper.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            声明INI文件的写操作函数
            </summary>
            <param name="section">段落名称</param>
            <param name="key">关键字</param>
            <param name="val">关键字对应的值</param>
            <param name="filePath">路径</param>
            <returns></returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.JsonHelper">
            <summary>
            JSON转换类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.JsonHelper.ToJson(System.Data.DataSet)">
            <summary>
            DataSet转换为Json
            </summary>
            <param name="dataSet">DataSet对象</param>
            <returns>Json字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.JsonHelper.ToJson(System.Data.DataTable)">
            <summary>
            Datatable转换为Json
            </summary>
            <param name="table">Datatable对象</param>
            <returns>Json字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.JsonHelper.ToJson(System.Data.DataTable,System.String)">
            <summary>
            DataTable转换为Json
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.JsonHelper.ToJson(System.Data.Common.DbDataReader)">
            <summary>
            DataReader转换为Json
            </summary>
            <param name="dataReader">DataReader对象</param>
            <returns>Json字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.JsonHelper.HanlderJsonString(System.String)">
            <summary>
            过滤特殊字符
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.JsonHelper.StringFormat(System.String,System.Type)">
            <summary>
            格式化字符型、日期型、布尔型
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.MathHelper">
            <summary>
            数据计算辅助操作类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MathHelper.GetDistance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            获取两个坐标的距离
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ProcessHelper">
            <summary>
            Process 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ProcessHelper.ExecBatCommand(System.Action{System.Action{System.String}})">
            <summary>
            动态执行一系列控制台命令
            <para>eg: ProcessHelper.ExecBatCommand(cmd =></para>
            <para>{</para>
            <para>cmd("ipconfig");</para>
            <para>cmd("getmac");</para>
            <para>cmd("exit 0");</para>
            <para> });</para>
            </summary>
            <param name="inputAction">需要执行指令 </param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.SortHelper">
            <summary>
            排序辅助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SortHelper.BubbleSort``1(``0[])">
            <summary>
            冒泡排序
            </summary>
            <typeparam name="T">泛型，需实现IComparable</typeparam>
            <param name="array">泛型数组</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.StringBuilderHelper">
            <summary>
            StringBuilder 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringBuilderHelper.AppendIf``1(System.Text.StringBuilder,System.Func{``0,System.Boolean},``0[])">
            <summary>
            条件添加
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="builder">StringBuilder</param>
            <param name="predicate">条件委托</param>
            <param name="values">数值</param>
            <returns>StringBuilder</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringBuilderHelper.Clear(System.Text.StringBuilder)">
            <summary>
            清空StringBuilder
            </summary>
            <param name="builder">StringBuilder</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringBuilderHelper.NullOrCreate(System.Text.StringBuilder)">
            <summary>
            检查StringBuilder是否为null，当为null的时候，实例化返回。
            </summary>
            <param name="builder">StringBuilder</param>
            <returns>StringBuilder</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringBuilderHelper.RemoveLast(System.Text.StringBuilder,System.String)">
             <summary>
             移除最后一个字符；
             <para>
            StringBuilder _builder = new StringBuilder();
             _builder.Append("Hello World;");
             _builder = _builder.RemoveLast(";");
             Assert.AreEqual("Hello World", _builder.ToString());
             </para>
             </summary>
             <param name="builder">StringBuilder</param>
             <param name="value">字符</param>
             <returns></returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.MapHelper">
            <summary>
            地图操作 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MapHelper.GetDistance(YanZhiwei.DotNet2.Utilities.Models.LatLngPoint,YanZhiwei.DotNet2.Utilities.Models.LatLngPoint)">
            <summary>
            经纬度测距
            </summary>
            <param name="fromPoint">起始经纬度</param>
            <param name="toPoint">结束经纬度</param>
            <returns>距离</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MapHelper.GetQueryLocation(YanZhiwei.DotNet2.Utilities.Models.LatLngPoint)">
            <summary>
            将经纬度转换地图上X,Y坐标
            </summary>
            <param name="point">经纬度</param>
            <returns>X,Y坐标</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MapHelper.LatToPixel(System.Double,System.Int32)">
            <summary>
            将纬度转换成地图y轴坐标
            </summary>
            <param name="lat">纬度</param>
            <param name="zoom">缩放级别</param>
            <returns>坐标</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MapHelper.LonToPixel(System.Double,System.Int32)">
            <summary>
            将经度转换成地图x轴坐标
            </summary>
            <param name="lng">经度</param>
            <param name="zoom">缩放级别</param>
            <returns>坐标</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MapHelper.OutOfChina(YanZhiwei.DotNet2.Utilities.Models.LatLngPoint)">
            <summary>
            坐标是否在国外
            </summary>
            <param name="latlon">经纬度</param>
            <returns>坐标是否在国外</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MapHelper.PixelToLat(System.Double,System.Int32)">
            <summary>
            将Y轴坐标转换成纬度
            </summary>
            <param name="pixelY">Y轴坐标</param>
            <param name="zoom">缩放级别</param>
            <returns>纬度</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MapHelper.PixelToLon(System.Double,System.Int32)">
            <summary>
            将X轴坐标转换成经度
            </summary>
            <param name="pixelX">X轴坐标</param>
            <param name="zoom">缩放级别</param>
            <returns>经度</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.MapOffsetDataHelper">
            <summary>
            地图纠偏数据帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MapOffsetDataHelper.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="path">纠偏数据文件路径</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MapOffsetDataHelper.GetMapCoordArrayList">
            <summary>
            获取纠偏数据集合
            </summary>
            <returns>纠偏数据集合</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MapOffsetDataHelper.GetMapCoordList">
            <summary>
            获取纠偏数据集合
            </summary>
            <returns>纠偏数据集合</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MapOffsetDataHelper.ToCoord(System.Byte[])">
            <summary>
            将字节转化为具体的数据对象
            </summary>
            <param name="bytes">bytes</param>
            <returns>MapCoord</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.MapOffsetHelper">
            <summary>
            地图纠偏 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MapOffsetHelper.#ctor(System.Collections.ArrayList)">
            <summary>
            构造函数
            </summary>
            <param name="offsetData">纠偏数据</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MapOffsetHelper.GCJ02ToWGS84(YanZhiwei.DotNet2.Utilities.Models.LatLngPoint)">
            <summary>
            火星坐标转 (GCJ-02)地球坐标(WGS-84)
            </summary>
            <param name="gcjPoint">火星坐标转 (GCJ-02)</param>
            <returns>地球坐标(WGS-84)</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.MapOffsetHelper.WGS84ToGCJ02(YanZhiwei.DotNet2.Utilities.Models.LatLngPoint)">
            <summary>
            地球坐标(WGS-84)转火星坐标 (GCJ-02)
            </summary>
            <param name="wgsPoint">地球坐标(WGS-84)</param>
            <returns>火星坐标 (GCJ-02)</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.TestHelper">
            <summary>
            运行时间测试帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.TestHelper.watch">
            <summary>
            测试运行时间
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.TestHelper.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.TestHelper.GetElapsed">
            <summary>
            获取运行时间间隔,单位：秒
            </summary>
            <returns>运行时间间隔</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.TestHelper.GetElapsedAndStop">
            <summary>
            停止并获取运行时间间隔,单位：秒
            </summary>
            <returns>运行时间间隔</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.TestHelper.Reset">
            <summary>
            重置计时器
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.TestHelper.Start">
            <summary>
            开始计时
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.TestHelper.Stop">
            <summary>
            停止计时
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ThreadHelper">
            <summary>
            Thread 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ThreadHelper.CancelSleep(System.Threading.Thread)">
            <summary>
            取消Thread.Sleep状态，继续线程
            </summary>
            <param name="thread">Thread</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ThreadHelper.StartAndIgnoreAbort(System.Threading.Thread,System.Action{System.Exception})">
            <summary>
            启动线程，自动忽略停止线程时触发的<see cref="T:System.Threading.ThreadAbortException"/>异常
            </summary>
            <param name="thread">线程</param>
            <param name="failAction">引发非<see cref="T:System.Threading.ThreadAbortException"/>异常时执行的逻辑</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ThreadPoolHelper">
            <summary>
             ThreadPool 帮助类
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Common.ThreadPoolHelper.ActiveThreadNumber">
            <summary>
            线程池中的活动工作线程数
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Common.ThreadPoolHelper.AvailableThreadNumber">
            <summary>
            线程池中的可用工作线程数
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Common.ThreadPoolHelper.MaxThreadNumber">
            <summary>
            获取线程池中的最大工作线程数
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.TimeSpanHelper">
            <summary>
            TimeSpan帮助类
            </summary>
            创建时间:2015-06-30 15:39
            备注说明:<c>null</c>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.TimeSpanHelper.AddHours(System.TimeSpan,System.Int32)">
            <summary>
            添加小时
            </summary>
            <param name="ts">TimeSpan</param>
            <param name="hours">小时</param>
            <returns>TimeSpan</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.TimeSpanHelper.AddMinutes(System.TimeSpan,System.Int32)">
            <summary>
            添加分钟
            </summary>
            <param name="ts">TimeSpan</param>
            <param name="minutes">分钟</param>
            <returns>TimeSpan</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.TimeSpanHelper.AddSeconds(System.TimeSpan,System.Int32)">
            <summary>
            添加秒
            </summary>
            <param name="ts">TimeSpan</param>
            <param name="seconds">秒</param>
            <returns>TimeSpan</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.TimeSpanHelper.FormatTime(System.TimeSpan)">
            <summary>
            格式化时间
            <para>eg: Assert.AreEqual("14:01", TimeSpanHelper.FormatTime(new TimeSpan(14, 1, 2)));</para>
            </summary>
            <param name="timefield">The timefield.</param>
            <returns>格式化后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.TimeSpanHelper.ParseTimeString(System.String)">
            <summary>
            将时间字符串转换成TimeSpan
            <para>eg: Assert.AreEqual(new TimeSpan(12, 12, 0), TimeSpanHelper.ParseTimeString("12:12:00"));</para>
            </summary>
            <param name="timeString">时间字符串</param>
            <returns>TimeSpan</returns>
            创建时间:2015-06-30 15:39
            备注说明:<c>null</c>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.TimeSpanHelper.SetToday(System.TimeSpan)">
            <summary>
            将日期设置为今天
            </summary>
            <param name="ts">TimeSpan</param>
            <returns>TimeSpan</returns>
            创建时间:2015-06-30 15:43
            备注说明:<c>null</c>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.UnixEpochHelper">
            <summary>
            Unix 时间戳 帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.UnixEpochHelper.UnixEpochUtcValue">
            <summary>
            Unix 时间戳
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.UnixEpochHelper.#cctor">
            <summary>
            Initializes the <see cref="T:YanZhiwei.DotNet2.Utilities.Common.UnixEpochHelper"/> class.
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.UnixEpochHelper.DateTimeFromUnixTimestampMillis(System.Int64)">
            <summary>
            将Unix时间戳转换成DateTime
            </summary>
            <param name="millis">毫秒</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.UnixEpochHelper.GetCurrentUnixTimestampMillis">
            <summary>
            获取当前时间Unix时间戳【毫秒】
            </summary>
            <returns>Unix时间戳</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.WGSMercatorLatLonHelper">
            <summary>
            墨卡托坐标与GS-84转换 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.WGSMercatorLatLonHelper.MercatorToWGS84(YanZhiwei.DotNet2.Utilities.Models.LatLngPoint)">
            <summary>
            将墨卡托坐标转换成地球坐标(WGS-84)
            </summary>
            <param name="mercator">墨卡托坐标</param>
            <returns>球坐标(WGS-84)</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.WGSMercatorLatLonHelper.WGS84ToMercator(YanZhiwei.DotNet2.Utilities.Models.LatLngPoint)">
            <summary>
            将地球坐标(WGS-84)转换成墨卡托坐标
            </summary>
            <param name="wgsPoint">地球坐标(WGS-84)</param>
            <returns>墨卡托坐标</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.WGSGCJLatLonHelper">
            <summary>
            地球坐标系 (WGS-84) 到火星坐标系 (GCJ-02) 的转换 帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.WGSGCJLatLonHelper.a">
            <summary>
            常量a
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.WGSGCJLatLonHelper.ee">
            <summary>
            常量ee
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.WGSGCJLatLonHelper.pi">
            <summary>
            The pi
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.WGSGCJLatLonHelper.GCJ02ToWGS84(YanZhiwei.DotNet2.Utilities.Models.LatLngPoint)">
            <summary>
            火星坐标转 (GCJ-02)地球坐标(WGS-84)
            </summary>
            <param name="gcjPoint">火星坐标转 (GCJ-02)</param>
            <returns>地球坐标(WGS-84)</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.WGSGCJLatLonHelper.WGS84ToGCJ02(YanZhiwei.DotNet2.Utilities.Models.LatLngPoint)">
            <summary>
            地球坐标(WGS-84)转火星坐标 (GCJ-02)
            </summary>
            <param name="wgsPoint">地球坐标(WGS-84)</param>
            <returns>火星坐标 (GCJ-02)</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.WGSGCJLatLonHelper.Transform(YanZhiwei.DotNet2.Utilities.Models.LatLngPoint)">
            <summary>
            转义经纬度
            </summary>
            <param name="point">需要转义经纬度</param>
            <returns>转移后的经纬度</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.WGSGCJLatLonHelper.TransformLat(System.Double,System.Double)">
            <summary>
            转义纬度
            </summary>
            <param name="lonX">lonX</param>
            <param name="latY">latY</param>
            <returns>纬度</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.WGSGCJLatLonHelper.TransformLon(System.Double,System.Double)">
            <summary>
            转义经度
            </summary>
            <param name="lonX">纬度.</param>
            <param name="latY">经度.</param>
            <returns>经度</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.XMLOpHelper">
            <summary>
            XML 辅助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLOpHelper.FormatXml(System.String,System.Text.Encoding)">
            <summary>
            格式化xml内容显示
            </summary>
            <param name="xmlString">xml内容</param>
            <param name="encoding">encode编码</param>
            <returns>string</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLOpHelper.ParseXMLFile(System.String)">
            <summary>
            将XML文件读取返回成DataSet
            </summary>
            <param name="path">xml路径</param>
            <returns>返回DataSet，若发生异常则返回NULL</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.LogHelper">
            <summary>
            日志帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.LogHelper.FinishedLogTask">
            <summary>
            结束日志线程
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.LogHelper.Write(System.String)">
            <summary>
            记录日志
            </summary>
            <param name="msg">日志内容</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.LogHelper.Write(System.String,YanZhiwei.DotNet2.Utilities.Enums.LogLevel)">
            <summary>
            记录日志
            </summary>
            <param name="msg">日志内容</param>
            <param name="type">日志类型</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.LogHelper.Write(YanZhiwei.DotNet2.Utilities.Enums.LogLevel,System.String)">
            <summary>
            记录日志
            </summary>
            <param name="type">日志类型</param>
            <param name="msg">日志内容</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.LogHelper.Write(System.Exception)">
            <summary>
            记录日志
            </summary>
            <param name="ex">异常</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.NameValueHelper">
            <summary>
            NameValueCollection帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.NameValueHelper.Check(System.Collections.Specialized.NameValueCollection,System.String,System.String)">
            <summary>
            针对NameValueCollection的键值判断
            </summary>
            <param name="collection">NameValueCollection</param>
            <param name="key">键</param>
            <param name="expect">期待的值</param>
            <returns>根据键获取的值与期待的值一致</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.NameValueHelper.Check``1(System.Collections.Specialized.NameValueCollection,System.String,System.String,System.Func{System.Boolean,``0})">
            <summary>
            针对NameValueCollection的键值判断
            <para>eg: _modulesettings.JudgedEqual("EmergencyControl", "1", result => { return result == true ? BarItemVisibility.Always : BarItemVisibility.Never; });</para>
            </summary>
            <typeparam name="T">返回类型</typeparam>
            <param name="collection">NameValueCollection</param>
            <param name="key">键</param>
            <param name="expect">期待的值</param>
            <param name="checkedHanlder">委托</param>
            <returns>自定义返回类型</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.NameValueHelper.Check``1(System.String,System.String,System.Func{System.Boolean,``0})">
            <summary>
            针对String类型的等于判断
            <para>eg: _modulesettings["WeekSchedule"].JudgedEqual("1", result => ItemVisibilityRule(result));</para>
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="value">需要判断的值</param>
            <param name="expect">期待的值</param>
            <param name="checkedHanlder">委托</param>
            <returns>自定义返回类型</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ResourceHelper">
            <summary>
            资源文件操作帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ResourceHelper.WriteFile(System.String,System.String)">
            <summary>
            将嵌入的资源写入到本地
            </summary>
            <param name="resourceName">嵌入的资源名称【名称空间.资源名称】</param>
            <param name="filename">写入本地的路径</param>
            <returns>是否成功</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.RMBHelper">
            <summary>
            RMB 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.RMBHelper.ToRMBDescription(System.Decimal)">
            <summary>
            将数字转换成人民币大小金额
            </summary>
            <param name="rmbValue">数字</param>
            <returns>人民币大小金额</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ThumbHelper">
            <summary>
            缩略图帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ThumbHelper.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImagePath">源图路径（物理路径）</param>
            <param name="thumbnailPath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式: HW=指定高宽,W=指定宽，高按比例, H=指定高，宽按比例, Cut=指定高宽裁减(不变形), DB=等比缩放（不变形，如果高大按高，宽大按宽缩放） </param>
            <param name="type">缩略图的类型：JPG, PNG, GIF, BMP</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper">
            <summary>
            Sql Server帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="sqlServerConnectString">连接字符串
            <example>eg:server=YANZHIWEI-PC\SQLEXPRESS;database=db;uid=sa;pwd=sasa;</example>
            <example>eg:Server= localhost; Database= employeedetails; Integrated Security=True;</example>
            </param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.#ctor(System.Data.SqlClient.SqlConnectionStringBuilder)">
            <summary>
            构造函数
            </summary>
            <param name="sqlConnectionStringBuilder">SqlConnectionStringBuilder</param>
            时间：2016-02-26 10:31
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.BatchInert(System.String,System.Data.DataTable,System.Int32)">
            <summary>
            批量插入
            <para>eg:int _actual = SqlHelper.BatchInert("Person", _db, 300);</para>
            </summary>
            <param name="desTable">数据库目标表</param>
            <param name="dataTable">需要插入的表</param>
            <param name="batchSize">批量插入数量</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.BeginTranscation">
            <summary>
            开启事务
            </summary>
            <returns>SqlServerTransaction</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.ExecuteDataSet(System.String,System.Data.Common.DbParameter[])">
            <summary>
            ExecuteDataSet
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">参数</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.ExecuteDataTable(System.String,System.Data.Common.DbParameter[])">
            <summary>
            ExecuteDataTable
            <para>eg:string _sql = "select * from dbo.Person where PName=@pname";</para>
            <para>DataTable _table = SqlHelper.ExecuteDataTable(_sql, new DbParameter[1] { new SqlParameter("@pname", "YanZhiwei") });</para>
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">参数</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.ExecuteNonQuery(System.String,System.Data.Common.DbParameter[])">
             <summary>
             执行sql语句，返回影响行数
            <para>eg: string _sql = "insert into [Person](PName,PAge,PAddress) values(@pname,@page,@paddress)";</para>
            <para>int _actual = SqlHelper.ExecuteNonQuery(_sql,</para>
            <para>new DbParameter[3] {</para>
            <para>new SqlParameter("@pname","YanZhiwei"),</para>
            <para>new SqlParameter("@page",18),</para>
            <para>new SqlParameter("@paddress","zhuzhou")</para>
            <para>});</para>
             </summary>
             <param name="sql">sql语句</param>
             <param name="parameters">参数</param>
             <returns>影响行数</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.ExecuteNonQuery(YanZhiwei.DotNet2.Utilities.Core.SqlServerTransaction,System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行sql语句，返回影响行数 带事务
            </summary>
            <param name="dbTranscaion">事务对象</param>
            <param name="sql">sql语句</param>
            <param name="parameters">参数</param>
            <returns>影响行数</returns>
            时间：2015-11-24 9:31
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.ExecutePageQuery(System.String,System.String,System.String,YanZhiwei.DotNet2.Utilities.Enums.OrderBy,System.String,System.Int32,System.Int32)">
            <summary>
            获取分页数据，利用RowNumber()方式
            </summary>
            <param name="tableName">数据表名『eg:Orders』</param>
            <param name="fields">要读取的字段『*:所有列；或者：eg:OrderID,OrderDate,ShipName,ShipCountry』</param>
            <param name="orderField">依据排序的列『eg:OrderID』</param>
            <param name="orderBy">排序方式『升序，降序』</param>
            <param name="sqlWhere">筛选条件『eg:Order=1，若无筛选条件，则""』</param>
            <param name="pageSize">每页显示多少条数据</param>
            <param name="pageIndex">当前页码</param>
            <returns>组元[DataTable,分页总数，记录总数]</returns>
            时间：2016-01-05 13:21
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.ExecuteReader(System.String,System.Data.Common.DbParameter[])">
            <summary>
            ExecuteReader
            <para>eg:string _sql = "select * from dbo.Person where PName=@pname";</para>
            <para>IDataReader _reader = SqlHelper.ExecuteReader(_sql, new DbParameter[1] { new SqlParameter("@pname", "YanZhiwei") });</para>
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">参数</param>
            <returns>IDataReader</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.ExecuteReader``1(System.String,System.Data.Common.DbParameter[])">
            <summary>
            ExecuteReader
            <para>eg:string _sql = "select * from dbo.Person where PName=@pname";</para>
            <para>List _products = SqlHelper.ExecuteReader(_sql, new DbParameter[1] { new SqlParameter("@pname", "YanZhiwei") });</para>
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">参数</param>
            <returns>集合</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.ExecuteReaderSingle``1(System.String,System.Data.Common.DbParameter[])">
            <summary>
            通过ExecuteReader方式获取实体类
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">参数</param>
            <returns>对象</returns>
            时间：2016-02-15 15:26
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.ExecuteScalar(System.String,System.Data.Common.DbParameter[])">
            <summary>
            ExecuteScalar
            <para>eg:string _sql = "select PAge from dbo.Person where PName=@pname";</para>
            <para>object _value = SqlHelper.ExecuteScalar(_sql, new DbParameter[1] { new SqlParameter("@pname", "YanZhiwei") });</para>
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">参数</param>
            <returns>Object</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.StoreExecuteDataReader(System.String,System.Data.Common.DbParameter[])">
            <summary>
            ExecuteReader——存储过程
            <para>eg:SqlParameter _parameter = new SqlParameter("@pName", SqlDbType.NVarChar);</para>>
            <para>   _parameter.Direction = ParameterDirection.Input;</para>
            <para>   _parameter.Value = "YanZhiwei";</para>
            <para>   DbParameter[] _parameterList = new DbParameter[1] { _parameter };</para>
            <para>   IDataReader _reader = SqlHelper.StoreExecuteDataReader("PROC_FilterPerson", _parameterList);</para>
            </summary>
            <param name="proName">存储过程名称</param>
            <param name="parameters">参数</param>
            <returns>IDataReader</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.StoreExecuteDataTable(System.String,System.Data.Common.DbParameter[],System.Action{System.Data.SqlClient.SqlParameterCollection})">
            <summary>
            ExecuteDataTable——存储过程
            </summary>
            <param name="proName">存储过程名称</param>
            <param name="parameters">存储过程参数</param>
            <param name="outputParamterFacotry">存储过程输出参数</param>
            <returns>DataTable</returns>
            时间：2015-11-03 8:58
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.StoreExecuteNonQuery(System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行sql语句，返回影响行数——存储过程
            </summary>
            <param name="proName">存储过程名称</param>
            <param name="parameters">参数</param>
            <returns>影响行数</returns>
            时间：2016-02-24 15:35
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper.StoreExecutePageQuery(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            存储过程数据分页
            </summary>
            <param name="tableName">数据表名</param>
            <param name="fields">要读取的字段</param>
            <param name="orderField">排序字段</param>
            <param name="sqlWhere">查询条件</param>
            <param name="pageSize">每页显示多少条数据</param>
            <param name="pageIndex">当前页码</param>
            <returns>组元[DataTable,分页总数，记录总数]</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.NetWorkHelper">
            <summary>
            NetWork帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.NetWorkHelper.GetHostName">
            <summary>
            获取本机名
            </summary>
            <returns>本机名</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.NetWorkHelper.GetLocalIp4Address">
            <summary>
            获取本地Ip4地址集合
            </summary>
            <returns>本地Ip4地址集合</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.NetWorkHelper.GetMacAddress(System.Net.NetworkInformation.NetworkInterfaceType,System.Func{System.String,System.String})">
            <summary>
            根据网卡类型来获取mac地址
            </summary>
            <param name="networkType">网卡类型</param>
            <param name="macAddressFormatHanlder">格式化获取到的mac地址</param>
            <returns>获取到的mac地址</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.NetWorkHelper.GetMacAddress(System.Net.NetworkInformation.NetworkInterfaceType,System.Net.NetworkInformation.OperationalStatus,System.Func{System.String,System.String})">
            <summary>
            根据网卡类型以及网卡状态获取mac地址
            </summary>
            <param name="networkType">网卡类型</param>
            <param name="status">网卡状态</param>
            Up 网络接口已运行，可以传输数据包。
            Down 网络接口无法传输数据包。
            Testing 网络接口正在运行测试。
            Unknown 网络接口的状态未知。
            Dormant 网络接口不处于传输数据包的状态；它正等待外部事件。
            NotPresent 由于缺少组件（通常为硬件组件），网络接口无法传输数据包。
            LowerLayerDown 网络接口无法传输数据包，因为它运行在一个或多个其他接口之上，而这些“低层”接口中至少有一个已关闭。
            <param name="macAddressFormatHanlder">格式化获取到的mac地址</param>
            <returns>获取到的mac地址</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.NetWorkHelper.GetMacAddress(System.Func{System.String,System.String})">
            <summary>
            获取读到的第一个mac地址
            </summary>
            <param name="macAddressFormatHanlder">委托</param>
            <returns>mac地址</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.NetWorkHelper.ParseIpString(System.String)">
            <summary>
            将字符串IP转换为IPAddress对象，若转换失败，则返回NULL
            </summary>
            <param name="ipAddress">The ip address.</param>
            <returns>若转换失败，则返回NULL</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.NetWorkHelper.PortInUse(System.Int32)">
            <summary>
            指定指定端口是否已经被占用的代码
            </summary>
            <param name="port">端口号</param>
            <returns>是否已经占用</returns>
            日期：2015-10-09 16:16
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.EntityHelper">
            <summary>
            OBJECT帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EntityHelper.DeepClone``1(``0)">
            <summary>
            对象深拷贝
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="obj">Object</param>
            <returns>Object</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.EntityHelper.ValueEqual``1(``0,``0)">
            <summary>
            对象值比较
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="obj1">The obj1.</param>
            <param name="obj2">The obj2.</param>
            <returns>值是否相等</returns>
            日期：2015-09-16 13:58
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.OLEDBExcelHelper">
            <summary>
            EXCEL 操作帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.OLEDBExcelHelper.#ctor(System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="excelPath">EXCEL路径</param>
            <param name="x64Version">是否是64位操作系统</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.OLEDBExcelHelper.ExecuteDataSet">
            <summary>
            获取excel所有sheet数据
            </summary>
            <returns>DataSet</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.OLEDBExcelHelper.ExecuteDataTable(System.String)">
             <summary>
             读取sheet
            <para> eg:select * from [Sheet1$]</para>
             </summary>
             <param name="sql">sql语句</param>
             <returns>DataTable</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.OLEDBExcelHelper.ExecuteNonQuery(System.String)">
            <summary>
            Excel操作_添加，修改
            DELETE不支持
            </summary>
            <param name="sql">sql语句</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.OLEDBExcelHelper.GetExcelSheetNames">
            <summary>
            获取EXCEL内sheet集合
            </summary>
            <returns>sheet集合</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.OLEDBExcelHelper.BuilderConnectionString">
            <summary>
            创建链接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.PinyingHelper">
            <summary>
            汉字拼音帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.PinyingHelper.pinyinHash">
            <summary>
            拼音对应数值存储
            </summary>
            日期：2015-10-09 17:23
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.PinyingHelper.#cctor">
            <summary>
            Initializes the <see cref="T:YanZhiwei.DotNet2.Utilities.Common.PinyingHelper"/> class.
            </summary>
            日期：2015-10-09 17:23
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.PinyingHelper.GetPinyin(System.String)">
            <summary>
            获得汉字的拼音，如果输入的是英文字符将原样输出，中文标点符号将被忽略
            </summary>
            <param name="chineseChars">汉字字符串</param>
            <returns>拼音</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.PinyingHelper.GetShortPinyin(System.String)">
            <summary>
            获得汉字拼音的简写，即每一个汉字的拼音的首字母组成的串，如果输入的是英文字符将原样输出，中文标点符号将被忽略
            </summary>
            <param name="chineseChars">汉字字符串</param>
            <returns>拼音简写</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.PinyingHelper.GetPinyin(System.Int32)">
            <summary>
            获得汉字的拼音
            </summary>
            <param name="charValue">数值</param>
            <returns>拼音</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.RandomHelper">
            <summary>
            Random的帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.RandomHelper.RandomSeed">
            <summary>
            随机种子
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.RandomHelper.RandomString09AZ">
            <summary>
            0~9 A~Z字符串
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.RandomHelper.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.RandomHelper.NetxtString(System.Int32,System.Boolean)">
            <summary>
            生成随机字符串
            <para>eg:RandomHelper.NetxtString(4, false);</para>
            </summary>
            <param name="size">字符串长度</param>
            <param name="lowerCase">字符串是小写</param>
            <returns>随机字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.RandomHelper.NetxtString(System.String,System.Int32,System.Boolean)">
            <summary>
            依据指定字符串来生成随机字符串
            <para>eg:RandomHelper.NetxtString(RandomHelper.RandomString_09AZ, 4, false);</para>
            </summary>
            <param name="randomString">指定字符串</param>
            <param name="size">字符串长度</param>
            <param name="lowerCase">字符串是小写</param>
            <returns>随机字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.RandomHelper.NextBool">
            <summary>
            随机布尔值
            </summary>
            <returns>随机布尔值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.RandomHelper.NextColor">
            <summary>
            生成随机颜色
            </summary>
            <returns>随机颜色</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.RandomHelper.NextDateTime">
            <summary>
            获取随机时间
            </summary>
            <returns>随机时间</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.RandomHelper.NextDouble(System.Double,System.Double)">
            <summary>
            生成设置范围内的Double的随机数
            <para>eg:RandomHelper.NextDouble(1.5, 1.7);</para>
            </summary>
            <param name="miniDouble">生成随机数的最大值</param>
            <param name="maxiDouble">生成随机数的最小值</param>
            <returns>Double的随机数</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.RandomHelper.NextMacAddress">
            <summary>
            生成随机MAC地址
            <para>eg:RandomHelper.NextMacAddress();</para>
            </summary>
            <returns>新的MAC地址</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.RandomHelper.NextNumber(System.Int32,System.Int32)">
            <summary>
            生成随机数【包括上下限】
            </summary>
            <param name="low">下限</param>
            <param name="high">上线</param>
            <returns>随机数</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.RandomHelper.NextTime">
            <summary>
            生成随机时间
            <para>eg:RandomHelper.NextTime();</para>
            </summary>
            <returns>随机时间</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ReflectHelper">
            <summary>
            反射帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.ReflectHelper.bindingFlags">
            <summary>
            方法或属性搜索标志
            </summary>
            日期：2015-10-10 9:08
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ReflectHelper.ContainProperty``1(``0,System.String)">
            <summary>
            利用反射来判断对象是否包含某个属性
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="instance">object</param>
            <param name="propertyName">需要判断的属性</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ReflectHelper.CreateInstance``1(System.String,System.String)">
            <summary>
            反射创建对象
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="fullName">类全名称</param>
            <param name="assemblyName">程序集全程</param>
            <returns>类型</returns>
            时间：2016-01-07 14:47
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ReflectHelper.GetDisplayNames``1">
            <summary>
            获取实体类[DisplayName]以及本身Name
            </summary>
            <typeparam name="T">实体类</typeparam>
            <returns>IDictionary</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ReflectHelper.GetFieldValue``1(``0,System.String)">
            <summary>
            获取值
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="obj">对象</param>
            <param name="name">要获取值的名称</param>
            <returns>反射获取到的值</returns>
            日期：2015-10-10 9:07
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ReflectHelper.InvokeMethod(System.Object,System.String,System.Object[])">
            <summary>
            反射调用方法
            </summary>
            <param name="obj">需反射类型</param>
            <param name="methodName">调用方法名称</param>
            <param name="args">参数</param>
            <returns>方法返回值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ReflectHelper.SetFieldValue``1(``0,System.String,System.Object)">
            <summary>
            反射设置值
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="obj">操作对象</param>
            <param name="name">名称</param>
            <param name="value">值</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ReflectHelper.ToDictionary``1">
            <summary>
            获取实体类[DisplayName]以及本身Name
            </summary>
            <typeparam name="T">实体类</typeparam>
            <returns>IDictionary</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.RegexHelper">
            <summary>
            正则表达式帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.RegexHelper.IsMatch(System.String,System.String)">
            <summary>
            正则表达式匹配，匹配返回true
            </summary>
            <param name="input">输入的字符串</param>
            <param name="pattern">模式字符串</param>
            <returns>是否匹配</returns>
            日期：2015-10-10 9:10
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.RegexHelper.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            正则表达式匹配，匹配返回true
            </summary>
            <param name="input">输入的字符串</param>
            <param name="pattern">模式字符串</param>
            <param name="options">筛选条件</param>
            <returns>是否匹配</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.RegexHelper.IsMatch(System.String,System.String,System.Text.RegularExpressions.Match@)">
            <summary>
            正则表达式匹配，匹配返回true
            </summary>
            <param name="input">输入的字符串</param>
            <param name="pattern">模式字符串</param>
            <param name="result">若匹配成功，则返回Match</param>
            <returns>匹配是否成功</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.SectionHelper">
            <summary>
            配置文件 Section节点操作帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.SectionHelper.modulSettings">
            <summary>
            NameValueCollection对象
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SectionHelper.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="sectionName">section名称</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SectionHelper.ContainKey(System.String)">
            <summary>
            Section是否包含Key
            </summary>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SectionHelper.ContainSection">
            <summary>
            是否包含该Section
            </summary>
            <returns>是否包含</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SectionHelper.GetValue(System.String)">
            <summary>
            根据键获取值
            </summary>
            <param name="key">键</param>
            <returns>当不存在键的时候，返回string.Empty</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.SerializeHelper">
            <summary>
            序列化帮助类
            </summary>
            创建时间:2015-05-22 15:07
            备注说明:<c>null</c>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SerializeHelper.ParseBinaryFile``1(System.String)">
            <summary>
            将binay文件反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="path">The path.</param>
            <returns></returns>
            创建时间:2015-05-22 15:10
            备注说明:<c>null</c>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SerializeHelper.ParseBinaryFileToTable(System.String)">
            <summary>
            将Binary文件反序列化成datatable
            </summary>
            <param name="path">Binary文件路径</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SerializeHelper.ParseModel``1(``0)">
            <summary>
            将对象序列化成字符串
            </summary>
            <param name="model">object</param>
            <returns>string</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SerializeHelper.ParseXMLFile``1(System.String)">
            <summary>
            将XML文件反序列化成集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="path">The path.</param>
            <returns></returns>
            创建时间:2015-05-22 15:09
            备注说明:<c>null</c>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SerializeHelper.ParseXMLFile(System.String)">
            <summary>
            将xml文件转换string类型
            </summary>
            <param name="path">路径</param>
            <returns>string</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SerializeHelper.ToBinaryFile``1(System.Collections.Generic.List{``0},System.String)">
            <summary>
            将实体类集合序列化成Binary文件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">The data.</param>
            <param name="path">The save path.</param>
            创建时间:2015-05-22 15:14
            备注说明:<c>null</c>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SerializeHelper.ToBinaryFile(System.Data.DataTable,System.String)">
            <summary>
            将datatable序列化Binary文件
            </summary>
            <param name="datatable">The datatable.</param>
            <param name="path">The save path.</param>
            创建时间:2015-05-22 15:14
            备注说明:<c>null</c>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SerializeHelper.ToXMLFile``1(System.Collections.Generic.List{``0},System.String)">
            <summary>
            将集合序列化成xml
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">The data.</param>
            <param name="savePath">The save path.</param>
            创建时间:2015-05-22 15:08
            备注说明:<c>null</c>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SerializeHelper.ToXMLFile``1(``0,System.String)">
            <summary>
             将实体类序列化成xml
            </summary>
            <typeparam name="T"></typeparam>
            <param name="path">The save path.</param>
            <param name="model">The model.</param>
            创建时间:2015-05-22 15:12
            备注说明:<c>null</c>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.SerialPortHelper">
             <summary>
            串口帮助类
             </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Common.SerialPortHelper.BaudRates">
            <summary>
            波特率
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Common.SerialPortHelper.DataBits">
            <summary>
            数据位
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Common.SerialPortHelper.Paritys">
            <summary>
            效验_英文
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Common.SerialPortHelper.Paritys_CH">
            <summary>
            效验_中文
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Common.SerialPortHelper.PortNames">
            <summary>
            串口列表
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Common.SerialPortHelper.StopBits">
            <summary>
            停止位
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Common.SerialPortHelper.StopBits_CH">
            <summary>
            停止位_英文转移成数字
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SerialPortHelper.Close(System.IO.Ports.SerialPort,System.String)">
            <summary>
            关闭串口
            </summary>
            <param name="serialPort">串口组件</param>
            <param name="portName">需要关闭的串口名称</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.SerialPortHelper.Open(System.IO.Ports.SerialPort,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            打开串口
            </summary>
            <param name="serialPort">串口</param>
            <param name="portName">需要打开串口的名称</param>
            <param name="dateBits">数据位</param>
            <param name="bondRate">波特率</param>
            <param name="parity">效验</param>
            <param name="stopBit">停止位</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.StringHelper">
            <summary>
            string帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.AutoIncrementSeqNo(System.String)">
            <summary>
            自增流水号
            <para>eg:abcd2-->abcd3</para>
            </summary>
            <param name="data">The input.</param>
            <returns>自增流水号</returns>
            创建时间:2015-05-22 14:45
            备注说明:<c>null</c>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.BuilderDelimiter(System.String,System.Char)">
            <summary>
            对字符串遍历分割
            <para>eg: StringHelper.BuilderDelimiter("Yan", '-');==>"Y-a-n"</para>
            </summary>
            <param name="data">需要分割的字符串</param>
            <param name="delimiter">每个字符分割符号</param>
            <returns>分割好的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.ClearBlanks(System.String)">
            <summary>
            清除字符串内空格
            <para>eg:StringHelper.ClearBlanks(" 11 22 33 44  ");==>11223344</para>
            </summary>
            <param name="data">需要处理的字符串</param>
            <returns>处理好后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.ComplementLeftZero(System.String,System.Int32)">
            <summary>
            补足位数_左边
            <para>eg:StringHelper.ComplementLeftZero("Yanzhiwei", 15);==>"000000Yanzhiwei"</para>
            </summary>
            <param name="data">需要操作的字符串</param>
            <param name="targetLength">目标长度</param>
            <returns>操作完成后字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.ComplementRigthZero(System.String,System.Int32)">
            <summary>
            补足位数_右边
            <para>eg:StringHelper.ComplementRigthZero("Yanzhiwei", 15);==>Yanzhiwei000000</para>
            </summary>
            <param name="data">需要操作的字符串</param>
            <param name="targetLength">目标长度</param>
            <returns>操作完成后字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.FormatWith(System.String,System.Object[])">
            <summary>
            为指定格式的字符串填充相应对象来生成字符串
            </summary>
            <param name="format">字符串格式，占位符以{n}表示</param>
            <param name="args">用于填充占位符的参数</param>
            <returns>格式化后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.GetFriendly(System.String,System.Int32)">
            <summary>
            截取字符串,超过最大长度则以'...'表示
            </summary>
            <param name="data">需要截取的字符串</param>
            <param name="maxLen">字符串最大长度，超过最大长度则以'...'表示</param>
            <returns>截取后字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.InsertCharAtDividedPosition(System.String,System.Int32,System.String)">
            <summary>
            整除索引处加入符号
            </summary>
            <param name="data">字符串</param>
            <param name="count">除数</param>
            <param name="character">符号</param>
            <returns>处理后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.IsNullOrEmpty(System.String)">
            <summary>
            Determines whether [is null or empty].
            </summary>
            <param name="data">The data.</param>
            <returns>是否为NULL或者empty</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.IsNullOrWhiteSpace(System.String)">
            <summary>
            判断空引用和字符串中的每一个字符是否是空格
            </summary>
            <param name="data">The value.</param>
            <returns>否是空格</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.LowerFirstChar(System.String)">
            <summary>
            将字符串第一位置为小写
            </summary>
            <param name="data">需要操作的字符串</param>
            <returns>操作后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.ParseThousandthString(System.String)">
            <summary>
            将千分位字符串转换成数字
            <para>eg:StringHelper.ParseThousandthString("111,222,333");==>111222333</para>
            </summary>
            <param name="data">需要转换的千分位</param>
            <returns>数字;若转换失败则返回-1</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.Reverse(System.String)">
            <summary>
            字符串逆转
            <para>eg:StringHelper.Reverse("YanZhiwei");</para>
            </summary>
            <param name="data">需要逆转的字符串</param>
            <returns>逆转后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.ReverseUsingArrayClass(System.String)">
            <summary>
            利用Array.Reverse反转字符串
            </summary>
            <param name="data">操作字符串</param>
            <returns>反转字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.ReverseUsingCharacterBuffer(System.String)">
            <summary>
            利用遍历反转字符串
            </summary>
            <param name="data">操作字符串</param>
            <returns>反转字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.ReverseUsingStack(System.String)">
            <summary>
            利用Stack反转字符串
            </summary>
            <param name="data">操作字符串</param>
            <returns>反转字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.ReverseUsingStringBuilder(System.String)">
            <summary>
            利用StringBuilder反转字符串
            </summary>
            <param name="data">操作字符串</param>
            <returns>反转字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.ReverseUsingXOR(System.String)">
            <summary>
            利用XOR反转字符串
            </summary>
            <param name="data">操作字符串</param>
            <returns>反转字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.SubString(System.String,System.Char)">
            <summary>
            按照符号截取字符串
            </summary>
            <param name="data">The data.</param>
            <param name="delimiter">The delimiter.</param>
            <returns>截取后的字符串</returns>
            日期：2015-09-18 11:40
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.SubStringFromLast(System.String,System.Char)">
            <summary>
            按照最后符号截取字符串
            </summary>
            <param name="data">The data.</param>
            <param name="delimiter">The delimiter.</param>
            <returns>截取后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.ToMD5String(System.String)">
            <summary>
            获取MD5加密字符串
            <para>eg:StringHelper.ToMD5("YanZhiwei");==>"b07ec574a666d8e7582885ce334b4d00"</para>
            </summary>
            <param name="data">需要加密的字符串</param>
            <returns>MD5加密的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.Unique">
            <summary>
             获取全局唯一值
            </summary>
            <returns>全局唯一值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.UpperFirstChar(System.String)">
            <summary>
            将字符串第一位置为大写
            <para>eg:studentName==>StudentName</para>
            </summary>
            <param name="data">需要操作的字符串</param>
            <returns>操作后的字符串</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.StringHelper.WrapText(System.String,System.Int32)">
            <summary>
            文字换行
            <para>eg:StringHelper.WrapText("YanZhiwei", 3);==>"Yan\r\nZhi\r\nwei"</para>
            </summary>
            <param name="data">需要换行的文字</param>
            <param name="maxWidth">多少长度换行</param>
            <returns>换行好的文字</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper">
            <summary>
            参数验证帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.Begin">
            <summary>
            验证初始化
            </summary>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.Check(YanZhiwei.DotNet2.Utilities.Models.Validation,System.Func{System.Boolean},System.String,System.String)">
            <summary>
            需要验证的正则表达式
            </summary>
            <param name="validation">Validation</param>
            <param name="checkFactory">委托</param>
            <param name="pattern">正则表达式</param>
            <param name="argumentName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.CheckDirectoryExists(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.String)">
            <summary>
            检查指定路径的文件夹必须存在，否则抛出<see cref="T:System.IO.DirectoryNotFoundException"/>异常。
            </summary>
            <param name="validation">Validation</param>
            <param name="data">判断数据</param>
            <param name="paramName">参数名称。</param>
            <exception cref="T:System.ArgumentNullException">ArgumentNullException</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">DirectoryNotFoundException</exception>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.CheckFileExists(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.String)">
            <summary>
            检查指定路径的文件必须存在，否则抛出<see cref="T:System.IO.FileNotFoundException"/>异常。
            </summary>
            <param name="validation">Validation</param>
            <param name="data">参数</param>
            <param name="paramName">参数名称。</param>
            <exception cref="T:System.ArgumentNullException">当文件路径为null时</exception>
            <exception cref="T:System.IO.FileNotFoundException">当文件路径不存在时</exception>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.CheckGreaterThan``1(YanZhiwei.DotNet2.Utilities.Models.Validation,``0,System.String,``0,System.Boolean)">
            <summary>
            检查参数必须大于[或可等于，参数canEqual]指定值，否则抛出<see cref="T:System.ArgumentOutOfRangeException"/>异常。
            </summary>
            <typeparam name="T">参数类型。</typeparam>
            <param name="validation">Validation</param>
            <param name="value">判断数据</param>
            <param name="paramName">参数名称。</param>
            <param name="target">要比较的值。</param>
            <param name="canEqual">是否可等于。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">ArgumentOutOfRangeException</exception>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.CheckLessThan``1(YanZhiwei.DotNet2.Utilities.Models.Validation,``0,System.String,``0,System.Boolean)">
            <summary>
            检查参数必须小于[或可等于，参数canEqual]指定值，否则抛出<see cref="T:System.ArgumentOutOfRangeException"/>异常。
            </summary>
            <typeparam name="T">参数类型。</typeparam>
            <param name="validation">Validation</param>
            <param name="value">判断数据</param>
            <param name="paramName">参数名称。</param>
            <param name="target">要比较的值。</param>
            <param name="canEqual">是否可等于。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">ArgumentOutOfRangeException</exception>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.InRange(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            验证是否在范围内
            </summary>
            <param name="validation">Validation</param>
            <param name="data">输入项</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="argumentName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.IsChinses(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.String)">
            <summary>
            是否是中文
            </summary>
            <param name="validation">Validation</param>
            <param name="data">中文</param>
            <param name="argumentName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.IsEmail(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.String)">
            <summary>
            是否是电子邮箱
            </summary>
            <param name="validation">Validation</param>
            <param name="email">需要验证的邮箱</param>
            <param name="argumentName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.IsFilePath(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.String)">
            <summary>
            是否是文件路径
            </summary>
            <param name="validation">Validation</param>
            <param name="data">路径</param>
            <param name="argumentName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.IsHexString(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.String)">
            <summary>
            是否是十六进制字符串
            </summary>
            <param name="validation">Validation</param>
            <param name="data">验证数据</param>
            <param name="argumentName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.IsIdCard(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.String)">
            <summary>
            是否是身份证号码
            </summary>
            <param name="validation">Validation</param>
            <param name="data">验证数据</param>
            <param name="argumentName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.IsInt(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.String)">
            <summary>
            是否是整数
            </summary>
            <param name="validation">Validation</param>
            <param name="data">需要检测的字符串</param>
            <param name="argumentName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.IsIp(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.String)">
            <summary>
            是否是IP
            </summary>
            <param name="validation">Validation</param>
            <param name="data">需要检测到IP</param>
            <param name="argumentName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.IsNumber(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.String)">
            <summary>
            是否是数字
            </summary>
            <param name="validation">Validation</param>
            <param name="data">需要检测的字符串</param>
            <param name="argumentName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.IsPort(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.String)">
            <summary>
            是否是合法端口
            </summary>
            <param name="validation">Validation</param>
            <param name="data">参数值</param>
            <param name="paramName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.IsPoseCode(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.String)">
            <summary>
            是否是邮政编码
            </summary>
            <param name="validation">Validation</param>
            <param name="data">邮政编码</param>
            <param name="argumentName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.IsRequireLen(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.Int32,System.String)">
            <summary>
            判断字符串是否是要求的长度
            </summary>
            <param name="validation">Validation</param>
            <param name="input">验证的字符串</param>
            <param name="requireLength">要求的长度</param>
            <param name="argumentName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.IsSerializable(YanZhiwei.DotNet2.Utilities.Models.Validation,System.Object)">
            <summary>
            判断类型是否能序列化
            </summary>
            <param name="validation">Validation</param>
            <param name="data">输入项</param>
            <returns>Validation</returns>
            时间：2016-01-14 9:57
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.IsURL(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.String)">
            <summary>
            是否是URL
            </summary>
            <param name="validation">Validation</param>
            <param name="data">url</param>
            <param name="argumentName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.NotEqual(YanZhiwei.DotNet2.Utilities.Models.Validation,System.Object,System.Object,System.String)">
            <summary>
            验证参数不能等于某个值
            </summary>
            <param name="validation">Validation</param>
            <param name="data">输入项</param>
            <param name="equalObj">比较项</param>
            <param name="paramName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.NotNull(YanZhiwei.DotNet2.Utilities.Models.Validation,System.Object,System.String)">
            <summary>
            验证非空
            </summary>
            <param name="validation">Validation</param>
            <param name="data">输入项</param>
            <param name="paramName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.NotNullOrEmpty(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.String)">
            <summary>
            不能为空或者NULL验证
            </summary>
            <param name="validation">Validation</param>
            <param name="input">输入项</param>
            <param name="paramName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.RegexMatch(YanZhiwei.DotNet2.Utilities.Models.Validation,System.String,System.String,System.String)">
            <summary>
            需要验证的正则表达式
            </summary>
            <param name="validation">Validation</param>
            <param name="input">需要匹配的输入项</param>
            <param name="pattern">正则表达式</param>
            <param name="argumentName">参数名称</param>
            <returns>Validation</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.ValidateHelper.Check``1(YanZhiwei.DotNet2.Utilities.Models.Validation,System.Func{System.Boolean},System.String)">
            <summary>
            Checks the specified filter method.
            </summary>
            <typeparam name="TException">The type of the exception.</typeparam>
            <param name="validation">The validation.</param>
            <param name="filterMethod">The filter method.</param>
            <param name="message">The message.</param>
            <returns>Validation</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Common.XMLHelper">
            <summary>
            XML操作帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.xmldoc">
            <summary>
            XmlDocument 对象
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.xmlPath">
            <summary>
            xml 路径
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.#ctor(System.String,System.Text.Encoding,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="version">版本</param>
            <param name="encoding">编码</param>
            <param name="path">路径</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.#ctor(System.String,System.Text.Encoding,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="version">版本</param>
            <param name="encoding">Encoding</param>
            <param name="path">XML保存路径</param>
            <param name="documentElementName">XML根元素</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.CreateChildElement(System.Xml.XmlElement,System.String)">
            <summary>
            创建一个子元素
            </summary>
            <param name="parentElement">父元素</param>
            <param name="elementName">子元素名称</param>
            <returns>XmlElement</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.CreateChildElement(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            创建一个子元素
            </summary>
            <param name="parentElement">父元素</param>
            <param name="elementName">子元素名称</param>
            <param name="innerText">文本内容</param>
            <returns>XmlElement</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.CreateChildElement(System.Xml.XmlElement,System.String,System.String,System.Action{System.Xml.XmlElement},System.Action{System.Xml.XmlElement})">
            <summary>
            创建一个子元素
            </summary>
            <param name="parentElement">父元素</param>
            <param name="elementName">子元素名称</param>
            <param name="xpath">xpath语法</param>
            <param name="setAttributeHanlder">设置委托</param>
            <param name="updateAttributeHanlder">修改委托</param>
            <returns>XmlElement</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.CreateDocumentElement(System.String)">
            <summary>
            创建XML 文档树的根
            </summary>
            <param name="elementName">元素名称</param>
            <returns>XmlElement</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.CreateDocumentElement(System.String,System.String)">
            <summary>
            创建XML文档树的根
            </summary>
            <param name="elementName">元素名称</param>
            <param name="xpath">xpath语法</param>
            <returns>XmlElement</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.CreateParentElement(System.Xml.XmlElement,System.String,System.String,System.Action{System.Xml.XmlElement},System.Action{System.Xml.XmlElement})">
            <summary>
            创建父元素
            </summary>
            <param name="xmlDocument">XML文档根</param>
            <param name="elementName">父元素名称</param>
            <param name="xpath">xpath语法</param>
            <param name="setAttributeHanlder">委托，当创建XmlElement时候触发。设置NULL的时候不启作用</param>
            <param name="updateAttributeHanlder">委托，根据Xpath找到XmlElement时候触发。设置NULL的时候不启作用</param>
            <returns>XmlElement</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.Save">
            <summary>
            保存XML
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.SelectNodes(System.String)">
            <summary>
            节点筛选
            </summary>
            <param name="xpath">xpath语法</param>
            <returns>XmlNodeList</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.SelectSingleNode(System.String,System.Action{System.Xml.XmlElement})">
            <summary>
            节点筛选
            </summary>
            <param name="xpath">xpath语法</param>
            <param name="updateNodeHanlder">委托</param>
            <returns>若找到节点，则返回True，否则返回False;</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.SelectSingleNode(System.String)">
            <summary>
            节点筛选
            </summary>
            <param name="xpath">xpath语法</param>
            <returns>若找到节点，则返回True，否则返回False;</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.ShowXml">
            <summary>
            将xml内容转换字符串输出
            </summary>
            <returns>字符串XML内容</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Common.XMLHelper.ToDataSet">
            <summary>
            将XML文件读取返回成DataSet
            </summary>
            <returns>返回DataSet，若发生异常则返回NULL</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.AjaxResult">
            <summary>
            表示Ajax操作结果
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.AjaxResult.#ctor(System.String,YanZhiwei.DotNet2.Utilities.Enums.AjaxResultType,System.Object)">
            <summary>
            初始化一个<see cref="T:YanZhiwei.DotNet2.Utilities.Core.AjaxResult"/>类型的新实例
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.AjaxResult.#ctor(System.String)">
            <summary>
            初始化一个<see cref="T:YanZhiwei.DotNet2.Utilities.Core.AjaxResult"/>类型的新实例
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.AjaxResult.#ctor(System.String,System.Object,YanZhiwei.DotNet2.Utilities.Enums.AjaxResultType)">
            <summary>
            初始化一个<see cref="T:YanZhiwei.DotNet2.Utilities.Core.AjaxResult"/>类型的新实例
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.AjaxResult.Content">
            <summary>
            获取 消息内容
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.AjaxResult.Data">
            <summary>
            获取 返回数据
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.AjaxResult.Type">
            <summary>
            获取 Ajax操作结果类型
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.BuilderKey">
            <summary>
            用于构建缓存的类
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.BusinessException">
            <summary>
            业务异常，用于在后端抛出到前端做相应处理
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BusinessException.#ctor">
            <summary>
            构造函数
            </summary>
            时间：2016-01-06 16:18
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BusinessException.#ctor(System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="message">错误消息</param>
            <param name="inner">内部异常</param>
            时间：2016-02-24 16:35
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BusinessException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">错误消息</param>
            时间：2016-01-06 16:18
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BusinessException.#ctor(System.String,System.String)">
            <summary>
            构造消息
            </summary>
            <param name="name">错误名称</param>
            <param name="message">错误消息</param>
            时间：2016-01-06 16:21
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BusinessException.#ctor(System.String,System.Enum)">
            <summary>
            构造函数
            </summary>
            <param name="message">错误消息</param>
            <param name="errorCode">枚举</param>
            时间：2016-01-06 16:21
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BusinessException.#ctor(System.String,System.String,System.Enum)">
            <summary>
            构造函数
            </summary>
            <param name="name">错误名称</param>
            <param name="message">错误消息</param>
            <param name="errorCode">枚举</param>
            时间：2016-01-06 16:22
            备注：
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.BusinessException.ErrorCode">
            <summary>
            错误代码枚举
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.BusinessException.Name">
            <summary>
            错误名称
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.BusinessFactory`1">
            <summary>
            业务工厂
            </summary>
            <typeparam name="T">泛型</typeparam>
            时间：2016-01-07 13:43
            备注：
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.BusinessFactory`1.Instance">
            <summary>
            实例化
            </summary>
            时间：2016-01-07 13:45
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.ConfigSettings">
            <summary>
            获取默认的连接字符串
            </summary>
            时间：2015-12-25 17:21
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ConfigSettings.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.ConfigSettings.ConnectionString">
            <summary>
            默认的连接字符串,name='default'
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.Disposable">
            <summary>
            用于实现<see cref="T:System.IDisposable"/>接口，表示当前类型是可释放的
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Disposable.Finalize">
            <summary>
            释放当前对象时释放资源
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Disposable.Dispose">
            <summary>
            释放对象，用于外部调用
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Disposable.Dispose(System.Boolean)">
            <summary>
            重写以实现释放对象的逻辑
            </summary>
            <param name="disposing">是否要释放对象</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.DynamicBuilder">
            <summary>
            动态创建实体类
            </summary>
            时间：2016-02-15 15:17
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.DynamicBuilder.CreateBuilder(System.Data.IDataRecord,System.Type,YanZhiwei.DotNet2.Utilities.Enums.DBTypeName)">
            <summary>
            emit绑定IDataRecord到实体类集合
            </summary>
            <param name="dataRecord">IDataRecord</param>
            <param name="destinationType">实体类类型</param>
            <param name="dbType">数据库类型(为兼容不同数据库，待完善)</param>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.DynamicBuilder.ReadBoolean(System.Object)">
            <summary>
            oracle对应bool类型转换
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.FrameworkException">
            <summary>
            YanZhiwei.DotNet框架异常，用于在后端抛出到前端做相应处理
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.FrameworkException.#ctor">
            <summary>
            构造函数
            </summary>
            时间：2016-01-06 16:18
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.FrameworkException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">错误消息</param>
            时间：2016-01-06 16:18
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.FrameworkException.#ctor(System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="message">错误消息</param>
            <param name="inner">内部异常</param>
            时间：2016-02-24 16:35
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.FrameworkException.#ctor(System.String,System.String)">
            <summary>
            构造消息
            </summary>
            <param name="name">错误名称</param>
            <param name="message">错误消息</param>
            时间：2016-01-06 16:21
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.FrameworkException.#ctor(System.String,System.Enum)">
            <summary>
            构造函数
            </summary>
            <param name="message">错误消息</param>
            <param name="errorCode">枚举</param>
            时间：2016-01-06 16:21
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.FrameworkException.#ctor(System.String,System.String,System.Enum)">
            <summary>
            构造函数
            </summary>
            <param name="name">错误名称</param>
            <param name="message">错误消息</param>
            <param name="errorCode">枚举</param>
            时间：2016-01-06 16:22
            备注：
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.FrameworkException.ErrorCode">
            <summary>
            错误代码枚举
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.FrameworkException.Name">
            <summary>
            错误名称
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.Logger">
            <summary>
            日志类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.Logger.logspace">
            <summary>
            The log_space
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.Logger.logtextformat">
            <summary>
            The logtextformat
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.Logger.tracesql">
            <summary>
            用于Trace的组织输出的类别名称
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.Logger.Flag">
            <summary>
            1   仅控制台输出
            2   仅日志输出
            3   控制台+日志输出
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.Logger.LogRootDirectory">
            <summary>
            日志根目录
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.Logger.logCurFileDate">
            <summary>
            当前日志的日期
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.Logger.logFolder">
            <summary>
            日志子目录
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.Logger.traceListener">
            <summary>
            日志对象
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Logger.#cctor">
            <summary>
            Initializes the <see cref="T:YanZhiwei.DotNet2.Utilities.Core.Logger"/> class.
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.Logger.AsyncLogException">
            <summary>
            异常类型日志委托
            </summary>
            <param name="message">The message.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.Logger.AsyncLogMessage">
            <summary>
            日志委托
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.Logger.AsyncLogSql">
            <summary>
            sql类型日志委托
            </summary>
            <param name="sql">The SQL.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.Logger.AsyncLogSqlCommand">
            <summary>
            sql类型日志委托
            </summary>
            <param name="cmd">The command.</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.Logger.AsyncLogSqlMessage">
            <summary>
            sql类型日志委托
            </summary>
            <param name="message">The message.</param>
            <param name="sql">The SQL.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.Logger.Logfullpath">
            <summary>
            日志文件路径
            </summary>
            <returns></returns>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.Logger.TWTL">
            <summary>
            跟踪输出日志文件
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Logger.Write(System.String,System.Exception)">
            <summary>
            日志记录
            </summary>
            <param name="message">The message.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Logger.Write(System.String)">
            <summary>
            日志记录
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Logger.Write(System.Data.SqlClient.SqlCommand)">
            <summary>
            异步SQL日志
            </summary>
            <param name="cmd">The command.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Logger.Write(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            SQL日志
            </summary>
            <param name="message">The message.</param>
            <param name="sql">The SQL.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Logger.Write(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            SQL日志
            </summary>
            <param name="sql">The SQL.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Logger.BeginTrace(System.String)">
            <summary>
            Begins the trace.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Logger.BeginTraceError(System.String,System.Exception)">
            <summary>
            Begins the trace error.
            </summary>
            <param name="message">The message.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Logger.BeginTraceSql(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Begins the trace SQL.
            </summary>
            <param name="sql">The SQL.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Logger.BeginTraceSql(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Begins the trace SQL.
            </summary>
            <param name="message">The message.</param>
            <param name="sql">The SQL.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Logger.BeginTraceSqlCommand(System.Data.SqlClient.SqlCommand)">
            <summary>
            Begins the trace SQL command.
            </summary>
            <param name="cmd">The command.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Logger.CheckedLogPolicy">
            <summary>
            检查日志策略；根据时间生成日志策略
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Logger.CreateLogFolder(System.DateTime)">
            <summary>
            创建日志存储文件夹
            </summary>
            <param name="date">时间</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.OperationResult">
            <summary>
            业务操作结果信息类，对操作结果进行封装
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.OperationResult.#ctor(YanZhiwei.DotNet2.Utilities.Enums.OperationResultType)">
            <summary>
            初始化一个<see cref="T:YanZhiwei.DotNet2.Utilities.Core.OperationResult"/>类型的新实例
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.OperationResult.#ctor(YanZhiwei.DotNet2.Utilities.Enums.OperationResultType,System.String)">
            <summary>
            初始化一个<see cref="T:YanZhiwei.DotNet2.Utilities.Core.OperationResult"/>类型的新实例
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.OperationResult.#ctor(YanZhiwei.DotNet2.Utilities.Enums.OperationResultType,System.String,System.Object)">
            <summary>
            初始化一个<see cref="T:YanZhiwei.DotNet2.Utilities.Core.OperationResult"/>类型的新实例
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.OperationResult.Data">
            <summary>
            获取或设置 操作返回数据
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.OperationResult.Message">
            <summary>
            获取或设置 操作返回信息
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.OperationResult.ResultType">
            <summary>
            获取或设置 操作结果类型
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.PagedList`1">
            <summary>
            分页数据集合，用于后端返回分页好的集合及前端视图分页控件绑定
            </summary>
            <typeparam name="T">泛型</typeparam>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.PagedList`1.#ctor(System.Collections.Generic.IList{`0},System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="items">集合</param>
            <param name="pageIndex">当前页索引</param>
            <param name="pageSize">页总数</param>
            时间：2016-01-05 11:03
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.PagedList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="items">集合</param>
            <param name="pageIndex">当前页索引</param>
            <param name="pageSize">页总数</param>
            <param name="totalItemCount">记录条数</param>
            时间：2016-01-05 11:04
            备注：
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.PagedList`1.CurrentPageIndex">
            <summary>
            当前页索引
            </summary>
            时间：2016-01-05 11:05
            备注：
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.PagedList`1.EndRecordIndex">
            <summary>
            记录结束索引
            </summary>
            时间：2016-01-05 11:06
            备注：
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.PagedList`1.ExtraCount">
            <summary>
            Gets or sets the extra count.
            </summary>
            时间：2016-01-05 11:06
            备注：
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.PagedList`1.PageSize">
            <summary>
            分页大小
            </summary>
            时间：2016-01-05 11:05
            备注：
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.PagedList`1.StartRecordIndex">
            <summary>
            数据开始索引
            </summary>
            时间：2016-01-05 11:05
            备注：
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.PagedList`1.TotalItemCount">
            <summary>
            记录总数
            </summary>
            时间：2016-01-05 11:05
            备注：
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.PagedList`1.TotalPageCount">
            <summary>
            页总数
            </summary>
            时间：2016-01-05 11:05
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.PerformanceTest">
            <summary>
            程序性能测试类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.PerformanceTest.beginTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.PerformanceTest.endTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.PerformanceTest.performance">
            <summary>
            测试参数
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.PerformanceTest.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.PerformanceTest.Execute(System.Action{System.Int32},System.Action{System.String})">
            <summary>
            执行函数
            </summary>
            <param name="testFactory">测试委托</param>
            <param name="resultFactory">结果委托</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.PerformanceTest.SetCount(System.Int32)">
             <summary>
            设置执行次数(默认:1)
             </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.PerformanceTest.SetIsMultithread(System.Boolean)">
            <summary>
            设置线程模式(默认:false)
            </summary>
            <param name="isMul">true为多线程</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.PerformanceTest.GetResult">
            <summary>
            获取测试结果
            </summary>
            <returns>测试结果</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.ProjectTraceListener">
            <summary>
            TraceListener实现
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ProjectTraceListener.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath">日志路径</param>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.ProjectTraceListener.FilePath">
            <summary>
            日志路径
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ProjectTraceListener.Write(System.String)">
            <summary>
            在派生类中被重写时，向在该派生类中所创建的侦听器写入指定消息。
            </summary>
            <param name="message">要写入的消息。</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ProjectTraceListener.Write(System.Object,System.String)">
            <summary>
            Writes the specified object.
            </summary>
            <param name="obj">The object.</param>
            <param name="category">The category.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ProjectTraceListener.WriteLine(System.String)">
            <summary>
            在派生类中被重写时，向在该派生类中所创建的侦听器写入消息，后跟行结束符。
            </summary>
            <param name="message">要写入的消息。</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2">
            <summary>
            支持 XML 序列化的 Dictionary
            </summary>
            <typeparam name="TKey">键</typeparam>
            <typeparam name="TValue">值</typeparam>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2"/> class.
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2"/> class.
            </summary>
            <param name="dictionary">The dictionary.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2"/> class.
            </summary>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2.GetSchema">
            <summary>
            此方法是保留方法，请不要使用。在实现 IXmlSerializable 接口时，应从此方法返回 null（在 Visual Basic 中为 Nothing），如果需要指定自定义架构，应向该类应用 <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />。
            </summary>
            <returns>
              <see cref="T:System.Xml.Schema.XmlSchema" />，描述由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 方法产生并由 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> 方法使用的对象的 XML 表示形式。
            </returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2.ReadXml(System.Xml.XmlReader)">
            <summary>
            从对象的 XML 表示形式生成该对象。
            </summary>
            <param name="reader">对象从中进行反序列化的 <see cref="T:System.Xml.XmlReader" /> 流。</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SerializableDictionary`2.WriteXml(System.Xml.XmlWriter)">
            <summary>
            将对象转换为其 XML 表示形式。
            </summary>
            <param name="writer">对象要序列化为的 <see cref="T:System.Xml.XmlWriter" /> 流。</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.Singleton`1">
            <summary>
            Singleton泛型类
            </summary>
            <typeparam name="T">带默认构造函数的泛型</typeparam>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Singleton`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Singleton`1.GetInstance">
            <summary>
            获取实例
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.Singleton`1.SetInstance(`0)">
            <summary>
            设置实例
            </summary>
            <param name="value">泛型实例</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.Singleton">
            <summary>
            提供一个字典容器，按类型装载所有<see cref="T:YanZhiwei.DotNet2.Utilities.Core.Singleton`1"/>的单例实例
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.Singleton.AllSingletons">
            <summary>
            获取 单例对象字典
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.SingletonDictionary`2">
            <summary>
            创建一个单例字典，该实例的生命周期将跟随整个应用程序
            </summary>
            <typeparam name="TKey">字典键类型</typeparam>
            <typeparam name="TValue">字典值类型</typeparam>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.SingletonDictionary`2.Instance">
            <summary>
            获取指定类型的字典的单例实例
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.SingletonList`1">
            <summary>
            创建一个类型列表的单例，该实例的生命周期将跟随整个应用程序
            </summary>
            <typeparam name="T">要创建的列表元素的类型</typeparam>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.SingletonList`1.Instance">
            <summary>
            获取指定类型的列表的单例实例
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.SingletonType`1">
            <summary>
            定义一个指定类型的单例，该实例的生命周期将跟随整个应用程序。
            </summary>
            <typeparam name="T">要创建单例的类型。</typeparam>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.SingletonType`1.Instance">
            <summary>
            获取指定类型的单例实例
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.SqlServerDbBackUp">
            <summary>
            SqlServer 数据库备份和还原功能
            </summary>
            时间：2016-02-24 14:20
            备注：
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SqlServerDbBackUp.BackUpDataBase">
            <summary>
            需要备份的数据库
            </summary>
            时间：2016-02-24 17:37
            备注：
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SqlServerDbBackUp.ConnectString">
            <summary>
            连接字符串
            </summary>
            时间：2016-02-24 17:37
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerDbBackUp.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="connectString">连接字符串</param>
            <param name="backUpDataBase">需要备份的数据库</param>
            时间：2016-02-24 17:46
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerDbBackUp.DataBackup(System.String)">
            <summary>
            备份数据库
            </summary>
            <param name="filePath">备份路径，需带后缀;eg:D:\ddd.bakRM_DB20160224151425.bak</param>
            <returns>备份数据库是否成功</returns>
            时间：2016-02-24 16:44
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerDbBackUp.DataRestore(System.String,System.String)">
            <summary>
            还原数据库文件
            </summary>
            <param name="filePath">还原备份路径</param>
            <param name="restoreDbName">还原后数据库名称</param>
            <returns>还原是否成功</returns>
            时间：2016-02-24 17:45
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerDbBackUp.CreateBackupDevice(YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper,System.String)">
            <summary>
            创建数据库的备份逻辑设备
            </summary>
            <param name="sqlHelper">SqlServerHelper</param>
            <param name="filePath">备份路径</param>
            时间：2016-02-24 16:05
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerDbBackUp.DropBackupDevice(YanZhiwei.DotNet2.Utilities.Common.SqlServerHelper)">
            <summary>
            删除已有的备份设备
            </summary>
            <param name="sqlHelper">SqlServerHelper</param>
            时间：2016-02-24 16:00
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.SqlServerScriptBuilder">
            <summary>
            Sql Server 脚本创建
            </summary>
            时间：2016-01-07 10:12
            备注：
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SqlServerScriptBuilder.PrimaryKey">
            <summary>
            主键
            </summary>
            时间：2016-01-07 10:14
            备注：
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SqlServerScriptBuilder.TableName">
            <summary>
            表名
            </summary>
            时间：2016-01-07 10:14
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerScriptBuilder.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="tableName">表名</param>
            <param name="primaryKey">主键</param>
            时间：2016-01-07 10:15
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerScriptBuilder.Delete">
            <summary>
            删除语句
            </summary>
            <returns>sql脚本</returns>
            时间：2016-01-07 11:36
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerScriptBuilder.Delete(System.Collections.Hashtable)">
            <summary>
            删除语句
            </summary>
            <param name="sqlWhere">条件键值</param>
            <returns>sql脚本</returns>
            时间：2016-01-07 11:41
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerScriptBuilder.Insert(System.Collections.Hashtable)">
            <summary>
            插入语句
            </summary>
            <param name="insertFields">插入键值</param>
            <returns>sql脚本</returns>
            时间：2016-01-07 11:21
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerScriptBuilder.Select(System.String)">
            <summary>
            查询
            </summary>
            <param name="columns">需要查询的列『eg: name,age,address』</param>
            <returns>sql脚本</returns>
            时间：2016-01-07 10:30
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerScriptBuilder.SelectAllColumns">
            <summary>
            查询所有列
            </summary>
            <returns>sql脚本</returns>
            时间：2016-01-07 10:23
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerScriptBuilder.SelectAllColumns(System.Collections.Hashtable)">
            <summary>
            查询所有列
            </summary>
            <param name="sqlWhere">查询键值</param>
            <returns></returns>
            时间：2016-01-07 11:11
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerScriptBuilder.SelectWhere(System.String,System.Collections.Hashtable)">
            <summary>
            带条件查询
            </summary>
            <param name="columns">需要显示列</param>
            <param name="sqlWhere">条件键值</param>
            <returns>sql脚本</returns>
            时间：2016-01-07 10:33
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerScriptBuilder.Update(System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            更新语句
            </summary>
            <param name="updateFields">更新键值</param>
            <param name="sqlWhere">条件键值</param>
            <returns>sql脚本</returns>
            时间：2016-01-07 11:28
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.SqlServerTransaction">
            <summary>
            Sql Server事务对象
            </summary>
            时间：2015-11-24 9:22
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerTransaction.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="connectionString">链接字符串</param>
            时间：2015-11-24 9:21
            备注：
            <exception cref="T:System.ArgumentNullException">未能正确开启事物，因为链接字符串为空！</exception>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.SqlServerTransaction.TransactionObj">
            <summary>
            事务对象
            </summary>
            时间：2015-11-24 9:09
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerTransaction.CommitTransaction">
            <summary>
            提交事务
            </summary>
            时间：2015-11-24 9:10
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerTransaction.Dispose">
            <summary>
            执行与释放或重置非托管资源相关的应用程序定义的任务。
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerTransaction.RollbackTransaction">
            <summary>
            回滚事务
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.SqlServerPageScript">
            <summary>
            Sql Server数据库分页脚本
            </summary>
            创建时间:2015-05-22 11:48
            备注说明:<c>null</c>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerPageScript.CreateSqlByRowNumber(System.String,System.String,System.String,System.String,YanZhiwei.DotNet2.Utilities.Enums.OrderBy,System.Int32,System.Int32)">
            <summary>
            利用[ROW_NUMBER() over]分页，生成sql语句
            </summary>
            <param name="tableName">表名称『eg:Orders』</param>
            <param name="columns">需要显示列『*:所有列；或者：eg:OrderID,OrderDate,ShipName,ShipCountry』</param>
            <param name="orderColumn">依据排序的列『eg:OrderID』</param>
            <param name="sqlWhere">筛选条件『eg:Order=1』</param>
            <param name="orderType">升序降序『1：desc;其他:asc』</param>
            <param name="pSize">每页页数『需大于零』</param>
            <param name="pIndex">页数『从壹开始算』</param>
            <returns>生成分页sql脚本</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerPageScript.CreateSqlByTopMax(System.String,System.String,System.String,System.String,YanZhiwei.DotNet2.Utilities.Enums.OrderBy,System.Int32,System.Int32)">
            <summary>
            利用[Top Max]分页，生成sql语句
            </summary>
            <param name="tableName">表名称『eg:Orders』</param>
            <param name="columns">需要显示列『*:所有列；或者：eg:OrderID,OrderDate,ShipName,ShipCountry』</param>
            <param name="orderColumn">依据排序的列『eg:OrderID』</param>
            <param name="sqlWhere">筛选条件『eg:Order=1』</param>
            <param name="orderType">升序降序『1：desc;其他:asc』</param>
            <param name="pSize">每页页数『需大于零』</param>
            <param name="pIndex">页数『从壹开始算』</param>
            <returns>生成分页sql脚本</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerPageScript.CreateSqlByTopNotIn(System.String,System.String,System.String,System.String,YanZhiwei.DotNet2.Utilities.Enums.OrderBy,System.Int32,System.Int32)">
            <summary>
            利用[Top NotIn]分页，生成sql语句
            </summary>
            <param name="tableName">表名称『eg:Orders』</param>
            <param name="columns">需要显示列『*:所有列；或者：eg:OrderID,OrderDate,ShipName,ShipCountry』</param>
            <param name="orderColumn">依据排序的列『eg:OrderID』</param>
            <param name="sqlWhere">筛选条件『eg:Order=1』</param>
            <param name="orderType">升序降序『1：desc;其他:asc』</param>
            <param name="pSize">每页页数『需大于零』</param>
            <param name="pIndex">页数『从壹开始算』</param>
            <returns>生成分页sql脚本</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerPageScript.CreateQueryTotalSql(System.String,System.String)">
            <summary>
            查询记录总数
            </summary>
            <param name="sql">The SQL.</param>
            <param name="tableName">表名</param>
            <returns>Sql</returns>
            时间：2016-01-05 13:11
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SqlServerPageScript.CreateQueryWhereSql(System.String,System.String)">
            <summary>
            添加筛选条件
            </summary>
            <param name="sql">The SQL.</param>
            <param name="sqlWhere">筛选条件</param>
            <returns>sql</returns>
            时间：2016-01-06 15:19
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.ExceptionMessage">
            <summary>
            异常信息封装类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ExceptionMessage.#ctor(System.Exception,System.String,System.Boolean)">
            <summary>
            以自定义用户信息和异常对象实例化一个异常信息对象
            </summary>
            <param name="ex">异常对象</param>
            <param name="userMessage">自定义用户信息</param>
            <param name="isHideStackTrace">是否隐藏异常堆栈信息</param>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.ExceptionMessage.DetailMessage">
            <summary>
            异常输出的详细描述，包含异常消息，规模信息，异常类型，异常源，引发异常的方法及内部异常信息
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.ExceptionMessage.ExceptionInfo">
            <summary>
            直接的Exception异常信息，即e.Message属性值
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.ExceptionMessage.UserMessage">
            <summary>
            用户信息，用于报告给用户的异常消息
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ExceptionMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.SocketClient">
            <summary>
            Socket Clinet
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketClient.client">
            <summary>
            客户端
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketClient.ipAddress">
            <summary>
            当前连接服务端地址
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketClient.ipEndPoint">
            <summary>
            服务端IP+端口
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketClient.isClose">
            <summary>
            是否关闭.(窗体关闭时关闭代码)
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketClient.portNumber">
            <summary>
            当前连接服务端端口号
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketClient.recBuffer">
            <summary>
            接收缓冲区
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketClient.sendBuffer">
            <summary>
            发送缓冲区
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketClient.sk">
            <summary>
            当前管理对象
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketClient.stream">
            <summary>
            发送与接收使用的流
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketClient.#ctor(System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="ip">The ipaddress.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketClient.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="ip">The ipaddress.</param>
            <param name="port">The port.</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.SocketClient.PushClientMsgHanlder">
            <summary>
            消息推送委托
            </summary>
            <param name="sockets">The sockets.</param>
        </member>
        <member name="E:YanZhiwei.DotNet2.Utilities.Core.SocketClient.PushClientMsgHanlderEvent">
            <summary>
            消息推送事件
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketClient.Connect">
            <summary>
            连接到Server
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketClient.Disconnect">
            <summary>
            端口与Server的连接
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketClient.RestartConnect">
            <summary>
            重连上端.
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketClient.SendData(System.String)">
            <summary>
            发送消息
            </summary>
            <param name="sendData">The send data.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketClient.SendData(System.Byte[])">
            <summary>
            发送消息
            </summary>
            <param name="sendData">The send data.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketClient.EndReader(System.IAsyncResult)">
            <summary>
            Ends the reader.
            </summary>
            <param name="ir">The ir.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketClient.OnPushClientMsgHanlderEvent(YanZhiwei.DotNet2.Utilities.Models.SocketData)">
            <summary>
            Called when [push client MSG hanlder event].
            </summary>
            <param name="sockets">The sockets.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketClient.PusbClientMessage(YanZhiwei.DotNet2.Utilities.Models.SocketCode,System.Byte[],System.Exception,System.Net.IPEndPoint,System.Object)">
            <summary>
            Pusbs the client message.
            </summary>
            <param name="code">The code.</param>
            <param name="buffer">The buffer.</param>
            <param name="exception">The exception.</param>
            <param name="ipaddress">The ipaddress.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketClient.SendDataFailed_Exception(System.Exception)">
            <summary>
            Sends the data failed_ exception.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketClient.SendDataFailed_NullServer">
            <summary>
            Sends the data failed_ null server.
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketClient.SendDataFailed_UnConnect">
            <summary>
            Sends the data failed_ un connect.
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketClient.SendDataSucceed(System.String)">
            <summary>
            Sends the data succeed.
            </summary>
            <param name="sendData">The send data.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketClient.SendDataSucceed(System.Byte[])">
            <summary>
            Sends the data succeed.
            </summary>
            <param name="sendData">The send data.</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.SocketServer">
            <summary>
            Socket Server
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketServer.ipaddress">
            <summary>
            当前IP地址
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketServer.ipEndPoint">
            <summary>
            当前IP,端口对象
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketServer.isStop">
            <summary>
            是否停止
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketServer.listener">
            <summary>
            服务端
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketServer.portNumber">
            <summary>
            当前监听端口
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketServer.recBuffer">
            <summary>
            接收缓冲区
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketServer.semap">
            <summary>
            信号量
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketServer.sendBuffer">
            <summary>
            发送缓冲区
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.SocketServer.syncRoot">
            <summary>
            The synchronize root
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketServer.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="ip">The ip.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketServer.#ctor(System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="ip">The ip.</param>
            <param name="port">The port.</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.SocketServer.PushServerMsgHanlder">
            <summary>
            消息推送委托
            </summary>
            <param name="sockets">The sockets.</param>
        </member>
        <member name="E:YanZhiwei.DotNet2.Utilities.Core.SocketServer.PushServerMsgHanlderEvent">
            <summary>
            消息推送事件
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.SocketServer.ClientList">
            <summary>
            客户端队列集合
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketServer.OnPushServerMsgHanlderEvent(YanZhiwei.DotNet2.Utilities.Models.SocketData)">
            <summary>
            消息推送
            </summary>
            <param name="sockets">The sockets.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketServer.SendToAll(System.String)">
            <summary>
            向所有在线的客户端发送信息.
            </summary>
            <param name="sendData">发送的文本</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketServer.SendToAll(System.Byte[])">
            <summary>
            向所有在线的客户端发送信息.
            </summary>
            <param name="sendDataBuffer">发送的文本</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketServer.SendToClient(System.Net.IPEndPoint,System.Byte[])">
            <summary>
            向某一位客户端发送信息
            </summary>
            <param name="ip">客户端IP+端口地址</param>
            <param name="sendDataBuffer">发送的数据包</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketServer.SendToClient(System.Net.IPEndPoint,System.String)">
            <summary>
            向某一位客户端发送信息
            </summary>
            <param name="ip">客户端IP+端口地址</param>
            <param name="sendData">发送的数据包</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketServer.Start">
            <summary>
            启动服务
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketServer.Stop">
            <summary>
            停止服务
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketServer.AddClientList(YanZhiwei.DotNet2.Utilities.Models.SocketObj)">
            <summary>
            Adds the client list.
            </summary>
            <param name="sk">SocketObj</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketServer.EndReader(System.IAsyncResult)">
            <summary>
            异步接收发送的信息.
            </summary>
            <param name="ir">IAsyncResult</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketServer.GetAcceptTcpClient">
            <summary>
            等待处理新的连接
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketServer.PusbServerMessage(YanZhiwei.DotNet2.Utilities.Models.SocketCode,System.Byte[],System.Exception,System.Net.IPEndPoint,System.Object)">
            <summary>
            推送Server消息到终端
            </summary>
            <param name="code">The code.</param>
            <param name="buffer">The buffer.</param>
            <param name="exception">The exception.</param>
            <param name="ipaddress">The ipaddress.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketServer.ClearAllClients">
            <summary>
            断开，移除所有终端链接
            </summary>
            时间：2016-04-12 19:19
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.SocketServer.ClearClient(System.Net.IPEndPoint)">
            <summary>
            断开，移除某个终端连接
            </summary>
            <param name="ip">IPEndPoint</param>
            时间：2016-04-12 19:21
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.BindList`1">
            <summary>
             双向绑定帮助类
            </summary>
            <typeparam name="T">泛型</typeparam>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.BindList`1.comparerList">
            <summary>
            The comparer list
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.BindList`1.filterCompareValue">
            <summary>
            The filter compare value
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.BindList`1.filterPropertyNameValue">
            <summary>
            The filter property name value
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.BindList`1.filterValue">
            <summary>
            The filter value
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.BindList`1.listSortDescription">
            <summary>
            The list sort description
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.BindList`1.propertyComparer">
            <summary>
            The property comparer
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.BindList`1.propertyDesc">
            <summary>
            The property desc
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.BindList`1.sortDirection">
            <summary>
            The sort direction
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.BindList`1.unfilteredListValue">
            <summary>
            The unfiltered list value
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BindList`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BindList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:YanZhiwei.DotNet2.Utilities.Core.BindList`1"/> class.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BindList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:YanZhiwei.DotNet2.Utilities.Core.BindList`1"/> class.
            </summary>
            <param name="enumerable">The enumerable.</param>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.BindList`1.Filter">
            <summary>
            获取或设置筛选器，以用于从数据源返回的项的集合中排除项。
            </summary>
            <exception cref="T:System.ArgumentException">
            Multi-column + filtering is not implemented.
            or
            Filter is not + in the format: propName = 'value'.
            </exception>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.BindList`1.FilterCompare">
            <summary>
            FilterCompare
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.BindList`1.FilterPropertyName">
            <summary>
            属性筛选
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.BindList`1.SortDescriptions">
            <summary>
            获取当前应用于数据源的排序说明的集合。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.BindList`1.SupportsAdvancedSorting">
            <summary>
            获取一个值，指示数据源是否支持高级排序。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.BindList`1.SupportsFiltering">
            <summary>
            获取一个值，该值指示数据源是否支持筛选。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.BindList`1.UnfilteredList">
            <summary>
            未筛选集合
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.BindList`1.IsSortedCore">
            <summary>
            Gets a value indicating whether this instance is sorted core.
            </summary>
            <value>
            <c>true</c> if this instance is sorted core; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BindList`1.ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
            <summary>
            根据给定的 <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> 对数据源进行排序。
            </summary>
            <param name="sorts">包含要应用于数据源的顺序的 <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />。</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BindList`1.Find(System.Predicate{`0})">
            <summary>
            查找对象
            </summary>
            <param name="match">委托</param>
            <returns>泛型</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BindList`1.Find(System.Int32,System.String,System.Object)">
            <summary>
            查找对象
            </summary>
            <param name="startIndex">索引开始数</param>
            <param name="property">属性名称</param>
            <param name="key">属性值</param>
            <returns>查找到符合记录</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BindList`1.FindAll(System.Predicate{`0})">
            <summary>
            查找符合记录集合
            </summary>
            <param name="match">委托</param>
            <returns>符合条件的集合</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BindList`1.Remove(System.Predicate{`0})">
            <summary>
            移除对象
            </summary>
            <param name="match">The match.</param>
            <returns>成功移除个数</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BindList`1.RemoveFilter">
            <summary>
            移除应用于数据源的当前筛选器。
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BindList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Applies the sort core.
            </summary>
            <param name="property">The property.</param>
            <param name="sortDirection">The sort direction.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BindList`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Finds the core.
            </summary>
            <param name="prop">The property.</param>
            <param name="key">The key.</param>
            <returns>查找个数</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BindList`1.FindCore(System.Int32,System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
             重写FindCore方法
            </summary>
            <param name="startIndex">开始索引</param>
            <param name="prop">PropertyDescriptor</param>
            <param name="key">object</param>
            <returns>符合条数</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BindList`1.ApplyFilter">
            <summary>
            Applies the filter.
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BindList`1.CompareValuesByProperties(`0,`0)">
            <summary>
            Compares the values by properties.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>比较数值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.BindList`1.GetFilterParts">
            <summary>
            Gets the filter parts.
            </summary>
            <exception cref="T:System.ArgumentException">
            Specified filter value  + FilterCompare +  can not be converted from string. + ..Implement a type converter for  + propDesc.PropertyType.ToString()
            or
            Specified property ' + FilterPropertyName + ' is not found on type  + typeof(T).Name + .
            </exception>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeLazy`1">
            <summary>
            Lazy 基于.NET 2.0的实现帮助类
            </summary>
            <typeparam name="T">泛型</typeparam>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeLazy`1.createValue">
            <summary>
            委托
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeLazy`1.syncRoot">
            <summary>
            The synchronize root
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeLazy`1.isValueCreated">
            <summary>
            The is value created
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeLazy`1.value">
            <summary>
            The value
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeLazy`1.#ctor(System.Func{`0})">
            <summary>
            构造函数
            </summary>
            <param name="createValue">委托</param>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeLazy`1.IsValueCreated">
            <summary>
            是否初始化
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeLazy`1.Value">
            <summary>
            获取初始化值
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeLazy`1.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.MapOffsetComparer">
            <summary>
            地图纠偏比较类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.MapOffsetComparer.Compare(System.Object,System.Object)">
            <summary>
            比较两个对象并返回一个值，指示一个对象是小于、等于还是大于另一个对象。
            </summary>
            <param name="x">要比较的第一个对象。</param>
            <param name="y">要比较的第二个对象。</param>
            <returns>
            值 条件 小于零 <paramref name="x" /> 小于 <paramref name="y" />。 零 <paramref name="x" /> 等于 <paramref name="y" />。 大于零 <paramref name="x" /> 大于 <paramref name="y" />。
            </returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.PropertyComparer`1">
            <summary>
            属性比较
            </summary>
            <typeparam name="T">泛型</typeparam>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.PropertyComparer`1.direction">
            <summary>
            The direction
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.PropertyComparer`1.property">
            <summary>
            The property
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.PropertyComparer`1.#ctor(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:YanZhiwei.DotNet2.Utilities.Core.PropertyComparer`1"/> class.
            </summary>
            <param name="pperty">The pperty.</param>
            <param name="pdirection">The pdirection.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.PropertyComparer`1.Compare(`0,`0)">
            <summary>
            比较两个对象并返回一个值，该值指示一个对象小于、等于还是大于另一个对象。
            </summary>
            <param name="objA">The object a.</param>
            <param name="objB">The object b.</param>
            <returns>int</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.PropertyComparer`1.Equals(`0,`0)">
            <summary>
            Equalses the specified object a.
            </summary>
            <param name="objA">The object a.</param>
            <param name="objB">The object b.</param>
            <returns>是否相等</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.PropertyComparer`1.GetHashCode(`0)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The object.</param>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.PropertyComparer`1.SetDirection(System.ComponentModel.ListSortDirection)">
            <summary>
            Sets the direction.
            </summary>
            <param name="sortDirection">The sort direction.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.PropertyComparer`1.CompareAscending(System.Object,System.Object)">
            <summary>
            Compares the ascending.
            </summary>
            <param name="objA">The object a.</param>
            <param name="objB">The object b.</param>
            <returns>int</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.PropertyComparer`1.CompareDescending(System.Object,System.Object)">
            <summary>
            Compares the descending.
            </summary>
            <param name="objA">The object a.</param>
            <param name="objB">The object b.</param>
            <returns>int</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.PropertyComparer`1.GetPropertyValue(`0,System.String)">
            <summary>
            Gets the property value.
            </summary>
            <param name="value">The value.</param>
            <param name="property">The property.</param>
            <returns>object</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1">
            <summary>
            对于Dictionary线程安全操作帮助类
            说明
            默认读锁超时1000毫秒
            默认写锁超时1000毫秒
            .NET 4.0+ 可以使用ConcurrentDictionary来实现。
            </summary>
            <typeparam name="T">泛型</typeparam>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.readerTimeout">
            <summary>
            默认读锁超时1000毫秒
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.writerTimeout">
            <summary>
            默认写锁超时1000毫秒
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.dic">
            <summary>
            Dictionary 对象
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.rwlock">
            <summary>
            ReaderWriterLock对象
            .NET 3.5+ 推荐用ReaderWriterLockSlim
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.#ctor(System.Int32,System.Int32)">
            <summary>
            带参构造函数
            </summary>
            <param name="readerTimeout">读锁超时设置【单位毫秒】</param>
            <param name="writerTimeout">写锁超时设置【单位毫秒】</param>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.Item(System.String)">
            <summary>
            This【线程安全】
            </summary>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.Add(System.String,`0)">
            <summary>
            Add【线程安全】 默认超时1000毫秒
            </summary>
            <param name="key">键</param>
            <param name="val">值</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.Add(System.String,`0,System.Int32)">
            <summary>
            Add【线程安全】
            </summary>
            <param name="key">键</param>
            <param name="val">值</param>
            <param name="timeout">超时设置【毫秒】</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.Clear">
            <summary>
            Clear【线程安全】 默认超时1000毫秒
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.Clear(System.Int32)">
            <summary>
            Clear【线程安全】
            </summary>
            <param name="timeout">超时设置【毫秒】</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.ContainsKey(System.String)">
            <summary>
            ContainsKey【线程安全】 默认超时1000毫秒
            </summary>
            <param name="key">键</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.ContainsKey(System.String,System.Int32)">
            <summary>
            ContainsKey【线程安全】
            </summary>
            <param name="key">键</param>
            <param name="timeout">超时设置【毫秒】</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.Count">
            <summary>
            Count【线程安全】 默认超时1000毫秒
            </summary>
            <returns>数量</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.Count(System.Int32)">
            <summary>
            Count【线程安全】
            </summary>
            <param name="timeout">超时设置【毫秒】</param>
            <returns>Count</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.Get(System.String)">
            <summary>
            Get【线程安全】 默认超时1000毫秒
            </summary>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.Get(System.String,System.Int32)">
            <summary>
            Get【线程安全】
            </summary>
            <param name="key">键</param>
            <param name="timeout">超时设置【毫秒】</param>
            <returns>值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.Remove(System.String)">
            <summary>
            Remove【线程安全】 默认超时1000毫秒
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeDictionary`1.Remove(System.String,System.Int32)">
            <summary>
            Remove【线程安全】
            </summary>
            <param name="key">键</param>
            <param name="timeout">超时设置【毫秒】</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerableHelper`1">
            <summary>
            IEnumerable 线程安全
            </summary>
            <typeparam name="T">泛型</typeparam>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerableHelper`1.innerEnumerable">
            <summary>
            泛型IEnumerable对象
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerableHelper`1.syncObject">
            <summary>
            锁对象
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerableHelper`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerableHelper`1"/> class.
            </summary>
            <param name="inner">The inner.</param>
            <param name="syncObj">The synchronize object.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerableHelper`1.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>IEnumerator</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerableHelper`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            返回一个循环访问集合的枚举数。
            </summary>
            <returns>
            可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。
            </returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerator`1">
            <summary>
            IEnumerator 线程安全
            </summary>
            <typeparam name="T">泛型</typeparam>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerator`1.innerEnumerator">
            <summary>
            泛型IEnumerator对象
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerator`1.syncObject">
            <summary>
            锁对象
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerator`1.#ctor(System.Collections.Generic.IEnumerator{`0},System.Object)">
            <summary>
            构造函数
            </summary>
            <param name="inner">IEnumerator</param>
            <param name="syncObj">object</param>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerator`1.Current">
            <summary>
            返回当前类型
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current.
            </summary>
            <value>
            The current.
            </value>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerator`1.Dispose">
            <summary>
            执行与释放或重置非托管资源相关的应用程序定义的任务。
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerator`1.MoveNext">
            <summary>
            将枚举数推进到集合的下一个元素。
            </summary>
            <returns>
            如果枚举数成功地推进到下一个元素，则为 true；如果枚举数越过集合的结尾，则为 false。
            </returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeEnumerator`1.Reset">
            <summary>
            将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1">
            <summary>
            线程安全集合
            </summary>
            <typeparam name="T">泛型</typeparam>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.innerList">
            <summary>
            集合
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.syncRoot">
            <summary>
            锁对象
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.#ctor">
            <summary>
            ThreadSafeList构造函数
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            ThreadSafeList构造函数
            </summary>
            <param name="data">IEnumerable</param>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.IsReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.Item(System.Int32)">
            <summary>
            索引
            </summary>
            <param name="index">index</param>
            <returns>T</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.Add(`0)">
            <summary>
            增加
            </summary>
            <param name="item">数据项</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.Add(`0,System.Predicate{`0})">
            <summary>
            先判断是否存在集合里面，若存在则移出，然后重新添加
            <para>eg:personList.Add(_person, p => p.Age == 19);</para>
            </summary>
            <param name="t">泛型</param>
            <param name="match">委托</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.AddUniqueTF(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
            <summary>
            去重复集合添加
            </summary>
            <param name="items">添加集合</param>
            <param name="comparaer">IComparer</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.AsReadOnly">
            <summary>
            作为只读
            </summary>
            <returns>ReadOnlyCollection</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.Clear">
            <summary>
            移出所有元素
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.Contains(`0)">
            <summary>
            是否包含某项元素
            </summary>
            <param name="item">数据项</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.CopyTo(`0[],System.Int32)">
            <summary>
            复制到某个类型数组
            </summary>
            <param name="array">复制到苏族</param>
            <param name="arrayIndex">开始位置</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.Exists(System.Predicate{`0})">
            <summary>
            是否包含
            </summary>
            <param name="match">委托</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.Find(System.Predicate{`0})">
            <summary>
            查找
            </summary>
            <param name="match">委托</param>
            <returns>查找到项</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.FindAll(System.Predicate{`0})">
            <summary>
            查找群不
            </summary>
            <param name="match">委托</param>
            <returns>查找到的集合</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.ForEach(System.Action{`0})">
            <summary>
            遍历
            </summary>
            <param name="action">委托</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.GetEnumerator">
            <summary>
            返回一个循环访问集合的枚举数。
            </summary>
            <returns>
            可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。
            </returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>
            可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。
            </returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.IndexOf(`0)">
            <summary>
            Indexes the of.
            </summary>
            <param name="item">The item.</param>
            <returns>索引位置</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.Insert(System.Int32,`0)">
            <summary>
            插入一项
            </summary>
            <param name="index">插入位置</param>
            <param name="item">插入项</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.Remove(`0)">
            <summary>
            移除
            </summary>
            <param name="item">需要移除项</param>
            <returns>是否移除成功</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.RemoveAll(System.Predicate{`0})">
            <summary>
            RemoveAll
            </summary>
            <param name="match">Predicate委托</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.RemoveAt(System.Int32)">
            <summary>
            RemoveAt
            </summary>
            <param name="index">index</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeList`1.TrimExcess">
            <summary>
            Trims the excess.
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeQueue`1">
            <summary>
            Queue线程安全实现的帮助类
            说明
            默认读锁超时1000毫秒
            默认写锁超时1000毫秒
            </summary>
            <typeparam name="T">泛型</typeparam>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeQueue`1.queueTF">
            <summary>
            泛型Queue对象
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeQueue`1.rwlock">
            <summary>
            ReaderWriterLock 对象
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeQueue`1.readerTimeout">
            <summary>
            默认读锁超时1000毫秒
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeQueue`1.writerTimeout">
            <summary>
            默认写锁超时1000毫秒
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeQueue`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeQueue`1.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="capacity">初始容量</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            构造函数
            </summary>
            <param name="collection">IEnumerable</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeQueue`1.Count">
            <summary>
            Count 【线程安全】
            </summary>
            <returns>queue 数量</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeQueue`1.Dequeue">
            <summary>
            Dequeue【线程安全】
            </summary>
            <returns>泛型</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeQueue`1.DequeueAll">
            <summary>
            DequeueAll【线程安全】
            </summary>
            <returns>IList</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeQueue`1.Enqueue(`0)">
            <summary>
            Enqueue【线程安全】
            </summary>
            <param name="item">泛型</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeQueue`1.EnqueueAll(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            EnqueueAll【线程安全】
            </summary>
            <param name="itemsToQueue">IEnumerable</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeQueue`1.EnqueueAll(System.Collections.Generic.IList{`0})">
            <summary>
            EnqueueAll【线程安全】
            </summary>
            <param name="itemsToQueue">IList</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.ThreadSafeQueue`1.GetEnumerator">
            <summary>
            GetEnumerator【线程安全】
            </summary>
            <returns>IEnumerator</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.UBinder">
            <summary>
            SerializationBinder重写
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Core.UBinder.BindToType(System.String,System.String)">
            <summary>
            当在派生类中重写时，控制将序列化对象绑定到类型的过程。
            </summary>
            <param name="assemblyName">指定序列化对象的 <see cref="T:System.Reflection.Assembly" /> 名称。</param>
            <param name="typeName">指定序列化对象的 <see cref="T:System.Type" /> 名称。</param>
            <returns>
            格式化程序为其创建新实例的对象的类型。
            </returns>
            日期：2015-09-17 10:56
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Core.RegexPattern">
            <summary>
            正则表达式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.Base64Check">
            <summary>
            Base64检测正则表达式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.BinaryCodedDecimal">
            <summary>
            验证Bcd码 e.g. "01" or "3456"
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.CarLicenseCheck">
            <summary>
            车牌格式检测正则表达式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.ChineseCheck">
            <summary>
            中文检测正则表达式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.DateCheck">
            <summary>
            日期格式检测正则表达式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.DecimalCheck">
            <summary>
            验证两位小数
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.EmailCheck">
            <summary>
            电子邮箱检测正则表达式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.FileCheck">
            <summary>
            文件路径检测正则表达式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.HexStringCheck">
            <summary>
            是否十六进制字符串检测正则表达式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.IdCardCheck">
            <summary>
            身份证检测正则表达式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.IntCheck">
            <summary>
            整数检测正则表达式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.IpCheck">
            <summary>
            Ip检测正则表达式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.LetterCheck">
            <summary>
            A~Z,a~z字幕检测正则表达式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.NumberCheck">
            <summary>
            数字检测正则表达式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.NumberWithoutZeroCheck">
            <summary>
            验证非零的正整数
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.PassWordLengthCheck">
            <summary>
            验证密码长度(要求长度为6-18位)
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.PostCodeCheck">
            <summary>
            邮政编码检测正则表达式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Core.RegexPattern.URLCheck">
            <summary>
            URL检测正则表达式
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.AjaxResultType">
            <summary>
            表示 ajax 操作结果类型的枚举
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.AjaxResultType.Info">
            <summary>
            消息结果类型
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.AjaxResultType.Success">
            <summary>
            成功结果类型
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.AjaxResultType.Warning">
            <summary>
            警告结果类型
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.AjaxResultType.Error">
            <summary>
            异常结果类型
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.DBTypeName">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DBTypeName.SqlServer">
            <summary>
            The SQL server
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DBTypeName.Oracle">
            <summary>
            The oracle
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DBTypeName.MySql">
            <summary>
            My SQL
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DBTypeName.OleDb">
            <summary>
            The OLE database
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DBTypeName.SQLite">
            <summary>
            The sq lite
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DBTypeName.Postgres">
            <summary>
            The postgres
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DBTypeName.Sybase">
            <summary>
            The sybase
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DBTypeName.DB2">
            <summary>
            The d b2
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DBTypeName.Firebird">
            <summary>
            The firebird
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DBTypeName.SqlServerCe">
            <summary>
            The SQL server ce
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.ImageCutMode">
            <summary>
            图片裁剪方式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.ImageCutMode.CutWH">
            <summary>
            根据高宽剪切
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.ImageCutMode.CutW">
            <summary>
            根据宽剪切
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.ImageCutMode.CutH">
            <summary>
            根据高剪切
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.ImageCutMode.CutNo">
            <summary>
            缩放不剪裁
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.OperationResultType">
            <summary>
            表示业务操作结果的枚举
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.OperationResultType.ValidError">
            <summary>
              输入信息验证失败
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.OperationResultType.QueryNull">
            <summary>
              指定参数的数据不存在
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.OperationResultType.NoChanged">
            <summary>
              操作取消或操作没引发任何变化
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.OperationResultType.Success">
            <summary>
              操作成功
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.OperationResultType.Error">
            <summary>
              操作引发错误
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.OrderBy">
            <summary>
            排序
            </summary>
            时间：2016-01-05 11:45
            备注：
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.OrderBy.Desc">
            <summary>
            降序
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.OrderBy.Asc">
            <summary>
            升序
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.OrderWay">
            <summary>
            排序方向
            </summary>
            时间：2015-11-02 16:06
            备注：
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.OrderWay.Desc">
            <summary>
            降序
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.OrderWay.Asc">
            <summary>
            升序
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.ProgramMode">
            <summary>
            Program Mode
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.ProgramMode.WebForm">
            <summary>
            The web form
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.ProgramMode.WinForm">
            <summary>
            The appliaction
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates">
            <summary>
            串口波特率列表。
            75,110,150,300,600,1200,2400,4800,9600,14400,19200,28800,38400,56000,57600,
            115200,128000,230400,256000
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_75">
            <summary>
            75
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_110">
            <summary>
            110
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_150">
            <summary>
            150
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_300">
            <summary>
            300
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_600">
            <summary>
            600
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_1200">
            <summary>
            1200
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_2400">
            <summary>
            2400
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_4800">
            <summary>
            4800
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_9600">
            <summary>
            9600
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_14400">
            <summary>
            14400
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_19200">
            <summary>
            19200
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_28800">
            <summary>
            28800
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_38400">
            <summary>
            38400
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_56000">
            <summary>
            56000
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_57600">
            <summary>
            57600
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_115200">
            <summary>
            115200
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_128000">
            <summary>
            128000
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_230400">
            <summary>
            230400
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates.BaudRate_256000">
            <summary>
            256000
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.SerialPortDatabits">
            <summary>
            串口数据位列表（5,6,7,8）
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortDatabits.FiveBits">
            <summary>
            5
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortDatabits.SixBits">
            <summary>
            6
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortDatabits.SeventBits">
            <summary>
            7
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortDatabits.EightBits">
            <summary>
            7
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.SetWaterPosition">
            <summary>
            水印位置
            </summary>
            时间：2015-12-17 15:41
            备注：
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SetWaterPosition.center">
            <summary>
            居中
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SetWaterPosition.topLeft">
            <summary>
            左上角
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SetWaterPosition.topRight">
            <summary>
            右上角
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SetWaterPosition.bottomLeft">
            <summary>
            左下角
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SetWaterPosition.bottomRight">
            <summary>
            右下角
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.DatePart">
            <summary>
            时间差枚举
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DatePart.year">
            <summary>
            年
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DatePart.month">
            <summary>
            月
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DatePart.day">
            <summary>
            日
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DatePart.hour">
            <summary>
            小时
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DatePart.minute">
            <summary>
            分钟
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.DatePart.second">
            <summary>
            秒
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.SerialPortState">
            <summary>
            串口操作状态
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortState.SendSucceed">
            <summary>
            发送成功;
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortState.SendTimeout">
            <summary>
            发送超时
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortState.SendFailed">
            <summary>
            发送失败
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.SerialPortState.UnOpened">
            <summary>
            串口未打开
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.StripHtmlType">
            <summary>
            移除HTML Tag方式枚举
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.StripHtmlType.CharArray">
            <summary>
            CharArray
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.StripHtmlType.RegexCompiled">
            <summary>
            正则表达Compiled方式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.StripHtmlType.Regex">
            <summary>
            正则表达式
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.ExceptionMode">
            <summary>
            异常模式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.ExceptionMode.UnhandledException">
            <summary>
            未知异常
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.ExceptionMode.ThreadException">
            <summary>
            线程异常
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.ToHexadecimal">
            <summary>
            转换成十六进制方式枚举
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.ToHexadecimal.Loop">
            <summary>
            循环方式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.ToHexadecimal.BitConverter">
            <summary>
            BitConverter方式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.ToHexadecimal.ConvertAll">
            <summary>
            Array.ConvertAll方式
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.Conversion">
            <summary>
            各个进制转换枚举
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Conversion.Binary">
            <summary>
            二进制
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Conversion.Octal">
            <summary>
            八进制
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Conversion.Decimal">
            <summary>
            十进制
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Conversion.Hexadecimal">
            <summary>
            十六进制
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.Buttons">
            <summary>
            常用按钮
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Buttons.Close">
            <summary>
            关闭按钮
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Buttons.Back">
            <summary>
            返回按钮
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Buttons.Home">
            <summary>
            首页按钮
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Buttons.Register">
            <summary>
            注册按钮
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Buttons.Login">
            <summary>
            登陆按钮
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.Formula">
            <summary>
            EnumFormula
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Formula.Add">
            <summary>
            加号
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Formula.Dec">
            <summary>
            减号
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Formula.Mul">
            <summary>
            乘号
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Formula.Div">
             <summary>
            除号
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Formula.Sin">
             <summary>
            正玄
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Formula.Cos">
            <summary>
            余玄
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Formula.Tan">
            <summary>
            正切
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Formula.ATan">
             <summary>
            余切
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Formula.Sqrt">
             <summary>
            平方根
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Formula.Pow">
            <summary>
            求幂
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.Formula.None">
            <summary>
            无
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Enums.LogLevel">
            <summary>
            日志级别
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.LogLevel.Fatal">
            <summary>
            致命错误
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.LogLevel.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.LogLevel.Warn">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.LogLevel.Info">
            <summary>
            信息
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Enums.LogLevel.Debug">
            <summary>
            调试
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.EnumTitleAttribute">
            <summary>
            枚举属性
            </summary>
            时间：2016-01-15 11:16
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.EnumTitleAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="title">The title.</param>
            时间：2016-01-15 11:22
            备注：
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.EnumTitleAttribute.IsDisplay">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.EnumTitleAttribute.Title">
            <summary>
            显示标题
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.EnumTitleAttribute.Order">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata">
            <summary>
            JPG照片的Meta数据结构
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.Aperture">
            <summary>
            拍照时镜头的光圈. 单位是 APEX
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.Brightness">
            <summary>
            被拍摄对象的明度, 单位是 APEX.
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.CameraModel">
            <summary>
            表示数字相机的模块代码. 在 Exif 标准中, 这个标签是可选的, 但在DCF中它也是必需的
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.CfaPattern">
            <summary>
            色彩滤镜矩阵（CFA）几何样式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.ColorSpace">
            <summary>
            色彩空间
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.CompBPP">
            <summary>
            JPEG (粗略的估计)的平均压缩率.
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.CompConfig">
            <summary>
            像素数据的顺序
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.DatePictureTaken">
            <summary>
            照片在被拍下来的日期/时间
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.EquipmentMake">
            <summary>
            数字相机的制造商
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.ExposureBias">
            <summary>
            照片拍摄时的曝光补偿. 单位是APEX(EV).
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.ExposureIndex">
            <summary>
            曝光指数
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.ExposureProg">
            <summary>
            拍照时相机使用的曝光程序. '1' 表示手动曝光, '2' 表示正常程序曝光, '3' 表示光圈优先曝光, '4' 表示快门优先曝光, '5' 表示创意程序(慢速程序), '6' 表示动作程序(高速程序), '7'表示 肖像模式, '8' 表示风景模式.
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.ExposureTime">
            <summary>
            曝光时间 (快门速度的倒数). 单位是秒.
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.Flash">
            <summary>
            '0' 表示闪光灯没有闪光, '1' 表示闪光灯闪光, '5' 表示闪光但没有检测反射光, '7' 表示闪光且检测了反射光.
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.FNumber">
            <summary>
            拍照时的光圈F-number(F-stop).
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.FocalLength">
            <summary>
            棸距长度. 单位是毫米
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.FocalResUnit">
            <summary>
            CCD的像素密度
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.FocalXRes">
            <summary>
            CCD的像素密度 X轴
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.FocalYRes">
            <summary>
            CCD的像素密度 Y轴
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.FPXVer">
            <summary>
            FlashPix的版本信息
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.Fstop">
            <summary>
            拍照时的光圈F-number(F-stop).
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.ImageHeight">
            <summary>
            图片高度
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.ImageWidth">
            <summary>
            图片宽度
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.ISOSpeed">
            <summary>
            CCD 的感光度, 等效于 Ag-Hr 胶片的速率.
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.LightSource">
            <summary>
            光源, 实际上是表示白平衡设置
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.MaxAperture">
            <summary>
            镜头的最大光圈值
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.MeteringMode">
            <summary>
            曝光的测光方法. '0' 表示未知, '1' 为平均测光, '2' 为中央重点测光, '3' 是点测光, '4' 是多点测光, '5' 是多区域测光, '6' 部分测光, '255' 则是其他.
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.OECF">
            <summary>
            OECF
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.SceneType">
            <summary>
            场景类型
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.SensingMethod">
            <summary>
            图像传感器单元的类型
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.ShutterSpeed">
            <summary>
            用APEX表示出的快门速度
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.SpectralSense">
            <summary>
            光谱灵敏度
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.SubjectDist">
            <summary>
            焦点的距离, 单位是米
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.Ver">
            <summary>
            Exif 的版本号
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.XResolution">
            <summary>
            水平分辨率
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadata.YResolution">
            <summary>
            垂直分辨率
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.ExifMetadataDetail">
            <summary>
            Exif元数据结构体
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadataDetail.DisplayValue">
            <summary>
            显示数值
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadataDetail.Hex">
            <summary>
            十六进制数值
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ExifMetadataDetail.RawValueAsString">
            <summary>
            原始值串
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.PageCondition">
            <summary>
            分页查询条件信息
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.PageCondition.#ctor">
            <summary>
            初始化一个 默认参数（第1页，每页20，排序条件为空）的分页查询条件信息类 的新实例
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.PageCondition.#ctor(System.Int32,System.Int32)">
            <summary>
            初始化一个 指定页索引与页大小的分页查询条件信息类 的新实例
            </summary>
            <param name="pageIndex"> 页索引 </param>
            <param name="pageSize"> 页大小 </param>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.PageCondition.PageIndex">
            <summary>
            获取或设置 页索引
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.PageCondition.PageSize">
            <summary>
            获取或设置 页大小
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.PageCondition.PrimaryKeyField">
            <summary>
            主键字段
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.PageCondition.SortConditions">
            <summary>
            获取或设置 排序条件组
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.PageResult`1">
            <summary>
            数据分页信息
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.PageResult`1.Data">
            <summary>
            获取或设置 分页数据
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.PageResult`1.Total">
            <summary>
            获取或设置 总记录数
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.PerformanceParams">
            <summary>
            性能测试参数
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.PerformanceParams.IsMultithread">
            <summary>
            是否多线程测试
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.PerformanceParams.RunCount">
            <summary>
            测试次数
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.SmtpServer">
            <summary>
            SMTP服务器 实体类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SmtpServer.Host">
            <summary>
            服务器
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SmtpServer.SendMail">
            <summary>
            发送邮箱
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SmtpServer.SendMailPasswrod">
            <summary>
            发送邮箱密码
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.SmtpServer.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="host">服务器</param>
            <param name="sendmail">发送邮箱</param>
            <param name="sendPossword">发送邮箱密码</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.SortCondition">
            <summary>
            列表字段排序条件
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.SortCondition.#ctor(System.String)">
            <summary>
            构造一个指定字段名称的升序排序的排序条件
            </summary>
            <param name="sortField">字段名称</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.SortCondition.#ctor(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            构造一个排序字段名称和排序方式的排序条件
            </summary>
            <param name="sortField">字段名称</param>
            <param name="listSortDirection">排序方式</param>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SortCondition.SortField">
            <summary>
            获取或设置 排序字段名称
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SortCondition.ListSortDirection">
            <summary>
            获取或设置 排序方向
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.ClipboardCtrl">
            <summary>
            控制复制克隆的实体类
            参考:http://www.codeproject.com/Articles/12976/How-to-Clone-Serialize-Copy-Paste-a-Windows-Forms
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.ClipboardCtrl.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.ClipboardCtrl.#ctor(System.Windows.Forms.Control)">
            <summary>
            带参数的构造函数
            </summary>
            <param name="ctrl">控件</param>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.ClipboardCtrl.Format">
            <summary>
            DataFormats.Format
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.ClipboardCtrl.CtrlName">
            <summary>
            空间类型名称
            eg:Combox
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.ClipboardCtrl.CtrlNamespace">
             <summary>
            控件的名称空间
            eg:System.Windows.Forms
             </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.ClipboardCtrl.CtrlPropertyList">
            <summary>
            控件的属性集合
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType">
            <summary>
             输出格式
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType.Avi">
             <summary>
            video/x-msvideo
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType.Bin">
            <summary>
            application/octet-stream
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType.Doc">
            <summary>
            application/msword
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType.Html">
            <summary>
            text/html
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType.Jpeg">
             <summary>
            image/jpeg
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType.Js">
             <summary>
            application/x-javascript
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType.Json">
            <summary>
             application/json
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType.Mp3">
             <summary>
            audio/mpeg
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType.Mpeg">
             <summary>
            video/mpeg
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType.Pdf">
            <summary>
            application/pdf
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType.Png">
             <summary>
            image/png
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType.Ppt">
            <summary>
            application/vnd.ms-powerpoint
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType.Txt">
            <summary>
            text/plain
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType.Xls">
            <summary>
            application/vnd.ms-excel
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ResponseContentType.Xml">
             <summary>
            text/xml
             </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.ControlRect">
            <summary>
            记录窗体和其控件的初始位置和大小。
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ControlRect.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ControlRect.Left">
            <summary>
            左边
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ControlRect.Top">
            <summary>
            上边
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.ControlRect.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.GeoPoint">
            <summary>
            地图X,Y坐标轴
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.GeoPoint.X">
            <summary>
            X轴
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.GeoPoint.Y">
            <summary>
            Y轴
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.GeoPoint.#ctor(System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.JsChildNode">
            <summary>
            适用于Jquery jsTree
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.JsChildNode.children">
            <summary>
            是否包含子节点
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.JsChildNode.icon">
            <summary>
            节点图片路径
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.JsChildNode.id">
            <summary>
            键
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.JsChildNode.text">
            <summary>
            值
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.JsTreeNode">
            <summary>
            适用于Jquery jsTree
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.JsTreeNode.children">
            <summary>
            子节点集合
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.JsTreeNode.icon">
            <summary>
            节点图标路径
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.JsTreeNode.id">
            <summary>
            键
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.JsTreeNode.text">
            <summary>
            值
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.ListItem">
            <summary>
            用户Combox 键值对绑定实体类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.ListItem.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.ListItem.#ctor(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="_key">键</param>
             <param name="_value">值</param>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.ListItem.Key">
            <summary>
            键
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.ListItem.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.ListItem.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.MapCoord">
            <summary>
            地图坐标
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.MapCoord.Lat">
            <summary>
            纬度
            3130表示31.30
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.MapCoord.Lon">
            <summary>
            经度
            12151表示121.51
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.MapCoord.X_off">
             <summary>
            地图x轴偏移像素值
             </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.MapCoord.Y_off">
             <summary>
            地图y轴偏移像素值
             </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.LatLngPoint">
            <summary>
            经纬度
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.LatLngPoint.#ctor(System.Double,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="lat">纬度</param>
            <param name="lon">经度</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.LatLngPoint.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.LatLngPoint.LatY">
            <summary>
            纬度
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.LatLngPoint.LonX">
            <summary>
            经度
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.MenuStripItem">
            <summary>
            MenuStrip 构建实体类
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.MenuStripItem.ACTION_NAME">
            <summary>
            关联命令名称
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.MenuStripItem.FATHER_ID">
            <summary>
            父ID
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.MenuStripItem.ID">
            <summary>
            标识ID
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.MenuStripItem.MENU_NAME">
            <summary>
            MENU名称
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.MenuStripItem.MENU_TEXT">
            <summary>
            MENU文本描述
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.SocketCode">
            <summary>
            具体错误类型
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.ObjectNull">
            <summary>
            对象为null
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.ConnectError">
            <summary>
            连接时发生错误
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.ConnectSuccess">
            <summary>
            连接成功.
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.NoClinets">
            <summary>
            没有客户端连接
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.StartSucceed">
            <summary>
            服务启动成功
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.StartError">
            <summary>
            服务启动失败
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.Stop">
            <summary>
            服务停止
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.SendDataError">
            <summary>
            发送消息失败
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.NewClientConnect">
            <summary>
            新的客户端连接
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.NewClientConnectError">
            <summary>
            新的客户端连接错误
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.RemoveClientConnect">
             <summary>
            移除客户端连接
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.UnConnect">
            <summary>
            未连接上Server
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.DataReceived">
             <summary>
            数据接收
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.DataReceivedError">
            <summary>
            数据接收错误
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.Uninitialized">
             <summary>
            Client尚未初始化
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.Disconnect">
             <summary>
            Client断开连接
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.ClientOffline">
            <summary>
            客户端下线
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.Models.SocketCode.ServerClose">
            <summary>
            Server关闭
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.SocketData">
            <summary>
            Socket 数据
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SocketData.Code">
            <summary>
            异常枚举
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SocketData.DataBuffer">
            <summary>
            缓存数据
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SocketData.Ex">
            <summary>
            发生异常时不为null.
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SocketData.Ip">
            <summary>
            当前IP地址,端口号
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SocketData.Tag">
            <summary>
            附加数据
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.SocketObj">
            <summary>
            自定义Socket对象
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.SocketObj.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.SocketObj.#ctor(System.Net.IPEndPoint,System.Net.Sockets.TcpClient,System.Net.Sockets.NetworkStream)">
            <summary>
            创建Sockets对象
            </summary>
            <param name="ip">Ip地址</param>
            <param name="client">TcpClient</param>
            <param name="ns">承载客户端Socket的网络流</param>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SocketObj.Client">
            <summary>
            客户端主通信程序
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SocketObj.ClientDispose">
            <summary>
            客户端退出标识.如果服务端发现此标识为true,那么认为客户端下线
            客户端接收此标识时,认为客户端异常.
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SocketObj.Code">
            <summary>
            异常枚举
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SocketObj.ex">
            <summary>
            发生异常时不为null.
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SocketObj.Ip">
            <summary>
            当前IP地址,端口号
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SocketObj.NewClientFlag">
            <summary>
            新客户端标识.如果推送器发现此标识为true,那么认为是客户端上线
            仅服务端有效
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SocketObj.Offset">
            <summary>
            异步接收后包的大小
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SocketObj.SkStream">
            <summary>
            承载客户端Socket的网络流
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.SocketObj.Tag">
            <summary>
            扩展对象
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.SocketObj.Close">
            <summary>
            关闭终端连接
            </summary>
            时间：2015-12-04 10:03
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.TipMessage">
            <summary>
            SplashForm 提示消息
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.Models.TipMessage.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="caption">标题</param>
            <param name="message">消息</param>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.TipMessage.Caption">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.TipMessage.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Models.Validation">
            <summary>
            参数验证实体类
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Models.Validation.IsValid">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.ValidateCode.ValidateCodeType">
            <summary>
            图片验证码抽象类
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.ValidateCode.ValidateCode_Style1">
            <summary>
            线条干扰(蓝色)
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.ValidateCode.ValidateCode_Style10">
            <summary>
            线条干扰(彩色)
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.ValidateCode.ValidateCode_Style11">
            <summary>
            GIF闪烁动画(彩色)
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.ValidateCode.ValidateCode_Style12">
            <summary>
            中文(彩色)
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.ValidateCode.ValidateCode_Style13">
            <summary>
            字体旋转(简单)
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.ValidateCode.ValidateCode_Style14">
            <summary>
            2年级算术(彩色)
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.ValidateCode.ValidateCode_Style2">
            <summary>
            噪点干扰(蓝色)
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.ValidateCode.ValidateCode_Style3">
            <summary>
            GIF颠簸动画
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.ValidateCode.ValidateCode_Style4">
            <summary>
            线条干扰(蓝色)
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.ValidateCode.ValidateCode_Style5">
            <summary>
            GIF闪烁动画(蓝色)
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.ValidateCode.ValidateCode_Style6">
            <summary>
            噪点干扰(扭曲)
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.ValidateCode.ValidateCode_Style7">
            <summary>
            中文(蓝色)
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.ValidateCode.ValidateCode_Style8">
            <summary>
            2年级算术(蓝色)
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.ValidateCode.ValidateCode_Style9">
            <summary>
            噪点干扰(彩色)
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger">
            <summary>
            缓存帮助类
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.AppPrefix">
            <summary>
            AppPrefix
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.Cache">
            <summary>
            Cache对象
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.Contain(System.String)">
            <summary>
            是否已缓存
            </summary>
            <param name="key">键</param>
            <returns>是否已缓存</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.Get(System.String)">
            <summary>
            获取缓存内容
            </summary>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.Remove(System.String)">
            <summary>
            清除缓存
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.Set(System.String,System.Object)">
            <summary>
            设置缓存
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.Set(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            设置缓存
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="cacheDependency">
            所插入对象的文件依赖项或缓存键依赖项。当任何依赖项更改时，该对象即无效，并从缓存中移除。如果没有依赖项，则此参数包含 nullNothingnullptrnull 引用。
            </param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.Set(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime)">
            <summary>
            设置缓存
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="cacheDependency">
            所插入对象的文件依赖项或缓存键依赖项。当任何依赖项更改时，该对象即无效，并从缓存中移除。如果没有依赖项，则此参数包含 nullNothingnullptrnull 引用
            </param>
            <param name="dt">
            所插入对象将过期并被从缓存中移除的时间。若要避免可能出现的本地时间方面的问题（如从标准时间更改为夏时制），请对此参数值使用 UtcNow，不要使用 Now。如果使用绝对过期，则
            slidingExpiration 参数必须为 NoSlidingExpiration
            </param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.Set(System.String,System.Object,System.Int32,System.Boolean,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            本地缓存写入，包括分钟，是否绝对过期及缓存过期的回调
            </summary>
            <param name="key">key</param>
            <param name="value">value</param>
            <param name="minutes">缓存分钟</param>
            <param name="isAbsoluteExpiration">是否绝对过期</param>
            <param name="onRemoveCallback">缓存过期回调</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.Set(System.String,System.Object,System.Web.Caching.CacheDependency,System.TimeSpan)">
            <summary>
            设置缓存
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="cacheDependency">
            所插入对象的文件依赖项或缓存键依赖项。当任何依赖项更改时，该对象即无效，并从缓存中移除。如果没有依赖项，则此参数包含 nullNothingnullptrnull 引用
            </param>
            <param name="ts">
            最后一次访问所插入对象时与该对象过期时之间的时间间隔。如果该值等效于 20 分钟，则对象在最后一次被访问 20 分钟之后将过期并被从缓存中移除。如果使用可调过期，则
            absoluteExpiration 参数必须为 NoAbsoluteExpiration。
            </param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.Set(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)">
            <summary>
            设置缓存
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="cacheDependency">
            所插入对象的文件依赖项或缓存键依赖项。当任何依赖项更改时，该对象即无效，并从缓存中移除。如果没有依赖项，则此参数包含 nullNothingnullptrnull 引用
            </param>
            <param name="dt">
            所插入对象将过期并被从缓存中移除的时间。若要避免可能出现的本地时间方面的问题（如从标准时间更改为夏时制），请对此参数值使用 UtcNow，不要使用 Now。如果使用绝对过期，则
            slidingExpiration 参数必须为 NoSlidingExpiration
            </param>
            <param name="ts">
            最后一次访问所插入对象时与该对象过期时之间的时间间隔。如果该值等效于 20 分钟，则对象在最后一次被访问 20 分钟之后将过期并被从缓存中移除。如果使用可调过期，则
            absoluteExpiration 参数必须为 NoAbsoluteExpiration。
            </param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.Set(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            设置缓存
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="cacheDependency">
            该项的文件依赖项或缓存键依赖项。当任何依赖项更改时，该对象即无效，并从缓存中移除。如果没有依赖项，则此参数包含 null。
            </param>
            <param name="absoluteExpiration">
            所插入对象将过期并被从缓存中移除的时间。若要避免可能出现的本地时间方面的问题（如从标准时间更改为夏时制），请对此参数值使用 UtcNow，不要使用 Now。如果使用绝对过期，则
            slidingExpiration 参数必须为 NoSlidingExpiration
            </param>
            <param name="slidingExpiration">
            最后一次访问所插入对象时与该对象到期时之间的时间间隔。如果该值等效于 20 分钟，则对象在最后一次被访问 20 分钟之后将到期并被从缓存中移除。如果使用可调到期，则
            absoluteExpiration 参数必须为 NoAbsoluteExpiration。
            </param>
            <param name="onUpdate">在从缓存中移除对象时将调用的委托（如果提供）。当从缓存中删除应用程序的对象时，可使用它来通知应用程序。</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.Set(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            设置缓存
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="cacheDependency">
            该项的文件依赖项或缓存键依赖项。当任何依赖项更改时，该对象即无效，并从缓存中移除。如果没有依赖项，则此参数包含 null。
            </param>
            <param name="absoluteExpiration">
            所插入对象将过期并被从缓存中移除的时间。若要避免可能出现的本地时间方面的问题（如从标准时间更改为夏时制），请对此参数值使用 UtcNow，不要使用 Now。如果使用绝对过期，则
            slidingExpiration 参数必须为 NoSlidingExpiration
            </param>
            <param name="slidingExpiration">
            最后一次访问所插入对象时与该对象到期时之间的时间间隔。如果该值等效于 20 分钟，则对象在最后一次被访问 20 分钟之后将到期并被从缓存中移除。如果使用可调到期，则
            absoluteExpiration 参数必须为 NoAbsoluteExpiration。
            </param>
            <param name="priority">优先级</param>
            <param name="onUpdate">在从缓存中移除对象时将调用的委托（如果提供）。当从缓存中删除应用程序的对象时，可使用它来通知应用程序。</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.AddOrUpdate``1(System.String,``0,System.Func{System.String,``0,``0})">
            <summary>
            如果该键尚不存在，则使用指定函数将键/值对添加到 Session；如果该键已存在，则使用该函数更新 Session 中的键/值对。
            </summary>
            <typeparam name="TValue">泛型，数值类型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="updateHanlder">更新委托</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.ItemRemovedCallback(System.String,System.Object,System.Web.Caching.CacheItemRemovedReason)">
            <summary>
            缓存处理策略
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="reason">原因</param>
            时间：2016-05-26 9:53 备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.AddOrUpdate``1(System.String,``0,System.Action{``0},System.Func{System.String,``0,``0})">
            <summary>
            如果该键尚不存在，则使用指定函数将键/值对添加到 Session；如果该键已存在，则使用该函数更新 Session 中的键/值对。
            </summary>
            <typeparam name="TValue">泛型，数值类型.</typeparam>
            <param name="key">键.</param>
            <param name="value">值.</param>
            <param name="addHanlder">新增委托</param>
            <param name="updateHanlder">更新委托</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CacheManger.AddOrUpdate``1(System.String,System.Func{System.String,``0},System.Func{System.String,``0,``0})">
            <summary>
            如果该键尚不存在，则使用指定函数将键/值对添加到 Session；如果该键已存在，则使用该函数更新 Session 中的键/值对。
            </summary>
            <typeparam name="TValue">泛型</typeparam>
            <param name="key">键</param>
            <param name="addHanlder">新增委托</param>
            <param name="updateHanlder">修改委托</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.Core.CookieManger">
            <summary>
            cookie 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CookieManger.Get(System.String)">
            <summary>
            取Cookie
            </summary>
            <param name="name">键</param>
            <returns>值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CookieManger.GetValue(System.String)">
            <summary>
            取Cookie值
            </summary>
            <param name="name">键</param>
            <returns>值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CookieManger.Remove(System.String)">
            <summary>
            移除Cookie
            </summary>
            <param name="name">cookie键</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CookieManger.Remove(System.Web.HttpCookie)">
            <summary>
            Removes the specified cookie.
            </summary>
            <param name="cookie">HttpCookie</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CookieManger.Save(System.String,System.String,System.Int32)">
            <summary>
            保存Cookie
            </summary>
            <param name="name">键</param>
            <param name="value">值</param>
            <param name="expiresHours">小时</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.CookieManger.Save(System.Web.HttpCookie,System.Int32)">
            <summary>
            保存Cookie
            </summary>
            <param name="cookie">HttpCookie</param>
            <param name="expiresHours">小时</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.Core.PagerHtmlScript">
            <summary>
            生成分页样式
            </summary>
            时间：2016-01-05 11:21
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.PagerHtmlScript.BuilderNormal(System.Int32,System.Int32)">
            <summary>
            创建普通分页HTML脚本
            </summary>
            <param name="pageIndex">当前分页索引</param>
            <param name="totalPageCount">总共分页数量</param>
            <returns>分页Html</returns>
            时间：2016-01-05 11:21
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.PagerHtmlScript.BuilderNormal(System.Int32,System.Int32,System.String)">
            <summary>
            创建普通分页HTML脚本
            </summary>
            <param name="pageIndex">当前分页索引</param>
            <param name="totalPageCount">总共分页数量</param>
            <param name="extraParams">额外参数</param>
            <returns>分页Html</returns>
            时间：2016-01-05 11:22
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.PagerHtmlScript.BuilderNormal(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            创建普通分页HTML脚本
            </summary>
            <param name="pageIndex">当前分页索引</param>
            <param name="totalPageCount">总共分页数量</param>
            <param name="extraParams">额外参数</param>
            <param name="absoluteAddress">The absolute address.</param>
            <returns>分页Html</returns>
            时间：2016-01-05 11:23
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.Core.SessionManager">
            <summary>
            Session 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.SessionManager.Add``1(System.String,``0)">
            <summary>
            添加Session
            默认过期时间
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.SessionManager.Add``1(System.String,``0,System.Int32)">
            <summary>
            添加Session
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="iExpires">过期时间(分钟)</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.SessionManager.AddOrUpdate``1(System.String,``0,System.Func{System.String,``0,``0})">
            <summary>
            如果该键尚不存在，则使用指定函数将键/值对添加到 Session；如果该键已存在，则使用该函数更新 Session 中的键/值对。
            </summary>
            <typeparam name="TValue">泛型，数值类型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="updateHanlder">更新委托</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.SessionManager.AddOrUpdate``1(System.String,``0,System.Action{``0},System.Func{System.String,``0,``0})">
            <summary>
            如果该键尚不存在，则使用指定函数将键/值对添加到 Session；如果该键已存在，则使用该函数更新 Session 中的键/值对。
            </summary>
            <typeparam name="TValue">泛型，数值类型.</typeparam>
            <param name="key">键.</param>
            <param name="value">值.</param>
            <param name="addHanlder">新增委托</param>
            <param name="updateHanlder">更新委托</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.SessionManager.AddOrUpdate``1(System.String,System.Func{System.String,``0},System.Func{System.String,``0,``0})">
            <summary>
            如果该键尚不存在，则使用指定函数将键/值对添加到 Session；如果该键已存在，则使用该函数更新 Session 中的键/值对。
            </summary>
            <typeparam name="TValue">泛型</typeparam>
            <param name="key">键</param>
            <param name="addHanlder">新增委托</param>
            <param name="updateHanlder">修改委托</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.SessionManager.Clear">
            <summary>
            清除所有Session
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.SessionManager.Get``1(System.String)">
            <summary>
            获取Session
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="key">键</param>
            <returns>数值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.SessionManager.IsExisting(System.String)">
            <summary>
            是否存在此Session
            </summary>
            <param name="key">The key.</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.SessionManager.Remove(System.String)">
            <summary>
            删除Session
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.Core.SessionManager.Update``1(System.String,System.Func{System.String,``0,``0})">
            <summary>
             如果该键尚不存在，则使用指定函数将键/值对添加到 Session；如果该键已存在，则使用该函数更新 Session 中的键/值对。
            </summary>
            <typeparam name="TValue">泛型</typeparam>
            <param name="key">键</param>
            <param name="updateHanlder">修改委托</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.DropDownListHelper">
            <summary>
            DropDownList 帮助类
            </summary>
            时间：2015-10-30 8:58
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.DropDownListHelper.SetDataSource(System.Web.UI.WebControls.DropDownList,System.Object,System.String,System.String)">
            <summary>
            数据绑定
            </summary>
            <param name="dropdownList">DropDownList</param>
            <param name="dataSource">绑定数据集合对象</param>
            <param name="textField">显示绑定字段</param>
            <param name="valueField">隐示绑定字段</param>
            时间：2015-10-30 9:01
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.FileDownHelper">
            <summary>
            文件下载
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.FileDownHelper.ResponseFile(System.String,System.String,System.Int64)">
            <summary>
             输出硬盘文件，提供下载 支持大文件、续传、速度限制、资源占用小
            </summary>
            <param name="fileName">下载文件名</param>
            <param name="filePhysicsPath">带文件名下载路径</param>
            <param name="limitSpeed">每秒允许下载的字节数</param>
            <returns>返回是否成功</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.FileDownHelper.ResponseFile(System.String,System.String)">
            <summary>
            分块下载
            </summary>
            <param name="fileName">下载文件名</param>
            <param name="filePhysicsPath">文件物理路径</param>
            <returns>下载是否成功</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.FileHelper">
            <summary>
            WebForm 文件帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.FileHelper.GetMapPathFile(System.String)">
            <summary>
            获取物理地址
            </summary>
            <param name="fileVirtualPath">文件虚拟路径</param>
            <returns>物理路径</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.GridViewHelper">
            <summary>
             GridView 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.GridViewHelper.InitializeColumnOrderBy(System.Web.UI.WebControls.GridView,System.String,YanZhiwei.DotNet2.Utilities.Enums.OrderWay)">
            <summary>
            点击列头排序初始设定
            </summary>
            <param name="gridView">GridView</param>
            <param name="orderColumnName">排序依定的绑定数据列名</param>
            <param name="defaultOrderWay">排序方式，降序或升序</param>
            时间：2015-11-02 17:21
            备注：在Page_Load方法中使用；
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.GridViewHelper.SetColumnOrderBy(System.Web.UI.WebControls.GridView,System.Action{System.Web.UI.WebControls.GridView,System.String,YanZhiwei.DotNet2.Utilities.Enums.OrderWay})">
            <summary>
            点击列头排序设定
            </summary>
            <param name="gridView">GridView</param>
            <param name="finallyDataBindFactory">最后数据绑定委托</param>
            时间：2015-11-02 17:21
            备注：在OnInit事件中使用；
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.GridViewHelper.SetDataSource(System.Web.UI.WebControls.GridView,System.Object)">
            <summary>
            GridView数据绑定
            </summary>
            <param name="gridView">GridView</param>
            <param name="datasource">需要绑定数据源</param>
            时间：2015-11-02 13:41
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.GridViewHelper.SetOwnDataPager(System.Web.UI.WebControls.GridView,System.Int32,System.Web.UI.WebControls.PagerButtons,System.Action{System.Web.UI.WebControls.GridView})">
            <summary>
            设置数据自带分页
            </summary>
            <param name="gridview">GridView</param>
            <param name="pageSize">分页时每页大小</param>
            <param name="pagerStyle">自带分页样式</param>
            <param name="finallyDataBindFactory">最后数据绑定委托</param>
            时间：2015-11-02 14:51
            备注：在OnInit事件中使用；
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.GridViewHelper.SetPagerTemplate(System.Web.UI.WebControls.GridView,System.Action{System.Web.UI.WebControls.GridView})">
            <summary>
            定制化分页模板
            </summary>
            <param name="gridView">GridView</param>
            <param name="finallyDataBindFactory">最后数据绑定委托</param>
            时间：2015-11-02 15:57
            备注：在OnInit事件中使用；
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.GridViewHelper.ToDataTable(System.Web.UI.WebControls.GridView)">
            <summary>
            从GridView的数据生成DataTable
            </summary>
            <param name="gridview">GridView对象</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.GridViewHelper.ToExcel(System.Web.UI.WebControls.GridView,System.String)">
            <summary>
            将GridView导出到EXCEL
            </summary>
            <param name="gridview">GridView</param>
            <param name="fileName">导出到的文件名称</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.GridViewHelper.GetCellText(System.Web.UI.WebControls.TableCell)">
            <summary>
            获取单元格内容
            </summary>
            <param name="cell">TableCell</param>
            <returns>内容</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.GridViewHelper.SetCellText(System.Web.UI.WebControls.TableCell,System.Int32)">
            <summary>
            设置单元格内容
            </summary>
            <param name="cell">TableCell</param>
            <param name="maxLen">最大长度</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.ClientScriptHelper">
            <summary>
            JavaScript 操作类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.ClientScriptHelper.Alert(System.String)">
            <summary>
            JS弹出对消息话框
            </summary>
            <param name="message">要显示的消息</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.ClientScriptHelper.AlertAndRedirect(System.String,System.String)">
            <summary>
            JS弹出消息并跳转
            </summary>
            <param name="message">消息</param>
            <param name="url">跳转的连接</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.ClientScriptHelper.JumpToSpecifiedUrl(System.String)">
            <summary>
            JS跳转指定URL
            </summary>
            <param name="url">要转到的URL</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.ClientScriptHelper.Refresh">
            <summary>
            JS刷新页面
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.ClientScriptHelper.RegisterScript(System.String)">
            <summary>
            向客户端写入js脚本
            </summary>
            <param name="script">js内容</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.HtmlInputFileHelper">
            <summary>
            HtmlInputFile 帮助类
            </summary>
            时间：2016-01-04 16:57
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.HtmlInputFileHelper.GetBytes(System.Web.UI.HtmlControls.HtmlInputFile)">
            <summary>
            将文件读取成byte数组
            </summary>
            <param name="htmlInputFile">HtmlInputFile</param>
            <returns>若未有文件，则返回NULL；</returns>
            时间：2016-01-04 17:07
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.HyperlinkHelper">
            <summary>
            超链接帮助类
            </summary>
            时间：2016-03-04 10:27
            备注：
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.WebForm.HyperlinkHelper.CurrentUrl">
            <summary>
            获取当前页面的Url
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.HyperlinkHelper.AddParameter(System.String,System.String,System.String)">
            <summary>
            添加超链接参数
            </summary>
            <param name="url">超链接</param>
            <param name="paramName">参数键</param>
            <param name="value">参数值</param>
            <returns>新的连接</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.HyperlinkHelper.Get(System.String)">
            <summary>
            获取Url后面的值
            </summary>
            <param name="name">参数</param>
            <returns>参数数值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.HyperlinkHelper.GetQueryId(System.String)">
            <summary>
            获取Url后面的值，如.....aspx?productid=2将获取到"2"
            </summary>
            <param name="name">参数</param>
            <returns>参数数值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.HyperlinkHelper.UpdateParameter(System.String,System.String,System.String)">
            <summary>
            更新超链接参数
            </summary>
            <param name="url">链接</param>
            <param name="paramName">参数键</param>
            <param name="value">参数值</param>
            <returns>更新后的链接</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.LinkButtonHelper">
            <summary>
            LinkButton 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.LinkButtonHelper.Confirm(System.Web.UI.WebControls.LinkButton,System.String)">
            <summary>
            为LinkButton添加确认窗口
            </summary>
            <param name="linkbutton">LinkButton</param>
            <param name="message">确认窗口文字信息</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.ListBoxHelper">
            <summary>
            ListBox 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.ListBoxHelper.AddItemTooltip(System.Web.UI.WebControls.ListBox)">
            <summary>
            增加ListBox的Tooltip提示
            </summary>
            <param name="lb">ListBox</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.NetWorkHelper">
            <summary>
            NetWork 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.NetWorkHelper.GetLocalIP4">
            <summary>
            获取本地ip4地址
            </summary>
            <returns>ip4地址</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.NetWorkHelper.GetVisitorIp4(System.Web.HttpRequest)">
            <summary>
            获取访客ip4地址
            </summary>
            <param name="request">HttpRequest</param>
            <returns>ip地址</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.WebFormHelper">
            <summary>
            WebForm 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.WebFormHelper.FindControlRecursive(System.Web.UI.Control,System.String)">
            <summary>
            根据ID递归查找
            </summary>
            <param name="control">Control</param>
            <param name="id">控件ID</param>
            <returns>查找到的控件</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.WebFormHelper.GetQueryString(System.String)">
            <summary>
            根据Key获取QueryString
            </summary>
            <param name="key">键值</param>
            <returns>数值</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.WebFormHelper.RestartWebApplication">
            <summary>
            重启程序
            </summary>
            <returns>重启是否成功</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WebForm.FetchHelper">
            <summary>
            URL 帮助类
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.WebForm.FetchHelper.ServerDomain">
            <summary>
            获取当前页面的主域，如www.GMS.com主域是GMS.com
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.WebForm.FetchHelper.UserIp">
            <summary>
            获取访问用户的IP
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.FetchHelper.GetRootPath">
            <summary>
            取得网站根目录的物理路径
            </summary>
            <returns>网站根目录的物理路径</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.FetchHelper.GetRootURI">
            <summary>
            取得网站的根目录的URL
            </summary>
            <returns>网站的根目录的URL</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.FetchHelper.GetRootURI(System.Web.HttpRequest)">
            <summary>
            取得网站的根目录的URL
            </summary>
            <param name="reguest">HttpRequest</param>
            <returns>网站的根目录的URL</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WebForm.FetchHelper.Post(System.String)">
            <summary>
            获取表单Post过来的值
            </summary>
            <param name="name">参数</param>
            <returns>参数数值</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.Resource">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.Filter_GroupOperateError">
            <summary>
              查找类似 查询条件组中的操作类型错误，只能为And或者Or。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.Filter_RuleFieldInTypeNotFound">
            <summary>
              查找类似 指定的属性“{0}”在类型“{1}”中不存在。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.Logging_CreateLogInstanceReturnNull">
            <summary>
              查找类似 创建名称为“{0}”的日志实例时“{1}”返回空实例。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.Mef_HttpContextItems_NotFoundRequestContainer">
            <summary>
              查找类似 当前Http上下文中不存在Request有效范围的Mef部件容器。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ObjectExtensions_PropertyNameNotExistsInType">
            <summary>
              查找类似 指定对象中不存在名称为“{0}”的属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ObjectExtensions_PropertyNameNotFixedType">
            <summary>
              查找类似 指定名称“{0}”的属性类型不是“{1}”。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_Between">
            <summary>
              查找类似 参数“{0}”的值必须在“{1}”与“{2}”之间。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_BetweenNotEqual">
            <summary>
              查找类似 参数“{0}”的值必须在“{1}”与“{2}”之间，且不能等于“{3}”。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_DirectoryNotExists">
            <summary>
              查找类似 指定的目录路径“{0}”不存在。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_FileNotExists">
            <summary>
              查找类似 指定的文件路径“{0}”不存在。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_Ip4Address">
            <summary>
              查找类似 参数“{0}”的值不是合法IP4地址。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_Match">
            <summary>
              查找类似 参数“{0}”不能匹配&quot;{1}&quot;格式。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_Match2">
            <summary>
              查找类似 参数“{0}”格式不合法。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_NotEmpty_Guid">
            <summary>
              查找类似 参数“{0}”的值不能为Guid.Empty 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_NotEqual">
            <summary>
              查找类似 参数“{0}”不能等于&quot;{1}&quot;。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_NotGreaterThan">
            <summary>
              查找类似 参数“{0}”的值必须大于“{1}”。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_NotGreaterThanOrEqual">
            <summary>
              查找类似 参数“{0}”的值必须大于或等于“{1}”。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_NotLessThan">
            <summary>
              查找类似 参数“{0}”的值必须小于“{1}”。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_NotLessThanOrEqual">
            <summary>
              查找类似 参数“{0}”的值必须小于或等于“{1}”。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_NotNull">
            <summary>
              查找类似 参数“{0}”不能为空引用。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_NotNullOrEmpty_Collection">
            <summary>
              查找类似 参数“{0}”不能为空引用或空集合。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_NotNullOrEmpty_String">
            <summary>
              查找类似 参数“{0}”不能为空引用或空字符串。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_Port">
            <summary>
              查找类似 参数“{0}”的值不是合法端口。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_StringLength">
            <summary>
              查找类似 参数“{0}”长度需为&quot;{1}&quot;个长度。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.ParameterCheck_Url">
            <summary>
              查找类似 参数“{0}”的值不是合法URL。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.Security_DES_KeyLenght">
            <summary>
              查找类似 参数key的长度必须为8或24，当前为{0}。 的本地化字符串。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.Resource.Security_RSA_Sign_HashType">
            <summary>
              查找类似 参数hashType必须为MD5或SHA1 的本地化字符串。
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.ApplicationHelper">
            <summary>
            Application 帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.WinForm.ApplicationHelper.singleton">
            <summary>
            Mutex 对象
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ApplicationHelper.ApplyOnlyOneInstance(System.Action{System.Boolean})">
            <summary>
            设置程序唯一实例运行.
            </summary>
            <param name="oneInstanceHanlder">委托，参数：是否是唯一实例</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ApplicationHelper.CapturedException(System.Action{System.Exception,YanZhiwei.DotNet2.Utilities.Enums.ExceptionMode})">
            <summary>
            捕获异常
            <para>在应用程序的主入口点Main方法使用</para>
            </summary>
            <param name="capturedHanlder">The captured hanlder.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ApplicationHelper.CapturedExit``1(System.Windows.Forms.Form,System.Func{System.Boolean})">
            <summary>
            捕获退出
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="mainForm">主窗口</param>
            <param name="closingHanlder">窗体正在关闭事件</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ApplicationHelper.GetExecuteDirectory">
            <summary>
            获取exe执行文件夹路径
            </summary>
            <returns>exe执行文件夹路径</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ApplicationHelper.ToFullScreen(System.Windows.Forms.Form)">
            <summary>
            全屏
            </summary>
            <param name="form">Form</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ApplicationHelper.ToFullScreen(System.Windows.Forms.Form,System.Int32)">
            <summary>
            全屏
            </summary>
            <param name="form">Form</param>
            <param name="screen">0：主屏;1,2分屏</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.AutoSizeFormHelper">
             <summary>
             窗体控件自适应大小
            <para>eg:</para>
            <para> private void FormMain_SizeChanged(object sender, EventArgs e)</para>
            <para>{</para>
            <para>  As.controlAutoSize(this);</para>
            <para>}</para>
             </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.WinForm.AutoSizeFormHelper.oldCtrl">
            <summary>
            记录的始终是当前的大小
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.AutoSizeFormHelper.ControlAutoSize(System.Windows.Forms.Control)">
            <summary>
            控件自适应大小
            </summary>
            <param name="form">Control</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.AutoSizeFormHelper.ControllInitializeSize(System.Windows.Forms.Control)">
            <summary>
            记录窗体和其控件的初始位置和大小,
            </summary>
            <param name="form">Control</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.ConsoleApplicationHelper">
            <summary>
            控制台应用程序辅助类
            </summary>
            时间：2016-05-23 11:03
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ConsoleApplicationHelper.DetectKeyPress(System.Action{System.String})">
            <summary>
            监听控制台输入
            </summary>
            <param name="inputFactory">委托，参数：输入字符串</param>
            时间：2016-05-23 11:05
            备注：
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.WinForm.ConsoleApplicationHelper.CTRL_CLOSE_EVENT">
            <summary>
            当用户关闭Console时，系统会发送次消息
            </summary>
            时间：2016-05-23 11:13
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.ConsoleApplicationHelper.ConsoleCtrlHanlder">
            <summary>
            控制台控制委托
            </summary>
            <param name="dwCtrlType">Type of the dw control.</param>
            <returns></returns>
            时间：2016-05-23 11:13
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ConsoleApplicationHelper.DetectShutdown(System.Action)">
            <summary>
            监听用户关闭控制台应用程序
            </summary>
            <param name="shutDownConsoleFactory">委托</param>
            时间：2016-05-23 13:09
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.Core.MessageBoxTimeOut">
            <summary>
            Messagebox自动定时关闭
            </summary>
            日期：2015-10-21 16:01
            备注：
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.WinForm.Core.MessageBoxTimeOut.WM_CLOSE">
            <summary>
            The w m_ close
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.Core.MessageBoxTimeOut.PostMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Posts the message.
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="msg">The MSG.</param>
            <param name="wParam">The w parameter.</param>
            <param name="lParam">The l parameter.</param>
            <returns>int</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.Core.MessageBoxTimeOut.Show(System.String,System.String)">
            <summary>
            弹出消息框_默认三秒后关闭
            </summary>
            <param name="text">消息框中显示的文本</param>
            <param name="caption">标题文本</param>
            日期：2015-10-21 16:02
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.Core.MessageBoxTimeOut.Show(System.Int32,System.String,System.String)">
            <summary>
            弹出消息框
            </summary>
            <param name="timeout">自动关闭时间_毫秒</param>
            <param name="text">消息框中显示的文本</param>
            <param name="caption">标题文本</param>
            日期：2015-10-21 16:04
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.Core.MessageBoxTimeOut.Show(System.Int32,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            弹出消息框
            </summary>
            <param name="timeout">自动关闭时间_毫秒</param>
            <param name="text">消息框中显示的文本</param>
            <param name="caption">标题文本</param>
            <param name="buttons">MessageBoxButtons</param>
            <param name="icon">MessageBoxIcon</param>
            日期：2015-10-21 16:05
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.Core.TreeViewSerializer">
            <summary>
            TreeView 序列化与反序列化
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.Core.TreeViewSerializer.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="path">XML序列化或者反序列化路径;eg:string.Format(@"{0}\Config\CtuPtuTreeView.xml", Application.StartupPath)</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.Core.TreeViewSerializer.DeserializeTreeView(System.Windows.Forms.TreeView)">
            <summary>
            反序列化TreeView
            </summary>
            <param name="treeView">TreeView</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.Core.TreeViewSerializer.LoadXmlFileInTreeView(System.Windows.Forms.TreeView,System.String)">
            <summary>
            将XML文件配置节点信息映射到TreeView
            </summary>
            <param name="treeView">TreeView</param>
            <param name="fileName">XML路径</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.Core.TreeViewSerializer.SerializeTreeView(System.Windows.Forms.TreeView)">
            <summary>
            序列化TreeView
            </summary>
            <param name="treeView">TreeView</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.Core.TreeViewSerializer.SaveNodes(System.Windows.Forms.TreeNodeCollection,System.Xml.XmlTextWriter)">
            <summary>
            保存节点
            </summary>
            <param name="nodesCollection">TreeNodeCollection</param>
            <param name="textWriter">XmlTextWriter</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.Core.TreeViewSerializer.SetAttributeValue(System.Windows.Forms.TreeNode,System.String,System.String)">
            <summary>
            反序列化TreeView时候，设置节点属性
            </summary>
            <param name="node">TreeNode</param>
            <param name="propertyName">属性名称</param>
            <param name="value">属性数值</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.Core.CheckBoxClickedHandler">
            <summary>
            委托
            </summary>
            <param name="state"></param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.Core.DatagridViewCheckBoxHeaderCell">
            <summary>
            勾选列
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.Core.DatagridViewCheckBoxHeaderCell.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="E:YanZhiwei.DotNet2.Utilities.WinForm.Core.DatagridViewCheckBoxHeaderCell.OnCheckBoxClicked">
            <summary>
            勾选事件
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.Core.DatagridViewCheckBoxHeaderCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            <summary>
            Raises the <see cref="E:MouseClick" /> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.Core.DatagridViewCheckBoxHeaderCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            <summary>
            Paints the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="clipBounds">The clip bounds.</param>
            <param name="cellBounds">The cell bounds.</param>
            <param name="rowIndex">Index of the row.</param>
            <param name="dataGridViewElementState">State of the data grid view element.</param>
            <param name="value">The value.</param>
            <param name="formattedValue">The formatted value.</param>
            <param name="errorText">The error text.</param>
            <param name="cellStyle">The cell style.</param>
            <param name="advancedBorderStyle">The advanced border style.</param>
            <param name="paintParts">The paint parts.</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.BindingSourceHelper">
            <summary>
            BindingSource 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.BindingSourceHelper.Find``1(System.Windows.Forms.BindingSource,System.Predicate{``0})">
            <summary>
             从BindingSource中条件查找
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="dbSource">BindingSource</param>
            <param name="match">委托</param>
            <returns>没有查找到则返回NULL</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.BindingSourceHelper.FindAll``1(System.Windows.Forms.BindingSource,System.Predicate{``0})">
            <summary>
             从BindingSource中条件查找集合
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="dbSource">BindingSource</param>
            <param name="match">委托</param>
            <returns>没有查找到则返回NULL</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.BindingSourceHelper.GetBindingSource(System.Windows.Forms.Control)">
            <summary>
            获取Control的BindingSource
            </summary>
            <param name="control">Control</param>
            <returns>BindingSource</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.BindingSourceHelper.Remove``1(System.Windows.Forms.BindingSource,System.Predicate{``0})">
            <summary>
            从BindingSource中条件移出
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="dbSource">BindingSource</param>
            <param name="match">委托</param>
            <returns>条件移出个数</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.CheckBoxHelper">
            <summary>
             CheckBox 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.CheckBoxHelper.TranCheckState(System.Func{System.Windows.Forms.CheckState,System.String},System.Windows.Forms.CheckBox[])">
            <summary>
            转译checkbox的状态
            </summary>
            <param name="checkStateFactory">委托</param>
            <param name="checks">CheckBox</param>
            <returns>转译后的checkbox的状态</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.CheckedListBoxHelper">
            <summary>
            CheckedList 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.CheckedListBoxHelper.GetCheckedItemList``1(System.Windows.Forms.CheckedListBox)">
            <summary>
            获取选中项集合
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="checkedListBox">CheckedListBox</param>
            <returns>选中项集合</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.CheckedListBoxHelper.SetAllItemState(System.Windows.Forms.CheckedListBox,System.Boolean)">
            <summary>
            设置项勾选状态
            </summary>
            <param name="checkedListBox">CheckedListBox</param>
            <param name="state">是否勾选</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.CheckedListBoxHelper.SetDataSource(System.Windows.Forms.CheckedListBox,System.Object,System.String,System.String)">
            <summary>
            CheckedListBox 数据绑定
            </summary>
            <param name="checkedListBox">CheckedListBox</param>
            <param name="dataSource">绑定数据源</param>
            <param name="valueMember">隐式字段</param>
            <param name="displayMember">显示字段</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.ComboBoxHelper">
            <summary>
            ComboBox 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ComboBoxHelper.SetDataSource``1(System.Windows.Forms.ComboBox,System.Collections.Generic.List{``0},System.String,System.String,System.String)">
            <summary>
            为ComboBox绑定数据源并提供下拉提示
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="combox">ComboBox</param>
            <param name="list">数据源</param>
            <param name="displayMember">显示字段</param>
            <param name="valueMember">隐式字段</param>
            <param name="displayText">下拉提示文字</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.ControlHelper">
             <summary>
            Control帮助类
             </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ControlHelper.AddControl``2(``0,``1)">
            <summary>
            向容器控件中添加控件
            </summary>
            <typeparam name="C">泛型</typeparam>
            <typeparam name="T">泛型</typeparam>
            <param name="c">容器控件</param>
            <param name="t">添加控件</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ControlHelper.Cast``1(System.Windows.Forms.Control,System.Boolean@)">
            <summary>
            将Control转换某种控件类型
            </summary>
            <typeparam name="T">控件类型</typeparam>
            <param name="control">Control</param>
            <param name="result">转换结果</param>
            <returns>若成功则返回控件；若失败则返回NULL</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ControlHelper.DownRecursiveFindControl``1(System.Windows.Forms.Control,System.String)">
            <summary>
            向下递归查找控件
            </summary>
            <param name="parentControl">查找控件的父容器控件</param>
            <param name="findCtrlName">查找控件名称</param>
            <returns>若没有查找到返回NULL</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ControlHelper.RemoveEvent(System.Windows.Forms.Control,System.String)">
            <summary>
            移除控件某个事件
            </summary>
            <param name="control">控件</param>
            <param name="eventName">需要移除的控件名称eg:EventClick</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.DataGridCRUDHelper">
            <summary>
            DataGrid的添加，删除，修改，查询帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridCRUDHelper.AddObject``1(System.Windows.Forms.DataGridView,``0)">
            <summary>
            为DataGridView添加行
            仅仅适用DataGridCRUDHelper类下操作
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="gridView">DataGridView</param>
            <param name="model">是否添加成功</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridCRUDHelper.AddObject``1(System.Windows.Forms.DataGridView,System.Collections.Generic.List{``0})">
            <summary>
             为DataGridView添加行
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="gridView">DataGridView</param>
            <param name="list">集合</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridCRUDHelper.Exist``1(System.Windows.Forms.DataGridView,System.String,System.Object)">
            <summary>
            判断某列等于某个值是否存在
            </summary>
            <param name="gridView">DataGridView</param>
            <param name="columnName">列名称</param>
            <param name="key">列值</param>
            <returns>存在返回True;不存在返回FASLE</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridCRUDHelper.Filter``1(System.Windows.Forms.DataGridView,System.String)">
             <summary>
             数据筛选
            <para>eg:dataGridView1.Filter("Age = 18");</para>
             </summary>
             <typeparam name="T">泛型</typeparam>
             <param name="gridView">DataGridView</param>
             <param name="filter">筛选条件</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridCRUDHelper.Find``1(System.Windows.Forms.DataGridView,System.String,System.Object)">
            <summary>
            根据字段名称以及值查找对应的实体类
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="gridView">DataGridView</param>
            <param name="columnName">列名称</param>
            <param name="key">列值</param>
            <returns>没有查到返回NULL</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridCRUDHelper.Find``1(System.Windows.Forms.DataGridView,System.Predicate{``0})">
            <summary>
            条件查找实体类
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="gridView">DataGridView</param>
            <param name="match">Predicate</param>
            <returns>没有查到返回NULL</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridCRUDHelper.FindAll``1(System.Windows.Forms.DataGridView,System.Predicate{``0})">
            <summary>
            查找所有合法条件的数据集合
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="gridView">DataGridView</param>
            <param name="match">Predicate为何</param>
            <returns>返回符合数据;没有合法的返回NULL</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridCRUDHelper.RemoveObject``1(System.Windows.Forms.DataGridView)">
            <summary>
            清除DataGridView所有的行
            仅仅适用DataGridCRUDHelper类下操作
            </summary>
            <param name="gridView">DataGridView</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridCRUDHelper.RemoveObject``1(System.Windows.Forms.DataGridView,``0)">
            <summary>
            移出数据项
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="gridView">gridView</param>
            <param name="t">实体类</param>
            <returns>移出是否成功</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridCRUDHelper.RemoveObject``1(System.Windows.Forms.DataGridView,System.Predicate{``0})">
            <summary>
            移出数据项
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="gridView">gridView</param>
            <param name="match">条件委托</param>
            <returns>移出行数</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridCRUDHelper.ToBindList``1(System.Windows.Forms.DataGridView)">
            <summary>
            将绑定的数据源转换成IList
            仅仅适用DataGridCRUDToolV2Plus类下操作
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="gridView">DataGridView</param>
            <returns>IList</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridCRUDHelper.Where``1(System.Windows.Forms.DataGridView,System.Predicate{``0})">
            <summary>
            获取符合条件的数据条数
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="gridView">DataGridView</param>
            <param name="match">Predicate委托</param>
            <returns>返回符合项目;</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.DataGridHelper">
            <summary>
            DataGrid 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridHelper.ApplyDateTimePicker(System.Windows.Forms.DataGridView,System.Windows.Forms.DateTimePicker,System.Int32)">
            <summary>
             将DateTimePicker应用到列编辑时候
            </summary>
            <param name="dataGrid">DataGridView</param>
            <param name="datePicker">DateTimePicker</param>
            <param name="columnIndex">应用编辑列索引</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridHelper.ApplyHeaderCheckbox(System.Windows.Forms.DataGridView,System.Int32,System.String)">
            <summary>
            添加checkbox 列头
            </summary>
            <param name="dataGrid">DataGridView</param>
            <param name="columnIndex">列索引</param>
            <param name="headerText">列名称</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridHelper.AutoCellWidth(System.Windows.Forms.DataGridView)">
             <summary>
            根据cell内容调整其宽度
             </summary>
             <param name="girdview">DataGridView</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridHelper.DrawSequenceNumber(System.Windows.Forms.DataGridView)">
            <summary>
             绘制行号
            </summary>
            <param name="dataGrid">DataGridView</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridHelper.DynamicBind``1(System.Windows.Forms.DataGridView,System.Collections.Generic.IList{``0})">
            <summary>
            DataGridView绑定
            </summary>
            <typeparam name="T">实体类</typeparam>
            <param name="dataGrid">DataGridView对象</param>
            <param name="source">数据源</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.DataGridHelper.SelectedRow(System.Windows.Forms.DataGridView)">
            <summary>
            获取选中行
            </summary>
            <param name="dataGrid">DataGridView对象</param>
            <returns>若未有选中行则返回NULL</returns>
            时间：2015-12-09 17:07
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.ExtendedResource">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.ExtendedResource.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.ExtendedResource.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.ExtendedResource.Loading">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm">
            <summary>
            模态提示框
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm"/> class.
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm.CloseForm">
            <summary>
            Closes the form.
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm.DoRefreshWork(System.String,System.String)">
            <summary>
            Does the refresh work.
            </summary>
            <param name="caption">The caption.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm.DoRefreshWork(System.String)">
            <summary>
            Does the refresh work.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm.Refresh(System.String,System.String)">
            <summary>
            Refreshes the specified caption.
            </summary>
            <param name="caption">The caption.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm.Refresh(System.String)">
            <summary>
            Refreshes the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm.ShowSplashScreen">
            <summary>
            Shows the splash screen.
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm.ShowSplashScreen(System.String,System.String)">
            <summary>
            Shows the splash screen.
            </summary>
            <param name="caption">The caption.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm.DoCloseFormWork">
            <summary>
            Does the close form work.
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm.Main(System.String[])">
            <summary>
            Mains the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm.ShowForm">
            <summary>
            Shows the form.
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm.ShowForm(System.Object)">
            <summary>
            Shows the form.
            </summary>
            <param name="tipMessage">The tip message.</param>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ExtendedForm.SplashForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.FormHelper">
            <summary>
            涉及窗体的帮助类
            </summary>
            日期：2015-10-12 10:15
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.FormHelper.CloseLoginForm``1(``0)">
            <summary>
            关闭登陆窗口，有别于hide方式，是直接close方式；
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="loginForm">登陆窗口</param>
            日期：2015-10-12 10:04
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.FormHelper.ShowDialogForm``1">
            <summary>
            弹出模式对话框
            </summary>
            <typeparam name="T"></typeparam>
            日期：2015-10-12 10:15
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.FormHelper.ShowDialogForm``1(System.Action{``0})">
            <summary>
            弹出模式对话框
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="dialogFormFactory">委托</param>
            日期：2015-10-12 10:14
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.FormHelper.ShowLoginForm``2">
            <summary>
            设置应用登陆界面
            </summary>
            <typeparam name="T">泛型</typeparam>
            <typeparam name="U">泛型</typeparam>
            日期：2015-10-12 9:56
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.FormHelper.ShowLoginForm``2(System.Action{``1})">
            <summary>
            设置应用登陆界面
            </summary>
            <typeparam name="T">泛型</typeparam>
            <typeparam name="U">泛型</typeparam>
            <param name="mainFormFactory">委托，参数主界面对象</param>
            日期：2015-10-12 9:55
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.LanguageHelper">
            <summary>
            WinForm语言国际化帮助类
            </summary>
            时间：2015-09-02 16:45
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.LanguageHelper.SetGlobalization``1(``0,System.String)">
            <summary>
            设置界面国际化
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="form">需要国际化的界面</param>
            <param name="lang">language:zh-CN, en-US</param>
            时间：2015-09-02 16:44
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.OpenFolderDialogHelper">
            <summary>
            选择文件夹帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.OpenFolderDialogHelper.GetFolderName(System.String,System.Boolean,System.Environment.SpecialFolder)">
            <summary>
            获取选中文件夹
            </summary>
            <param name="description">说明文本.</param>
            <param name="showNewFolderButton">是否显示新建文件夹按钮</param>
            <param name="rootFolder">设置浏览的根文件夹</param>
            <returns>选中的文件夹</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.OpenFolderDialogHelper.GetFolderName(System.String)">
            <summary>
            获取选中文件夹
            </summary>
            <param name="description">说明文本.</param>
            <returns>选中文件夹</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.OpenFolderDialogHelper.GetFolderName">
            <summary>
            获取选中文件夹
            </summary>
            <returns>选中文件夹</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.ListBoxHelper">
            <summary>
            ListBox 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ListBoxHelper.ItemMoveDown(System.Windows.Forms.ListBox)">
            <summary>
            ITEM下移动，适合不是datasource绑定情况
            </summary>
            <param name="lsbox">ListBox</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ListBoxHelper.ItemMoveUp(System.Windows.Forms.ListBox)">
            <summary>
            ITEM上移动，适合不是datasource绑定情况
            </summary>
            <param name="lsbox">ListBox</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.MdiFormHelper">
            <summary>
            MDI 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.MdiFormHelper.CheckMDIChildrenFormExist(System.Windows.Forms.Form,System.String)">
            <summary>
            MDI子窗口是否已经弹出存在
            <para>eg:MdiFormHelper.CheckMDIChildrenFormExist(this, "Form2")</para>
            </summary>
            <param name="parentForm">MDI容器窗口</param>
            <param name="formName">>MDI子窗口名称</param>
            <returns>是否已经弹出存在</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.MdiFormHelper.ShowMDIChildrenForm``1(System.Windows.Forms.Form,System.String)">
            <summary>
            MDI窗口弹出
            <para>eg:MdiFormHelper.ShowMDIChildrenForm(this, "Form2");</para>
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="parentForm">MDI容器窗口</param>
            <param name="formName">MDI子窗口名称</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.MenuStripHelper">
            <summary>
            MenuStrip 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.MenuStripHelper.RecursiveMenuItem(System.Windows.Forms.MenuStrip,System.Action{System.Windows.Forms.ToolStripMenuItem})">
            <summary>
            遍历MenuStrip控件
            </summary>
            <param name="menu">MenuStrip</param>
            <param name="forMenuFactory">遍历的时候动作『委托』</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.MenuStripHelper.RecursiveDropDownItems(System.Windows.Forms.ToolStripMenuItem,System.Action{System.Windows.Forms.ToolStripMenuItem})">
            <summary>
            递归遍历
            </summary>
            <param name="menu">MenuStrip</param>
            <param name="forMenuFactory">遍历的时候动作『委托』</param>
            日期：2015-10-13 13:31
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.MessageHelper">
            <summary>
            Message 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.MessageHelper.ShowError(System.String,System.String)">
            <summary>
            错误信息
            </summary>
            <param name="message">The message.</param>
            <param name="caption">The caption.</param>
            <returns>DialogResult</returns>
            日期：2015-10-13 13:33
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.MessageHelper.ShowError(System.String)">
            <summary>
            错误信息
            </summary>
            <param name="message">The message.</param>
            <returns>DialogResult</returns>
            日期：2015-10-13 13:33
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.MessageHelper.ShowInfo(System.String)">
            <summary>
            一般提示信息
            </summary>
            <param name="message">The message.</param>
            <returns>DialogResult</returns>
            日期：2015-10-13 13:33
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.MessageHelper.ShowInfo(System.String,System.String)">
            <summary>
            一般提示信息
            </summary>
            <param name="message">The message.</param>
            <param name="caption">The caption.</param>
            <returns>DialogResult</returns>
            日期：2015-10-13 13:33
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.MessageHelper.ShowWarning(System.String,System.String)">
            <summary>
            警告信息
            </summary>
            <param name="message">The message.</param>
            <param name="caption">The caption.</param>
            <returns>DialogResult</returns>
            日期：2015-10-13 13:33
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.MessageHelper.ShowWarning(System.String)">
            <summary>
            警告信息
            </summary>
            <param name="message">The message.</param>
            <returns>DialogResult</returns>
            日期：2015-10-13 13:33
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.MessageHelper.ShowYesNoAndError(System.String)">
            <summary>
            显示询问用户信息，并显示错误标志
            </summary>
            <param name="message">The message.</param>
            <returns>DialogResult</returns>
            日期：2015-10-13 13:33
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.MessageHelper.ShowYesNoAndTips(System.String)">
            <summary>
            显示询问用户信息，并显示提示标志
            </summary>
            <param name="message">The message.</param>
            <returns>DialogResult</returns>
            日期：2015-10-13 13:33
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.MessageHelper.ShowYesNoAndWarning(System.String)">
            <summary>
            显示询问用户信息，并显示警告标志
            </summary>
            <param name="message">The message.</param>
            <returns>DialogResult</returns>
            日期：2015-10-13 13:34
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.MessageHelper.ShowYesNoCancelAndInfo(System.String)">
            <summary>
            显示询问用户信息，并显示提示标志
            </summary>
            <param name="message">The message.</param>
            <returns>DialogResult</returns>
            日期：2015-10-13 13:34
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.NotepadHelper">
            <summary>
             Notepad 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.NotepadHelper.ShowMessage(System.String,System.String)">
            <summary>
            打开记事本，并往记事本写入内容
            </summary>
            <param name="message">记事本内容</param>
            <param name="title">记事本名称</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.NumericUpDownHelper">
            <summary>
            NumericUpDown 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.NumericUpDownHelper.SetSafeValue(System.Windows.Forms.NumericUpDown,System.Decimal)">
            <summary>
            设置NumericUpDown值前，判断是否大于或者小于其控件本身maxvalue,minValue；
            </summary>
            <param name="numericUpDown">NumericUpDown</param>
            <param name="value">数值</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.OpenFileDialogHelper">
            <summary>
             弹出文件对话框 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.OpenFileDialogHelper.GetFileName(System.String)">
            <summary>
            弹出文件对话框，获取打开的文件名，该重载方法未设置过滤器，显示全部文件。如果未打开文件，则返回""。
            </summary>
            <param name="title">在文件对话框上显示的标题</param>
            <returns>选中文件路径</returns>
            日期：2015-10-13 13:35
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.OpenFileDialogHelper.GetFileName(System.String,System.String)">
            <summary>
            弹出文件对话框，获取打开的文件名。如果未打开文件，则返回"";
            </summary>
            <param name="title">在文件对话框上显示的标题</param>
            <param name="filter">条件过滤，只显示指定后缀的文件名。
            范例1：全部(*.*)|*.*,
            范例2：数据库脚本文件(*.sql)|*.sql|文本文件(*.txt)|*.txt
            </param>
            <returns>选中文件路径</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.OpenFileDialogHelper.GetFileNames(System.String)">
            <summary>
            弹出文件对话框，获取所有打开的文件名，该重载方法未设置过滤器，显示全部文件。如果未打开文件，则返回""。
            </summary>
            <param name="title">在文件对话框上显示的标题</param>
            <returns>选中多个文件路径</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.OpenFileDialogHelper.GetFileNames(System.String,System.String)">
            <summary>
            弹出文件对话框，获取所有打开的文件名。如果未打开文件，则返回"";
            </summary>
            <param name="title">在文件对话框上显示的标题</param>
            <param name="filter">条件过滤，只显示指定后缀的文件名。
            范例1：全部(*.*)|*.*,
            范例2：数据库脚本文件(*.sql)|*.sql|文本文件(*.txt)|*.txt
            </param>
            <returns>选中多个文件路径</returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.ProgressBarHelper">
            <summary>
            ProgressBar 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ProgressBarHelper.Start(System.Windows.Forms.ProgressBar)">
            <summary>
            启动
            </summary>
            <param name="progress">ProgressBar</param>
            时间：2015-09-06 8:55
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.ProgressBarHelper.Stop(System.Windows.Forms.ProgressBar,System.Int32)">
            <summary>
            停止
            </summary>
            <param name="progress">ProgressBar</param>
            <param name="value">停止时候刻度值</param>
            时间：2015-09-06 8:56
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.RichTextBoxHelper">
            <summary>
            RichTextBox 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.RichTextBoxHelper.SetTextFocused(System.Windows.Forms.RichTextBox,System.String,System.String)">
            <summary>
            设置RichTextBox的值，并且设置焦点最最后
            </summary>
            <param name="richText">RichTextBox</param>
            <param name="text">文本内容</param>
            <param name="splitCharacter">分隔符</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.SerialPortHelper">
            <summary>
            串口操作帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.SerialPortHelper.#ctor(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="portName">需要打开串口的名称</param>
            <param name="dateBits">数据位</param>
            <param name="bondRate">波特率</param>
            <param name="parity">效验</param>
            <param name="stopBit">停止位</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.SerialPortHelper.#ctor(System.String,YanZhiwei.DotNet2.Utilities.Enums.SerialPortDatabits,YanZhiwei.DotNet2.Utilities.Enums.SerialPortBaudRates,System.IO.Ports.Parity,System.IO.Ports.StopBits)">
            <summary>
            构造函数
            </summary>
            <param name="portName"></param>
            <param name="dateBits"></param>
            <param name="bondRate"></param>
            <param name="parity"></param>
            <param name="stopBit"></param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.SerialPortHelper.ReceiveDataHanlder">
            <summary>
            串口数据接收委托
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="E:YanZhiwei.DotNet2.Utilities.WinForm.SerialPortHelper.ReceiveDataHanlderEvent">
            <summary>
            串口数据接收事件
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.SerialPortHelper.Close">
            <summary>
            关闭串口
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.SerialPortHelper.Open">
            <summary>
            打开串口
            </summary>
            <returns></returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.SerialPortHelper.Write(System.Byte[])">
            <summary>
            向串口写入数据
            </summary>
            <param name="buffer">需要写入的二进制流</param>
            <returns>组元</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.SerialPortHelper.Comport_DataReceived(System.Object,System.IO.Ports.SerialDataReceivedEventArgs)">
            <summary>
            DataReceived
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.SerialPortHelper.InitSerialPort">
            <summary>
            重新初始化串口对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.TabControlHelper">
            <summary>
            TabControl 帮助类
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.WinForm.TabControlHelper.TabPageList">
            <summary>
            TabPge集合
            </summary>
        </member>
        <member name="F:YanZhiwei.DotNet2.Utilities.WinForm.TabControlHelper.tabControl">
            <summary>
            TabControl对象
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TabControlHelper.#ctor(System.Windows.Forms.TabControl)">
            <summary>
            Initializes a new instance of the <see cref="T:YanZhiwei.DotNet2.Utilities.WinForm.TabControlHelper"/> class.
            </summary>
            <param name="tabControl">The tab control.</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TabControlHelper.Show(System.Windows.Forms.TabPage)">
            <summary>
            显示TabPage
            </summary>
            <param name="tabpage">需要显示的TabPage</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TabControlHelper.Show(System.Predicate{System.Windows.Forms.TabPage})">
            <summary>
             显示TabPage
            </summary>
            <param name="showTabpageHanlder">委托</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TabControlHelper.Show(System.Windows.Forms.TabPage[])">
            <summary>
            显示TabPage
            </summary>
            <param name="tabpage">需要显示的TabPage集合</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.TabPageHelper">
            <summary>
            TabPage 帮助类
            </summary>
            时间：2016-01-12 17:28
            备注：
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TabPageHelper.SetEnabled(System.Windows.Forms.TabPage,System.Boolean)">
            <summary>
            设置Enabled属性
            </summary>
            <param name="tabpage">TabPage</param>
            <param name="enable">if set to <c>true</c> [enable].</param>
            时间：2016-01-12 17:29
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.TextBoxHelper">
            <summary>
            TextBox 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TextBoxHelper.ClearWatermark(System.Windows.Forms.TextBox)">
            <summary>
            清除水印文字
            </summary>
            <param name="textBox">TextBox</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TextBoxHelper.OnlyInputFloat(System.Windows.Forms.TextBox)">
            <summary>
            只能输入正浮点型数字
            </summary>
            <param name="textBox">TextBox</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TextBoxHelper.OnlyInputNumber(System.Windows.Forms.TextBox)">
            <summary>
            只能输入数字
            </summary>
            <param name="textBox">TextBox</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TextBoxHelper.SetWatermark(System.Windows.Forms.TextBox,System.String)">
            <summary>
            为TextBox设置水印文字
            </summary>
            <param name="textBox">TextBox</param>
            <param name="watermark">水印文字</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.TooltipHelper">
            <summary>
            Tooltip 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TooltipHelper.ShowErrorToolTip``1(``0,System.Windows.Forms.ToolTip,System.String,System.String)">
            <summary>
             ToolTip——Error
            </summary>
            <typeparam name="T">Control</typeparam>
            <param name="t">Control</param>
            <param name="tooltip">ToolTip</param>
            <param name="titile">标题</param>
            <param name="content">内容</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TooltipHelper.ShowInfoToolTip``1(``0,System.Windows.Forms.ToolTip,System.String,System.String)">
            <summary>
             ToolTip——Info
            </summary>
            <typeparam name="T">Control</typeparam>
            <param name="t">Control</param>
            <param name="tooltip">ToolTip</param>
            <param name="titile">标题</param>
            <param name="content">内容</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TooltipHelper.ShowNormalToolTip``1(``0,System.Windows.Forms.ToolTip,System.String)">
            <summary>
             ToolTip——Normal
            </summary>
            <typeparam name="T">Control</typeparam>
            <param name="t">Control</param>
            <param name="tooltip">ToolTip</param>
            <param name="content">内容</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TooltipHelper.ShowTooltip(System.Windows.Forms.Control,System.Windows.Forms.ToolTip,System.String)">
            <summary>
            为控件提供Tooltip
            </summary>
            <param name="control">控件</param>
            <param name="tip">ToolTip</param>
            <param name="message">提示消息</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TooltipHelper.ShowTooltip(System.Windows.Forms.Control,System.Windows.Forms.ToolTip,System.String,System.Int32)">
            <summary>
            为控件提供Tooltip
            </summary>
            <param name="control">控件</param>
            <param name="tip">ToolTip</param>
            <param name="message">提示消息</param>
            <param name="durationTime">保持提示的持续时间</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TooltipHelper.ShowTooltip(System.Windows.Forms.Control,System.Windows.Forms.ToolTip,System.String,System.Int32,System.Int32)">
            <summary>
            为控件提供Tooltip
            </summary>
            <param name="control">控件</param>
            <param name="tip">ToolTip</param>
            <param name="message">提示消息</param>
            <param name="xoffset">水平偏移量</param>
            <param name="yoffset">垂直偏移量</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TooltipHelper.ShowTooltip(System.Windows.Forms.Control,System.Windows.Forms.ToolTip,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            为控件提供Tooltip
            </summary>
            <param name="control">控件</param>
            <param name="tip">ToolTip</param>
            <param name="message">提示消息</param>
            <param name="xoffset">水平偏移量</param>
            <param name="yoffset">垂直偏移量</param>
            <param name="durationTime">保持提示的持续时间</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TooltipHelper.ShowWarningToolTip``1(``0,System.Windows.Forms.ToolTip,System.String,System.String)">
            <summary>
             ToolTip——Warning
            </summary>
            <typeparam name="T">Control</typeparam>
            <param name="t">Control</param>
            <param name="tooltip">ToolTip</param>
            <param name="titile">标题</param>
            <param name="content">内容</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.TreeViewHelper">
            <summary>
            TreeView帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TreeViewHelper.ApplyNodeHighLight(System.Windows.Forms.TreeView,System.Drawing.Brush)">
            <summary>
            选中节点高亮
            <para>eg: treeView1.ApplyNodeHighLight(Color.Red);</para>
            </summary>
            <param name="treeView">TreeView</param>
            <param name="highLightColor">高亮的颜色</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TreeViewHelper.AttachMenu(System.Windows.Forms.TreeView,System.Windows.Forms.ContextMenuStrip,System.Predicate{System.Windows.Forms.TreeNode})">
            <summary>
            添加右键菜单
            <para>eg: treeF18.AttachMenu(contextMenuTree, n => n != null);</para>
            </summary>
            <param name="treeView">TreeView</param>
            <param name="contextMenu">ContextMenuStrip</param>
            <param name="showContextMenuHanlder">显示ContextMenuStrip规则委托</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TreeViewHelper.CheckNodeExist(System.Windows.Forms.TreeView,System.String)">
            <summary>
            检查节点文本是否存在
            </summary>
            <param name="tree">TreeView</param>
            <param name="key">节点文本</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.TreeViewHelper.CheckNodeExist(System.Windows.Forms.TreeNode,System.String)">
            <summary>
            检查节点是否存在
            </summary>
            <param name="node">The node.</param>
            <param name="key">The key.</param>
            <returns>是否存在</returns>
            日期：2015-10-13 13:46
            备注：
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.UIHelper">
            <summary>
            WinForm UI帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.UIHelper.UIThread(System.Windows.Forms.Control,System.Windows.Forms.MethodInvoker)">
            <summary>
            控件线程安全
            </summary>
            <param name="control">Control</param>
            <param name="code">委托</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.UIHelper.UIThread``1(``0,System.Action{``0})">
            <summary>
            控件先线程安全
            参考:http://www.codeproject.com/Articles/37413/A-Generic-Method-for-Cross-thread-Winforms-Access#xx3867544xx
            </summary>
            <typeparam name="T">Control</typeparam>
            <param name="cont">Control</param>
            <param name="action">委托</param>
        </member>
        <member name="T:YanZhiwei.DotNet2.Utilities.WinForm.WebBrowserHelper">
            <summary>
             WebBrowser 帮助类
            </summary>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.WebBrowserHelper.GetCookieContainer(System.Windows.Forms.WebBrowser)">
            <summary>
            从WebBrowser中获取CookieContainer
            </summary>
            <param name="webBrowser">WebBrowser对象</param>
            <returns>CookieContainer</returns>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.WebBrowserHelper.InsertCookie(System.Windows.Forms.WebBrowser,System.String,System.Net.Cookie)">
            <summary>
            WebBrowser添加cookie
            </summary>
            <param name="webBrowser">WebBrowser</param>
            <param name="url">url</param>
            <param name="cookie">cookie</param>
        </member>
        <member name="M:YanZhiwei.DotNet2.Utilities.WinForm.WebBrowserHelper.InternetSetCookie(System.String,System.String,System.String)">
            <summary>
            Internets the set cookie.
            </summary>
            <param name="urlName">Name of the URL.</param>
            <param name="cookieName">Name of the cookie.</param>
            <param name="cookieData">The cookie data.</param>
            <returns>设置是否成功</returns>
            日期：2015-10-13 13:44
            备注：
        </member>
        <member name="T:System.Tuple">
            <summary>
            .Net 2.0,.Net 3.5下Tuple实现
            </summary>
        </member>
        <member name="M:System.Tuple.Create``1(``0)">
            <summary>
            Creates the specified t1.
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <param name="t1">The t1.</param>
            <returns>Tuple</returns>
        </member>
        <member name="M:System.Tuple.Create``2(``0,``1)">
            <summary>
            Creates the specified t1.
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <typeparam name="T2">The type of the 2.</typeparam>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns>Tuple</returns>
        </member>
        <member name="M:System.Tuple.Create``3(``0,``1,``2)">
            <summary>
            Creates the specified t1.
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <typeparam name="T2">The type of the 2.</typeparam>
            <typeparam name="T3">The type of the 3.</typeparam>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <param name="t3">The t3.</param>
            <returns>Tuple</returns>
        </member>
        <member name="M:System.Tuple.Create``4(``0,``1,``2,``3)">
            <summary>
            Creates the specified t1.
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <typeparam name="T2">The type of the 2.</typeparam>
            <typeparam name="T3">The type of the 3.</typeparam>
            <typeparam name="T4">The type of the 4.</typeparam>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <param name="t3">The t3.</param>
            <param name="t4">The t4.</param>
            <returns>Tuple</returns>
        </member>
        <member name="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates the specified t1.
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <typeparam name="T2">The type of the 2.</typeparam>
            <typeparam name="T3">The type of the 3.</typeparam>
            <typeparam name="T4">The type of the 4.</typeparam>
            <typeparam name="T5">The type of the 5.</typeparam>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <param name="t3">The t3.</param>
            <param name="t4">The t4.</param>
            <param name="t5">The t5.</param>
            <returns>Tuple</returns>
        </member>
        <member name="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates the specified t1.
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <typeparam name="T2">The type of the 2.</typeparam>
            <typeparam name="T3">The type of the 3.</typeparam>
            <typeparam name="T4">The type of the 4.</typeparam>
            <typeparam name="T5">The type of the 5.</typeparam>
            <typeparam name="T6">The type of the 6.</typeparam>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <param name="t3">The t3.</param>
            <param name="t4">The t4.</param>
            <param name="t5">The t5.</param>
            <param name="t6">The t6.</param>
            <returns>Tuple</returns>
        </member>
        <member name="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Creates the specified t1.
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <typeparam name="T2">The type of the 2.</typeparam>
            <typeparam name="T3">The type of the 3.</typeparam>
            <typeparam name="T4">The type of the 4.</typeparam>
            <typeparam name="T5">The type of the 5.</typeparam>
            <typeparam name="T6">The type of the 6.</typeparam>
            <typeparam name="T7">The type of the 7.</typeparam>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <param name="t3">The t3.</param>
            <param name="t4">The t4.</param>
            <param name="t5">The t5.</param>
            <param name="t6">The t6.</param>
            <param name="t7">The t7.</param>
            <returns>Tuple</returns>
        </member>
        <member name="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Creates the specified t1.
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <typeparam name="T2">The type of the 2.</typeparam>
            <typeparam name="T3">The type of the 3.</typeparam>
            <typeparam name="T4">The type of the 4.</typeparam>
            <typeparam name="T5">The type of the 5.</typeparam>
            <typeparam name="T6">The type of the 6.</typeparam>
            <typeparam name="T7">The type of the 7.</typeparam>
            <typeparam name="TRest">The type of the rest.</typeparam>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <param name="t3">The t3.</param>
            <param name="t4">The t4.</param>
            <param name="t5">The t5.</param>
            <param name="t6">The t6.</param>
            <param name="t7">The t7.</param>
            <param name="Rest">The rest.</param>
            <returns>Tuple</returns>
        </member>
        <member name="T:System.Tuple`1">
            <summary>
            Tuple
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            时间：2015-12-25 17:25
            备注：
        </member>
        <member name="M:System.Tuple`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Tuple`1"/> class.
            </summary>
            <param name="Item1">The item1.</param>
        </member>
        <member name="P:System.Tuple`1.Item1">
            <summary>
            Gets or sets the item1.
            </summary>
        </member>
        <member name="T:System.Tuple`2">
            <summary>
            Tuple
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <typeparam name="T2">The type of the 2.</typeparam>
        </member>
        <member name="M:System.Tuple`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Tuple`2"/> class.
            </summary>
            <param name="Item1">The item1.</param>
            <param name="Item2">The item2.</param>
        </member>
        <member name="P:System.Tuple`2.Item1">
            <summary>
            Gets or sets the item1.
            </summary>
        </member>
        <member name="P:System.Tuple`2.Item2">
            <summary>
            Gets or sets the item2.
            </summary>
        </member>
        <member name="T:System.Tuple`3">
            <summary>
            Tuple
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <typeparam name="T2">The type of the 2.</typeparam>
            <typeparam name="T3">The type of the 3.</typeparam>
        </member>
        <member name="M:System.Tuple`3.#ctor(`0,`1,`2)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Tuple`3"/> class.
            </summary>
            <param name="Item1">The item1.</param>
            <param name="Item2">The item2.</param>
            <param name="Item3">The item3.</param>
        </member>
        <member name="P:System.Tuple`3.Item1">
            <summary>
            Gets or sets the item1.
            </summary>
        </member>
        <member name="P:System.Tuple`3.Item2">
            <summary>
            Gets or sets the item2.
            </summary>
        </member>
        <member name="P:System.Tuple`3.Item3">
            <summary>
            Gets or sets the item3.
            </summary>
        </member>
        <member name="T:System.Tuple`4">
            <summary>
            Tuple
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <typeparam name="T2">The type of the 2.</typeparam>
            <typeparam name="T3">The type of the 3.</typeparam>
            <typeparam name="T4">The type of the 4.</typeparam>
        </member>
        <member name="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Tuple`4"/> class.
            </summary>
            <param name="Item1">The item1.</param>
            <param name="Item2">The item2.</param>
            <param name="Item3">The item3.</param>
            <param name="Item4">The item4.</param>
        </member>
        <member name="P:System.Tuple`4.Item1">
            <summary>
            Gets or sets the item1.
            </summary>
        </member>
        <member name="P:System.Tuple`4.Item2">
            <summary>
            Gets or sets the item2.
            </summary>
        </member>
        <member name="P:System.Tuple`4.Item3">
            <summary>
            Gets or sets the item3.
            </summary>
        </member>
        <member name="P:System.Tuple`4.Item4">
            <summary>
            Gets or sets the item4.
            </summary>
        </member>
        <member name="T:System.Tuple`5">
            <summary>
            Tuple
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <typeparam name="T2">The type of the 2.</typeparam>
            <typeparam name="T3">The type of the 3.</typeparam>
            <typeparam name="T4">The type of the 4.</typeparam>
            <typeparam name="T5">The type of the 5.</typeparam>
        </member>
        <member name="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Tuple`5"/> class.
            </summary>
            <param name="Item1">The item1.</param>
            <param name="Item2">The item2.</param>
            <param name="Item3">The item3.</param>
            <param name="Item4">The item4.</param>
            <param name="Item5">The item5.</param>
        </member>
        <member name="P:System.Tuple`5.Item1">
            <summary>
            Gets or sets the item1.
            </summary>
        </member>
        <member name="P:System.Tuple`5.Item2">
            <summary>
            Gets or sets the item2.
            </summary>
        </member>
        <member name="P:System.Tuple`5.Item3">
            <summary>
            Gets or sets the item3.
            </summary>
        </member>
        <member name="P:System.Tuple`5.Item4">
            <summary>
            Gets or sets the item4.
            </summary>
        </member>
        <member name="P:System.Tuple`5.Item5">
            <summary>
            Gets or sets the item5.
            </summary>
        </member>
        <member name="T:System.Tuple`6">
            <summary>
            Tuple
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <typeparam name="T2">The type of the 2.</typeparam>
            <typeparam name="T3">The type of the 3.</typeparam>
            <typeparam name="T4">The type of the 4.</typeparam>
            <typeparam name="T5">The type of the 5.</typeparam>
            <typeparam name="T6">The type of the 6.</typeparam>
        </member>
        <member name="M:System.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Tuple`6"/> class.
            </summary>
            <param name="Item1">The item1.</param>
            <param name="Item2">The item2.</param>
            <param name="Item3">The item3.</param>
            <param name="Item4">The item4.</param>
            <param name="Item5">The item5.</param>
            <param name="Item6">The item6.</param>
        </member>
        <member name="P:System.Tuple`6.Item1">
            <summary>
            Gets or sets the item1.
            </summary>
        </member>
        <member name="P:System.Tuple`6.Item2">
            <summary>
            Gets or sets the item2.
            </summary>
        </member>
        <member name="P:System.Tuple`6.Item3">
            <summary>
            Gets or sets the item3.
            </summary>
        </member>
        <member name="P:System.Tuple`6.Item4">
            <summary>
            Gets or sets the item4.
            </summary>
        </member>
        <member name="P:System.Tuple`6.Item5">
            <summary>
            Gets or sets the item5.
            </summary>
        </member>
        <member name="P:System.Tuple`6.Item6">
            <summary>
            Gets or sets the item6.
            </summary>
        </member>
        <member name="T:System.Tuple`7">
            <summary>
            Tuple
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <typeparam name="T2">The type of the 2.</typeparam>
            <typeparam name="T3">The type of the 3.</typeparam>
            <typeparam name="T4">The type of the 4.</typeparam>
            <typeparam name="T5">The type of the 5.</typeparam>
            <typeparam name="T6">The type of the 6.</typeparam>
            <typeparam name="T7">The type of the 7.</typeparam>
        </member>
        <member name="M:System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Tuple`7"/> class.
            </summary>
            <param name="Item1">The item1.</param>
            <param name="Item2">The item2.</param>
            <param name="Item3">The item3.</param>
            <param name="Item4">The item4.</param>
            <param name="Item5">The item5.</param>
            <param name="Item6">The item6.</param>
            <param name="Item7">The item7.</param>
        </member>
        <member name="P:System.Tuple`7.Item1">
            <summary>
            Gets or sets the item1.
            </summary>
        </member>
        <member name="P:System.Tuple`7.Item2">
            <summary>
            Gets or sets the item2.
            </summary>
        </member>
        <member name="P:System.Tuple`7.Item3">
            <summary>
            Gets or sets the item3.
            </summary>
        </member>
        <member name="P:System.Tuple`7.Item4">
            <summary>
            Gets or sets the item4.
            </summary>
        </member>
        <member name="P:System.Tuple`7.Item5">
            <summary>
            Gets or sets the item5.
            </summary>
        </member>
        <member name="P:System.Tuple`7.Item6">
            <summary>
            Gets or sets the item6.
            </summary>
        </member>
        <member name="P:System.Tuple`7.Item7">
            <summary>
            Gets or sets the item7.
            </summary>
        </member>
        <member name="T:System.Tuple`8">
            <summary>
            Tuple
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <typeparam name="T2">The type of the 2.</typeparam>
            <typeparam name="T3">The type of the 3.</typeparam>
            <typeparam name="T4">The type of the 4.</typeparam>
            <typeparam name="T5">The type of the 5.</typeparam>
            <typeparam name="T6">The type of the 6.</typeparam>
            <typeparam name="T7">The type of the 7.</typeparam>
            <typeparam name="TRest">The type of the rest.</typeparam>
        </member>
        <member name="M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Tuple`8"/> class.
            </summary>
            <param name="Item1">The item1.</param>
            <param name="Item2">The item2.</param>
            <param name="Item3">The item3.</param>
            <param name="Item4">The item4.</param>
            <param name="Item5">The item5.</param>
            <param name="Item6">The item6.</param>
            <param name="Item7">The item7.</param>
            <param name="Rest">The rest.</param>
        </member>
        <member name="P:System.Tuple`8.Item1">
            <summary>
            Gets or sets the item1.
            </summary>
        </member>
        <member name="P:System.Tuple`8.Item2">
            <summary>
            Gets or sets the item2.
            </summary>
        </member>
        <member name="P:System.Tuple`8.Item3">
            <summary>
            Gets or sets the item3.
            </summary>
        </member>
        <member name="P:System.Tuple`8.Item4">
            <summary>
            Gets or sets the item4.
            </summary>
        </member>
        <member name="P:System.Tuple`8.Item5">
            <summary>
            Gets or sets the item5.
            </summary>
        </member>
        <member name="P:System.Tuple`8.Item6">
            <summary>
            Gets or sets the item6.
            </summary>
        </member>
        <member name="P:System.Tuple`8.Item7">
            <summary>
            Gets or sets the item7.
            </summary>
        </member>
        <member name="P:System.Tuple`8.Rest">
            <summary>
            Gets or sets the rest.
            </summary>
        </member>
    </members>
</doc>
